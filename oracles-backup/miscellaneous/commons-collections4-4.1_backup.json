[
  {
    "id":7073,
    "oracle":"Arrays.stream(map.values().toArray()).anyMatch(jdVar -> jdVar == null);",
    "oracleType":"EXCEPT_POST",
    "projectName":"commons-collections4-4.1",
    "packageName":"org.apache.commons.collections4.functors",
    "className":"SwitchClosure",
    "javadocTag":"@throws NullPointerException if any closure in the map is null",
    "methodJavadoc":"    /**\n     * Create a new Closure that calls one of the closures depending\n     * on the predicates.\n     * <p>\n     * The Map consists of Predicate keys and Closure values. A closure\n     * is called if its matching predicate returns true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * closure is called. The default closure is set in the map with a\n     * null key. The ordering is that of the iterator() method on the entryset\n     * collection of the map.\n     *\n     * @param <E> the type that the closure acts on\n     * @param predicatesAndClosures  a map of predicates to closures\n     * @return the <code>switch</code> closure\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any closure in the map is null\n     * @throws ClassCastException  if the map elements are of the wrong type\n     */",
    "methodSourceCode":"public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures){\n    if (predicatesAndClosures == null) {\n        throw new NullPointerException(\"The predicate and closure map must not be null\");\n    }\n    // convert to array like this to guarantee iterator() ordering\n    final Closure<? super E> defaultClosure = predicatesAndClosures.remove(null);\n    final int size = predicatesAndClosures.size();\n    if (size == 0) {\n        return (Closure<E>) (defaultClosure == null ? NOPClosure.<E>nopClosure() : defaultClosure);\n    }\n    final Closure<E>[] closures = new Closure[size];\n    final Predicate<E>[] preds = new Predicate[size];\n    int i = 0;\n    for (final Map.Entry<Predicate<E>, Closure<E>> entry : predicatesAndClosures.entrySet()) {\n        preds[i] = entry.getKey();\n        closures[i] = entry.getValue();\n        i++;\n    }\n    return new SwitchClosure<E>(false, preds, closures, defaultClosure);\n}",
    "classJavadoc":"/**\n * Closure implementation calls the closure whose predicate returns true,\n * like a switch statement.\n *\n * @since 3.0\n * @version $Id: SwitchClosure.java 1686855 2015-06-22 13:00:27Z tn $\n */",
    "classSourceCode":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.functors;\n\nimport java.io.Serializable;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.Closure;\nimport org.apache.commons.collections4.Predicate;\n\n/**\n * Closure implementation calls the closure whose predicate returns true,\n * like a switch statement.\n *\n * @since 3.0\n * @version $Id: SwitchClosure.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic class SwitchClosure<E> implements Closure<E>, Serializable {\n\n    /** Serial version UID */\n    private static final long serialVersionUID = 3518477308466486130L;\n\n    /** The tests to consider */\n    private final Predicate<? super E>[] iPredicates;\n    /** The matching closures to call */\n    private final Closure<? super E>[] iClosures;\n    /** The default closure to call if no tests match */\n    private final Closure<? super E> iDefault;\n\n    /**\n     * Factory method that performs validation and copies the parameter arrays.\n     *\n     * @param <E> the type that the closure acts on\n     * @param predicates  array of predicates, cloned, no nulls\n     * @param closures  matching array of closures, cloned, no nulls\n     * @param defaultClosure  the closure to use if no match, null means nop\n     * @return the <code>chained</code> closure\n     * @throws NullPointerException if array is null\n     * @throws NullPointerException if any element in the array is null\n     * @throws IllegalArgumentException if the array lengths of predicates and closures do not match\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates,\n                                               final Closure<? super E>[] closures,\n                                               final Closure<? super E> defaultClosure) {\n        FunctorUtils.validate(predicates);\n        FunctorUtils.validate(closures);\n        if (predicates.length != closures.length) {\n            throw new IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n        }\n        if (predicates.length == 0) {\n            return (Closure<E>) (defaultClosure == null ? NOPClosure.<E>nopClosure(): defaultClosure);\n        }\n        return new SwitchClosure<E>(predicates, closures, defaultClosure);\n    }\n\n    /**\n     * Create a new Closure that calls one of the closures depending\n     * on the predicates.\n     * <p>\n     * The Map consists of Predicate keys and Closure values. A closure\n     * is called if its matching predicate returns true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * closure is called. The default closure is set in the map with a\n     * null key. The ordering is that of the iterator() method on the entryset\n     * collection of the map.\n     *\n     * @param <E> the type that the closure acts on\n     * @param predicatesAndClosures  a map of predicates to closures\n     * @return the <code>switch</code> closure\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any closure in the map is null\n     * @throws ClassCastException  if the map elements are of the wrong type\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures) {\n        if (predicatesAndClosures == null) {\n            throw new NullPointerException(\"The predicate and closure map must not be null\");\n        }\n        // convert to array like this to guarantee iterator() ordering\n        final Closure<? super E> defaultClosure = predicatesAndClosures.remove(null);\n        final int size = predicatesAndClosures.size();\n        if (size == 0) {\n            return (Closure<E>) (defaultClosure == null ? NOPClosure.<E>nopClosure() : defaultClosure);\n        }\n        final Closure<E>[] closures = new Closure[size];\n        final Predicate<E>[] preds = new Predicate[size];\n        int i = 0;\n        for (final Map.Entry<Predicate<E>, Closure<E>> entry : predicatesAndClosures.entrySet()) {\n            preds[i] = entry.getKey();\n            closures[i] = entry.getValue();\n            i++;\n        }\n        return new SwitchClosure<E>(false, preds, closures, defaultClosure);\n    }\n\n    /**\n     * Hidden constructor for the use by the static factory methods.\n     *\n     * @param clone  if {@code true} the input arguments will be cloned\n     * @param predicates  array of predicates, no nulls\n     * @param closures  matching array of closures, no nulls\n     * @param defaultClosure  the closure to use if no match, null means nop\n     */\n    @SuppressWarnings(\"unchecked\")\n    private SwitchClosure(final boolean clone, final Predicate<? super E>[] predicates,\n                          final Closure<? super E>[] closures, final Closure<? super E> defaultClosure) {\n        super();\n        iPredicates = clone ? FunctorUtils.copy(predicates) : predicates;\n        iClosures = clone ? FunctorUtils.copy(closures) : closures;\n        iDefault = (Closure<? super E>) (defaultClosure == null ? NOPClosure.<E>nopClosure() : defaultClosure);\n    }\n\n    /**\n     * Constructor that performs no validation.\n     * Use <code>switchClosure</code> if you want that.\n     *\n     * @param predicates  array of predicates, cloned, no nulls\n     * @param closures  matching array of closures, cloned, no nulls\n     * @param defaultClosure  the closure to use if no match, null means nop\n     */\n    public SwitchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures,\n                         final Closure<? super E> defaultClosure) {\n        this(true, predicates, closures, defaultClosure);\n    }\n\n    /**\n     * Executes the closure whose matching predicate returns true\n     *\n     * @param input  the input object\n     */\n    public void execute(final E input) {\n        for (int i = 0; i < iPredicates.length; i++) {\n            if (iPredicates[i].evaluate(input) == true) {\n                iClosures[i].execute(input);\n                return;\n            }\n        }\n        iDefault.execute(input);\n    }\n\n    /**\n     * Gets the predicates.\n     *\n     * @return a copy of the predicates\n     * @since 3.1\n     */\n    public Predicate<? super E>[] getPredicates() {\n        return FunctorUtils.<E>copy(iPredicates);\n    }\n\n    /**\n     * Gets the closures.\n     *\n     * @return a copy of the closures\n     * @since 3.1\n     */\n    public Closure<? super E>[] getClosures() {\n        return FunctorUtils.<E>copy(iClosures);\n    }\n\n    /**\n     * Gets the default closure.\n     *\n     * @return the default closure\n     * @since 3.1\n     */\n    public Closure<? super E> getDefaultClosure() {\n        return iDefault;\n    }\n\n}\n",
    "tokensGeneralGrammar":[
      "null",
      "true",
      "false",
      ",",
      ".",
      ":",
      ";",
      "?",
      "(",
      ")",
      "jdVar",
      "stream",
      "Arrays",
      "allMatch",
      "noneMatch",
      "anyMatch",
      "~",
      ">>",
      "<<",
      ">>>",
      "|",
      "&",
      "^",
      "+",
      "-",
      "/",
      "*",
      "%",
      "&&",
      "||",
      ">=",
      "<=",
      ">",
      "<",
      "==",
      "!=",
      "instanceof",
      "class",
      "methodResultID",
      "this"
    ],
    "tokensGeneralValuesGlobalDictionary":[
      [
        "0",
        "int"
      ],
      [
        "1",
        "int"
      ],
      [
        "-1",
        "int"
      ],
      [
        "0.0",
        "double"
      ],
      [
        "1.0",
        "double"
      ],
      [
        "-1.0",
        "double"
      ],
      [
        "\"\"",
        "String"
      ],
      [
        "\" \"",
        "String"
      ]
    ],
    "tokensProjectClasses":[
      [
        "BidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "Equator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiSet",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "FunctorException",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractDualBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractOrderedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualLinkedHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractSortedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualTreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "TreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "MultiMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedCollection",
        "org.apache.commons.collections4"
      ],
      [
        "UnmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "CompositeCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "TransformedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "PredicatedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "IndexedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "SynchronizedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "UnmodifiableCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "AbstractCollectionDecorator",
        "org.apache.commons.collections4.collection"
      ],
      [
        "OrderedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "FactoryUtils",
        "org.apache.commons.collections4"
      ],
      [
        "IterableGet",
        "org.apache.commons.collections4"
      ],
      [
        "ListUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Closure",
        "org.apache.commons.collections4"
      ],
      [
        "IterableSortedMap",
        "org.apache.commons.collections4"
      ],
      [
        "MapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Transformer",
        "org.apache.commons.collections4"
      ],
      [
        "DefaultEquator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "StringValueTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateDecorator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IdentityPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ClosureTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FunctorUtils",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "WhileClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ForClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsTruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformedPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NonePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OrPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "MapTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AndPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PrototypeFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AbstractQuantifierPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstanceofPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InvokerTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CloneTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ComparatorPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CatchAndRethrowClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AllPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsFalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AnyPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FactoryTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotNullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "UniquePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OnePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "EqualPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ResettableListIterator",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedIterator",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorChain",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "BooleanComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ReverseComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ComparableComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "TransformingComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "FixedOrderComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "NullComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "CollectionUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ListValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractIterableGetMapDecorator",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "TransformedSplitMap",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "Factory",
        "org.apache.commons.collections4"
      ],
      [
        "IterableUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Bag",
        "org.apache.commons.collections4"
      ],
      [
        "Predicate",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBag",
        "org.apache.commons.collections4"
      ],
      [
        "TrieUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ClosureUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "UnmodifiableTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "KeyAnalyzer",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractPatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractBitwiseTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "StringKeyAnalyzer",
        "org.apache.commons.collections4.trie.analyzer"
      ],
      [
        "TransformedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractLinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "Flat3Map",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "DefaultedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceIdentityMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractSortedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractInputCheckedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazySortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CaseInsensitiveMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractHashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractOrderedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "EntrySetToMapIteratorAdapter",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractIterableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ListOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "SingletonMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableEntrySet",
        "org.apache.commons.collections4.map"
      ],
      [
        "StaticBucketMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiKeyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "HashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PassiveExpiringMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiValueMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LRUMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "TransformedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CompositeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiKey",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntryDecorator",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "TiedMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiSetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "MapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "UnmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "HashSetValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "TransformedMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractSetValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractListValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "ArrayListValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractMultiValuedMapDecorator",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "LazyList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractSerializableListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "TreeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "SetUniqueList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "NodeCachingLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "UnmodifiableList",
        "org.apache.commons.collections4.list"
      ],
      [
        "FixedSizeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "TransformedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "GrowthList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "CursorableLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "PredicatedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "OrderedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractQueueDecorator",
        "org.apache.commons.collections4.queue"
      ],
      [
        "TransformedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "UnmodifiableQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "CircularFifoQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "PredicatedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "FluentIterable",
        "org.apache.commons.collections4"
      ],
      [
        "TransformerUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PredicateUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ResettableIterator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "ArrayStack",
        "org.apache.commons.collections4"
      ],
      [
        "Put",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedMapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "TransformedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "CompositeSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "ListOrderedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSerializableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "MapBackedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSortedSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractNavigableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "IterableMap",
        "org.apache.commons.collections4"
      ],
      [
        "EnumerationUtils",
        "org.apache.commons.collections4"
      ],
      [
        "DeleteCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsHandler",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "InsertCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "SequencesComparator",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsFinder",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "KeepCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "CommandVisitor",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditScript",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "QueueUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SetValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SynchronizedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractMapBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TreeBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "SynchronizedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractSortedBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "PredicatedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSetDecorator",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMapMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "UnmodifiableMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "SynchronizedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "BagUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Unmodifiable",
        "org.apache.commons.collections4"
      ],
      [
        "Get",
        "org.apache.commons.collections4"
      ],
      [
        "Trie",
        "org.apache.commons.collections4"
      ],
      [
        "MultiMap",
        "org.apache.commons.collections4"
      ],
      [
        "KeyValue",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractListIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ZippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "CollatingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UniqueFilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ReverseListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "BoundedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "TransformIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "NodeListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LazyIteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PeekingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectGraphIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PermutationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EnumerationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorIterable",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorEnumeration",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ListIteratorWrapper",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SkippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EntrySetMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PushbackIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractUntypedIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractOrderedMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SplitMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedMap",
        "org.apache.commons.collections4"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticNonVoidMethods":[
      [
        "emptyIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> emptyIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> emptyListIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "singletonIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> singletonIterator(final E object)"
      ],
      [
        "singletonListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> singletonListIterator(final E object)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E... array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)"
      ],
      [
        "unmodifiableListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "objectGraphIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)"
      ],
      [
        "filteredIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "filteredListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)"
      ],
      [
        "loopingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)"
      ],
      [
        "loopingListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final NodeList nodeList)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final Node node)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "skippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)"
      ],
      [
        "asIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "asMultipleUseIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "toListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Object[] toArray(final Iterator<?> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)"
      ],
      [
        "getIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Iterator<?> getIterator(final Object obj)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static boolean isEmpty(final Iterator<?> iterator)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean contains(final Iterator<E> iterator, final Object object)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E get(final Iterator<E> iterator, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static int size(final Iterator<?> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "naturalComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)"
      ],
      [
        "reversedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)"
      ],
      [
        "nullLowComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)"
      ],
      [
        "nullHighComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)"
      ],
      [
        "transformedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "min",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "max",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "unmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableBidiMap",
        "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableOrderedBidiMap",
        "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableSortedBidiMap",
        "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)"
      ],
      [
        "emptyMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static boolean isEmpty(final MultiValuedMap<?, ?> map)"
      ],
      [
        "getCollection",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsList",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsSet",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsBag",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "newListValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()"
      ],
      [
        "newSetValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformedMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "builder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> builder(final Predicate<? super E> predicate)"
      ],
      [
        "notNullBuilder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> notNullBuilder()"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)"
      ],
      [
        "uniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "nonUniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4.collection",
        "SynchronizedCollection",
        "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableCollection",
        "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "nullFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> nullFactory()"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> emptyIfNull(final List<T> list)"
      ],
      [
        "defaultIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)"
      ],
      [
        "sum",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "isEqualList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)"
      ],
      [
        "hashCodeForList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static int hashCodeForList(final Collection<?> list)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "synchronizedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> synchronizedList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> fixedSizeList(final List<E> list)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<List<T>> partition(final List<T> list, final int size)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<? super K, V> map, final K key)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)"
      ],
      [
        "toProperties",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Properties toProperties(final Map<K, V> map)"
      ],
      [
        "toMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)"
      ],
      [
        "invertMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)"
      ],
      [
        "putAll",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isEmpty(final Map<?, ?> map)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isNotEmpty(final Map<?, ?> map)"
      ],
      [
        "synchronizedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "orderedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)"
      ],
      [
        "synchronizedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "iterableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)"
      ],
      [
        "iterableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)"
      ],
      [
        "defaultEquator",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static <T> DefaultEquator<T> defaultEquator()"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4.functors",
        "StringValueTransformer",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4.functors",
        "IdentityPredicate",
        "public static <T> Predicate<T> identityPredicate(final T object)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "closureTransformer",
        "org.apache.commons.collections4.functors",
        "ClosureTransformer",
        "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)"
      ],
      [
        "validate",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <E> Closure<E>[] copy(final Closure<? super E>... closures)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Closure<T> coerce(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "transformerPredicate",
        "org.apache.commons.collections4.functors",
        "TransformerPredicate",
        "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "predicateTransformer",
        "org.apache.commons.collections4.functors",
        "PredicateTransformer",
        "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4.functors",
        "WhileClosure",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4.functors",
        "ForClosure",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsTruePredicate",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4.functors",
        "TransformedPredicate",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)"
      ],
      [
        "transformerClosure",
        "org.apache.commons.collections4.functors",
        "TransformerClosure",
        "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4.functors",
        "OrPredicate",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4.functors",
        "MapTransformer",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4.functors",
        "AndPredicate",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4.functors",
        "PrototypeFactory",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "instanceOfPredicate",
        "org.apache.commons.collections4.functors",
        "InstanceofPredicate",
        "public static Predicate<Object> instanceOfPredicate(final Class<?> type)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4.functors",
        "NotPredicate",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsFalsePredicate",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4.functors",
        "NullIsExceptionPredicate",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "factoryTransformer",
        "org.apache.commons.collections4.functors",
        "FactoryTransformer",
        "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4.functors",
        "UniquePredicate",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4.functors",
        "InstantiateFactory",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "getTrueFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getTrueFirstComparator()"
      ],
      [
        "getFalseFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getFalseFirstComparator()"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator booleanComparator(final boolean trueFirst)"
      ],
      [
        "comparableComparator",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()"
      ],
      [
        "emptyCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyCollection()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)"
      ],
      [
        "containsAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "containsAny",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "getCardinalityMap",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)"
      ],
      [
        "isSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isProperSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)"
      ],
      [
        "cardinality",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "filterInverse",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "exists",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "addIgnoreNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterator<T> iterator, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static Object get(final Object object, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int size(final Object object)"
      ],
      [
        "sizeIsEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean sizeIsEmpty(final Object object)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEmpty(final Collection<?> coll)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isNotEmpty(final Collection<?> coll)"
      ],
      [
        "isFull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isFull(final Collection<? extends Object> coll)"
      ],
      [
        "maxSize",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int maxSize(final Collection<? extends Object> coll)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)"
      ],
      [
        "permutations",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<List<E>> permutations(final Collection<E> collection)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "extractSingleton",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> E extractSingleton(final Collection<E> collection)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.splitmap",
        "TransformedSplitMap",
        "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)"
      ],
      [
        "emptyIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIterable()"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "filteredIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "boundedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)"
      ],
      [
        "loopingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)"
      ],
      [
        "reversedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)"
      ],
      [
        "skippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)"
      ],
      [
        "transformedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "uniqueIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)"
      ],
      [
        "unmodifiableIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static boolean isEmpty(final Iterable<?> iterable)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<E> iterable, final Object object)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)"
      ],
      [
        "frequency",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static int size(final Iterable<?> iterable)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> List<E> toList(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4",
        "TrieUtils",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "asClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)"
      ],
      [
        "doWhileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "switchMapClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4.trie",
        "UnmodifiableTrie",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "isOutOfBoundsIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isOutOfBoundsIndex(final int bitIndex)"
      ],
      [
        "isEqualBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isEqualBitKey(final int bitIndex)"
      ],
      [
        "isNullBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isNullBitKey(final int bitIndex)"
      ],
      [
        "isValidBitIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isValidBitIndex(final int bitIndex)"
      ],
      [
        "isValidUplink",
        "org.apache.commons.collections4.trie",
        "AbstractPatriciaTrie",
        "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)"
      ],
      [
        "compare",
        "org.apache.commons.collections4.trie",
        "AbstractBitwiseTrie",
        "static boolean compare(final Object a, final Object b)"
      ],
      [
        "transformingSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4.map",
        "PredicatedMap",
        "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4.map",
        "FixedSizeSortedMap",
        "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableSortedMap",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4.map",
        "PredicatedSortedMap",
        "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4.map",
        "FixedSizeMap",
        "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "unmodifiableOrderedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableOrderedMap",
        "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableMap",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "listOrderedMap",
        "org.apache.commons.collections4.map",
        "ListOrderedMap",
        "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableEntrySet",
        "org.apache.commons.collections4.map",
        "UnmodifiableEntrySet",
        "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "AbstractReferenceMap",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "ReferenceStrength",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "multiKeyMap",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "emptyMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> emptyMultiSet()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap",
        "UnmodifiableMultiValuedMap",
        "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4.list",
        "LazyList",
        "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "setUniqueList",
        "org.apache.commons.collections4.list",
        "SetUniqueList",
        "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4.list",
        "UnmodifiableList",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4.list",
        "FixedSizeList",
        "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)"
      ],
      [
        "transformingList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "growthList",
        "org.apache.commons.collections4.list",
        "GrowthList",
        "public static <E> GrowthList<E> growthList(final List<E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4.list",
        "PredicatedList",
        "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4.queue",
        "UnmodifiableQueue",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4.queue",
        "PredicatedQueue",
        "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)"
      ],
      [
        "empty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> empty()"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T singleton)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T... elements)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final Iterable<T> iterable)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)"
      ],
      [
        "switchMapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> equalPredicate(final T value)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> identityPredicate(final T value)"
      ],
      [
        "instanceofPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static Predicate<Object> instanceofPredicate(final Class<?> type)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName)"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "eitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "neitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "asPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "emptySet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> emptySet()"
      ],
      [
        "emptySortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> emptySortedSet()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> Set<T> emptyIfNull(final Set<T> set)"
      ],
      [
        "isEqualSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)"
      ],
      [
        "hashCodeForSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> int hashCodeForSet(final Collection<T> set)"
      ],
      [
        "newIdentityHashSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> newIdentityHashSet()"
      ],
      [
        "synchronizedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> synchronizedSet(final Set<E> set)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "orderedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> orderedSet(final Set<E> set)"
      ],
      [
        "synchronizedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "difference",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "transformingSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformingNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4.set",
        "PredicatedNavigableSet",
        "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSet",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSortedSet",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSortedSet",
        "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSet",
        "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableNavigableSet",
        "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "transformingSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <T> T get(final Enumeration<T> e, final int index)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static List<String> toList(final StringTokenizer stringTokenizer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> emptyQueue()"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedBag",
        "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4.bag",
        "CollectionBag",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableBag",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedSortedBag",
        "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableSortedBag",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedBag",
        "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedSortedBag",
        "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "collectionSortedBag",
        "org.apache.commons.collections4.bag",
        "CollectionSortedBag",
        "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4.multiset",
        "PredicatedMultiSet",
        "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4.multiset",
        "UnmodifiableMultiSet",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4.multiset",
        "SynchronizedMultiSet",
        "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> emptyBag()"
      ],
      [
        "emptySortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> emptySortedBag()"
      ],
      [
        "resettableEmptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ResettableListIterator<E> resettableEmptyListIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ListIterator<E> emptyListIterator()"
      ],
      [
        "unmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableIterator",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4.iterators",
        "PeekingIterator",
        "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "umodifiableListIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableListIterator",
        "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableMapIterator",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)"
      ],
      [
        "resettableEmptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> ResettableIterator<E> resettableEmptyIterator()"
      ],
      [
        "emptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> Iterator<E> emptyIterator()"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4.iterators",
        "PushbackIterator",
        "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "readableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)"
      ],
      [
        "writableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticAttributes":[
      [
        "EMPTY_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_LIST_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;"
      ],
      [
        "EMPTY_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;"
      ],
      [
        "NATURAL_COMPARATOR",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();"
      ],
      [
        "EMPTY_MULTI_VALUED_MAP",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));"
      ],
      [
        "EMPTY_SORTED_MAP",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();"
      ],
      [
        "HASHCODE_NULL",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final int HASHCODE_NULL = -1;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static final Closure INSTANCE = new ExceptionClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static final Closure INSTANCE = new NOPClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static final Predicate INSTANCE = new NullPredicate<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static final Transformer INSTANCE = new NOPTransformer<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static final Factory INSTANCE = new ExceptionFactory<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static final Predicate INSTANCE = new FalsePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static final Transformer INSTANCE = new CloneTransformer<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static final Predicate INSTANCE = new TruePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static final Predicate INSTANCE = new NotNullPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static final ComparableComparator INSTANCE = new ComparableComparator();"
      ],
      [
        "EMPTY_COLLECTION",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());"
      ],
      [
        "EMPTY_ITERABLE",
        "org.apache.commons.collections4",
        "IterableUtils",
        "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};"
      ],
      [
        "NULL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int NULL_BIT_KEY = -1;"
      ],
      [
        "EQUAL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int EQUAL_BIT_KEY = -2;"
      ],
      [
        "OUT_OF_BOUNDS_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();"
      ],
      [
        "LENGTH",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final int LENGTH = Character.SIZE;"
      ],
      [
        "NO_NEXT_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";"
      ],
      [
        "NO_PREVIOUS_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";"
      ],
      [
        "REMOVE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";"
      ],
      [
        "GETKEY_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";"
      ],
      [
        "GETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";"
      ],
      [
        "SETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";"
      ],
      [
        "DEFAULT_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_CAPACITY = 16;"
      ],
      [
        "DEFAULT_THRESHOLD",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_THRESHOLD = 12;"
      ],
      [
        "DEFAULT_LOAD_FACTOR",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;"
      ],
      [
        "MAXIMUM_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int MAXIMUM_CAPACITY = 1 << 30;"
      ],
      [
        "NULL",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final Object NULL = new Object();"
      ],
      [
        "DEFAULT_MAX_SIZE",
        "org.apache.commons.collections4.map",
        "LRUMap",
        "protected static final int DEFAULT_MAX_SIZE = 100;"
      ],
      [
        "EMPTY_MULTISET",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());"
      ],
      [
        "EMPTY_SORTED_SET",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());"
      ],
      [
        "EMPTY_QUEUE",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());"
      ],
      [
        "EMPTY_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());"
      ],
      [
        "EMPTY_SORTED_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;"
      ]
    ],
    "tokensMethodJavadocValues":[

    ],
    "tokensMethodArguments":[
      [
        "predicatesAndClosures",
        "java.util.Map",
        "Map<Predicate<E>, Closure<E>>"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods":[
      [
        "getPredicates",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public Predicate<? super E>[] getPredicates()"
      ],
      [
        "hashCode",
        "java.lang",
        "Object",
        "public native int hashCode()"
      ],
      [
        "getClosures",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public Closure<? super E>[] getClosures()"
      ],
      [
        "getClass",
        "java.lang",
        "Object",
        "public final native Class<? extends Object> getClass()"
      ],
      [
        "getDefaultClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public Closure<? super E> getDefaultClosure()"
      ],
      [
        "toString",
        "java.lang",
        "Object",
        "public String toString()"
      ],
      [
        "equals",
        "java.lang",
        "Object",
        "public boolean equals(Object arg0)"
      ],
      [
        "clone",
        "java.lang",
        "Object",
        "protected native Object clone() throws CloneNotSupportedException"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public abstract V remove(Object arg0)"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public default boolean remove(Object arg0, Object arg1)"
      ],
      [
        "containsKey",
        "java.util",
        "Map",
        "public abstract boolean containsKey(Object arg0)"
      ],
      [
        "values",
        "java.util",
        "Map",
        "public abstract Collection<V> values()"
      ],
      [
        "putIfAbsent",
        "java.util",
        "Map",
        "public default V putIfAbsent(K arg0, V arg1)"
      ],
      [
        "hashCode",
        "java.util",
        "Map",
        "public abstract int hashCode()"
      ],
      [
        "put",
        "java.util",
        "Map",
        "public abstract V put(K arg0, V arg1)"
      ],
      [
        "equals",
        "java.util",
        "Map",
        "public abstract boolean equals(Object arg0)"
      ],
      [
        "isEmpty",
        "java.util",
        "Map",
        "public abstract boolean isEmpty()"
      ],
      [
        "computeIfPresent",
        "java.util",
        "Map",
        "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "merge",
        "java.util",
        "Map",
        "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)"
      ],
      [
        "size",
        "java.util",
        "Map",
        "public abstract int size()"
      ],
      [
        "keySet",
        "java.util",
        "Map",
        "public abstract Set<K> keySet()"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default boolean replace(K arg0, V arg1, V arg2)"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default V replace(K arg0, V arg1)"
      ],
      [
        "entrySet",
        "java.util",
        "Map",
        "public abstract Set<Map.Entry<K, V>> entrySet()"
      ],
      [
        "compute",
        "java.util",
        "Map",
        "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "get",
        "java.util",
        "Map",
        "public abstract V get(Object arg0)"
      ],
      [
        "getOrDefault",
        "java.util",
        "Map",
        "public default V getOrDefault(Object arg0, V arg1)"
      ],
      [
        "containsValue",
        "java.util",
        "Map",
        "public abstract boolean containsValue(Object arg0)"
      ],
      [
        "computeIfAbsent",
        "java.util",
        "Map",
        "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticAttributes":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticAttributes":[

    ]
  },
  {
    "id":7105,
    "oracle":";",
    "oracleType":"EXCEPT_POST",
    "projectName":"commons-collections4-4.1",
    "packageName":"org.apache.commons.collections4.functors",
    "className":"OnePredicate",
    "javadocTag":"@throws NullPointerException if any predicate in the array is null",
    "methodJavadoc":"    /**\n     * Factory to create the predicate.\n     *\n     * @param <T> the type that the predicate queries\n     * @param predicates  the predicates to check, cloned, not null\n     * @return the <code>one</code> predicate\n     * @throws NullPointerException if the predicates array is null\n     * @throws NullPointerException if any predicate in the array is null\n     */",
    "methodSourceCode":"public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates){\n    final Predicate<? super T>[] preds = FunctorUtils.validate(predicates);\n    return new OnePredicate<T>(preds);\n}",
    "classJavadoc":"/**\n * Predicate implementation that returns true if only one of the\n * predicates return true.\n * If the array of predicates is empty, then this predicate returns false.\n * <p>\n * NOTE: In versions prior to 3.2 an array size of zero or one\n * threw an exception.\n *\n * @since 3.0\n * @version $Id: OnePredicate.java 1686855 2015-06-22 13:00:27Z tn $\n */",
    "classSourceCode":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.functors;\n\nimport java.util.Collection;\n\nimport org.apache.commons.collections4.Predicate;\n\n/**\n * Predicate implementation that returns true if only one of the\n * predicates return true.\n * If the array of predicates is empty, then this predicate returns false.\n * <p>\n * NOTE: In versions prior to 3.2 an array size of zero or one\n * threw an exception.\n *\n * @since 3.0\n * @version $Id: OnePredicate.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class OnePredicate<T> extends AbstractQuantifierPredicate<T> {\n\n    /** Serial version UID */\n    private static final long serialVersionUID = -8125389089924745785L;\n\n    /**\n     * Factory to create the predicate.\n     * <p>\n     * If the array is size zero, the predicate always returns false.\n     * If the array is size one, then that predicate is returned.\n     *\n     * @param <T> the type that the predicate queries\n     * @param predicates  the predicates to check, cloned, not null\n     * @return the <code>any</code> predicate\n     * @throws NullPointerException if the predicates array is null\n     * @throws NullPointerException if any predicate in the array is null\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates) {\n        FunctorUtils.validate(predicates);\n        if (predicates.length == 0) {\n            return FalsePredicate.<T>falsePredicate();\n        }\n        if (predicates.length == 1) {\n            return (Predicate<T>) predicates[0];\n        }\n        return new OnePredicate<T>(FunctorUtils.copy(predicates));\n    }\n\n    /**\n     * Factory to create the predicate.\n     *\n     * @param <T> the type that the predicate queries\n     * @param predicates  the predicates to check, cloned, not null\n     * @return the <code>one</code> predicate\n     * @throws NullPointerException if the predicates array is null\n     * @throws NullPointerException if any predicate in the array is null\n     */\n    public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates) {\n        final Predicate<? super T>[] preds = FunctorUtils.validate(predicates);\n        return new OnePredicate<T>(preds);\n    }\n\n    /**\n     * Constructor that performs no validation.\n     * Use <code>onePredicate</code> if you want that.\n     *\n     * @param predicates  the predicates to check, not cloned, not null\n     */\n    public OnePredicate(final Predicate<? super T>... predicates) {\n        super(predicates);\n    }\n\n    /**\n     * Evaluates the predicate returning true if only one decorated predicate\n     * returns true.\n     *\n     * @param object  the input object\n     * @return true if only one decorated predicate returns true\n     */\n    public boolean evaluate(final T object) {\n        boolean match = false;\n        for (final Predicate<? super T> iPredicate : iPredicates) {\n            if (iPredicate.evaluate(object)) {\n                if (match) {\n                    return false;\n                }\n                match = true;\n            }\n        }\n        return match;\n    }\n\n}\n",
    "tokensGeneralGrammar":[
      "null",
      "true",
      "false",
      ",",
      ".",
      ":",
      ";",
      "?",
      "(",
      ")",
      "jdVar",
      "stream",
      "Arrays",
      "allMatch",
      "noneMatch",
      "anyMatch",
      "~",
      ">>",
      "<<",
      ">>>",
      "|",
      "&",
      "^",
      "+",
      "-",
      "/",
      "*",
      "%",
      "&&",
      "||",
      ">=",
      "<=",
      ">",
      "<",
      "==",
      "!=",
      "instanceof",
      "class",
      "methodResultID",
      "this"
    ],
    "tokensGeneralValuesGlobalDictionary":[
      [
        "0",
        "int"
      ],
      [
        "1",
        "int"
      ],
      [
        "-1",
        "int"
      ],
      [
        "0.0",
        "double"
      ],
      [
        "1.0",
        "double"
      ],
      [
        "-1.0",
        "double"
      ],
      [
        "\"\"",
        "String"
      ],
      [
        "\" \"",
        "String"
      ]
    ],
    "tokensProjectClasses":[
      [
        "BidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "Equator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiSet",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "FunctorException",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractDualBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractOrderedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualLinkedHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractSortedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualTreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "TreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "MultiMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedCollection",
        "org.apache.commons.collections4"
      ],
      [
        "UnmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "CompositeCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "TransformedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "PredicatedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "IndexedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "SynchronizedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "UnmodifiableCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "AbstractCollectionDecorator",
        "org.apache.commons.collections4.collection"
      ],
      [
        "OrderedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "FactoryUtils",
        "org.apache.commons.collections4"
      ],
      [
        "IterableGet",
        "org.apache.commons.collections4"
      ],
      [
        "ListUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Closure",
        "org.apache.commons.collections4"
      ],
      [
        "IterableSortedMap",
        "org.apache.commons.collections4"
      ],
      [
        "MapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Transformer",
        "org.apache.commons.collections4"
      ],
      [
        "DefaultEquator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "StringValueTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateDecorator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IdentityPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ClosureTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FunctorUtils",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "WhileClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ForClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsTruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformedPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NonePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OrPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "MapTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AndPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PrototypeFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AbstractQuantifierPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstanceofPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InvokerTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CloneTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ComparatorPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CatchAndRethrowClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AllPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsFalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AnyPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FactoryTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotNullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "UniquePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OnePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "EqualPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ResettableListIterator",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedIterator",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorChain",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "BooleanComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ReverseComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ComparableComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "TransformingComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "FixedOrderComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "NullComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "CollectionUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ListValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractIterableGetMapDecorator",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "TransformedSplitMap",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "Factory",
        "org.apache.commons.collections4"
      ],
      [
        "IterableUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Bag",
        "org.apache.commons.collections4"
      ],
      [
        "Predicate",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBag",
        "org.apache.commons.collections4"
      ],
      [
        "TrieUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ClosureUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "UnmodifiableTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "KeyAnalyzer",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractPatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractBitwiseTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "StringKeyAnalyzer",
        "org.apache.commons.collections4.trie.analyzer"
      ],
      [
        "TransformedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractLinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "Flat3Map",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "DefaultedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceIdentityMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractSortedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractInputCheckedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazySortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CaseInsensitiveMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractHashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractOrderedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "EntrySetToMapIteratorAdapter",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractIterableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ListOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "SingletonMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableEntrySet",
        "org.apache.commons.collections4.map"
      ],
      [
        "StaticBucketMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiKeyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "HashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PassiveExpiringMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiValueMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LRUMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "TransformedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CompositeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiKey",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntryDecorator",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "TiedMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiSetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "MapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "UnmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "HashSetValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "TransformedMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractSetValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractListValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "ArrayListValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractMultiValuedMapDecorator",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "LazyList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractSerializableListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "TreeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "SetUniqueList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "NodeCachingLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "UnmodifiableList",
        "org.apache.commons.collections4.list"
      ],
      [
        "FixedSizeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "TransformedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "GrowthList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "CursorableLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "PredicatedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "OrderedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractQueueDecorator",
        "org.apache.commons.collections4.queue"
      ],
      [
        "TransformedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "UnmodifiableQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "CircularFifoQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "PredicatedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "FluentIterable",
        "org.apache.commons.collections4"
      ],
      [
        "TransformerUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PredicateUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ResettableIterator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "ArrayStack",
        "org.apache.commons.collections4"
      ],
      [
        "Put",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedMapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "TransformedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "CompositeSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "ListOrderedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSerializableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "MapBackedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSortedSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractNavigableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "IterableMap",
        "org.apache.commons.collections4"
      ],
      [
        "EnumerationUtils",
        "org.apache.commons.collections4"
      ],
      [
        "DeleteCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsHandler",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "InsertCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "SequencesComparator",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsFinder",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "KeepCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "CommandVisitor",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditScript",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "QueueUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SetValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SynchronizedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractMapBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TreeBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "SynchronizedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractSortedBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "PredicatedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSetDecorator",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMapMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "UnmodifiableMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "SynchronizedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "BagUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Unmodifiable",
        "org.apache.commons.collections4"
      ],
      [
        "Get",
        "org.apache.commons.collections4"
      ],
      [
        "Trie",
        "org.apache.commons.collections4"
      ],
      [
        "MultiMap",
        "org.apache.commons.collections4"
      ],
      [
        "KeyValue",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractListIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ZippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "CollatingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UniqueFilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ReverseListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "BoundedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "TransformIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "NodeListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LazyIteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PeekingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectGraphIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PermutationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EnumerationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorIterable",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorEnumeration",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ListIteratorWrapper",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SkippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EntrySetMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PushbackIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractUntypedIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractOrderedMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SplitMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedMap",
        "org.apache.commons.collections4"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticNonVoidMethods":[
      [
        "emptyIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> emptyIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> emptyListIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "singletonIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> singletonIterator(final E object)"
      ],
      [
        "singletonListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> singletonListIterator(final E object)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E... array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)"
      ],
      [
        "unmodifiableListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "objectGraphIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)"
      ],
      [
        "filteredIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "filteredListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)"
      ],
      [
        "loopingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)"
      ],
      [
        "loopingListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final NodeList nodeList)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final Node node)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "skippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)"
      ],
      [
        "asIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "asMultipleUseIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "toListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Object[] toArray(final Iterator<?> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)"
      ],
      [
        "getIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Iterator<?> getIterator(final Object obj)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static boolean isEmpty(final Iterator<?> iterator)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean contains(final Iterator<E> iterator, final Object object)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E get(final Iterator<E> iterator, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static int size(final Iterator<?> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "naturalComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)"
      ],
      [
        "reversedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)"
      ],
      [
        "nullLowComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)"
      ],
      [
        "nullHighComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)"
      ],
      [
        "transformedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "min",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "max",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "unmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableBidiMap",
        "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableOrderedBidiMap",
        "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableSortedBidiMap",
        "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)"
      ],
      [
        "emptyMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static boolean isEmpty(final MultiValuedMap<?, ?> map)"
      ],
      [
        "getCollection",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsList",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsSet",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsBag",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "newListValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()"
      ],
      [
        "newSetValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformedMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "builder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> builder(final Predicate<? super E> predicate)"
      ],
      [
        "notNullBuilder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> notNullBuilder()"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)"
      ],
      [
        "uniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "nonUniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4.collection",
        "SynchronizedCollection",
        "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableCollection",
        "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "nullFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> nullFactory()"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> emptyIfNull(final List<T> list)"
      ],
      [
        "defaultIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)"
      ],
      [
        "sum",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "isEqualList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)"
      ],
      [
        "hashCodeForList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static int hashCodeForList(final Collection<?> list)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "synchronizedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> synchronizedList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> fixedSizeList(final List<E> list)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<List<T>> partition(final List<T> list, final int size)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<? super K, V> map, final K key)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)"
      ],
      [
        "toProperties",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Properties toProperties(final Map<K, V> map)"
      ],
      [
        "toMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)"
      ],
      [
        "invertMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)"
      ],
      [
        "putAll",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isEmpty(final Map<?, ?> map)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isNotEmpty(final Map<?, ?> map)"
      ],
      [
        "synchronizedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "orderedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)"
      ],
      [
        "synchronizedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "iterableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)"
      ],
      [
        "iterableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)"
      ],
      [
        "defaultEquator",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static <T> DefaultEquator<T> defaultEquator()"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4.functors",
        "StringValueTransformer",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4.functors",
        "IdentityPredicate",
        "public static <T> Predicate<T> identityPredicate(final T object)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "closureTransformer",
        "org.apache.commons.collections4.functors",
        "ClosureTransformer",
        "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)"
      ],
      [
        "validate",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <E> Closure<E>[] copy(final Closure<? super E>... closures)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Closure<T> coerce(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "transformerPredicate",
        "org.apache.commons.collections4.functors",
        "TransformerPredicate",
        "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "predicateTransformer",
        "org.apache.commons.collections4.functors",
        "PredicateTransformer",
        "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4.functors",
        "WhileClosure",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4.functors",
        "ForClosure",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsTruePredicate",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4.functors",
        "TransformedPredicate",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)"
      ],
      [
        "transformerClosure",
        "org.apache.commons.collections4.functors",
        "TransformerClosure",
        "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4.functors",
        "OrPredicate",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4.functors",
        "MapTransformer",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4.functors",
        "AndPredicate",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4.functors",
        "PrototypeFactory",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "instanceOfPredicate",
        "org.apache.commons.collections4.functors",
        "InstanceofPredicate",
        "public static Predicate<Object> instanceOfPredicate(final Class<?> type)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4.functors",
        "NotPredicate",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsFalsePredicate",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4.functors",
        "NullIsExceptionPredicate",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "factoryTransformer",
        "org.apache.commons.collections4.functors",
        "FactoryTransformer",
        "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4.functors",
        "UniquePredicate",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4.functors",
        "InstantiateFactory",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "getTrueFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getTrueFirstComparator()"
      ],
      [
        "getFalseFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getFalseFirstComparator()"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator booleanComparator(final boolean trueFirst)"
      ],
      [
        "comparableComparator",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()"
      ],
      [
        "emptyCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyCollection()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)"
      ],
      [
        "containsAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "containsAny",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "getCardinalityMap",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)"
      ],
      [
        "isSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isProperSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)"
      ],
      [
        "cardinality",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "filterInverse",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "exists",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "addIgnoreNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterator<T> iterator, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static Object get(final Object object, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int size(final Object object)"
      ],
      [
        "sizeIsEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean sizeIsEmpty(final Object object)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEmpty(final Collection<?> coll)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isNotEmpty(final Collection<?> coll)"
      ],
      [
        "isFull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isFull(final Collection<? extends Object> coll)"
      ],
      [
        "maxSize",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int maxSize(final Collection<? extends Object> coll)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)"
      ],
      [
        "permutations",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<List<E>> permutations(final Collection<E> collection)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "extractSingleton",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> E extractSingleton(final Collection<E> collection)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.splitmap",
        "TransformedSplitMap",
        "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)"
      ],
      [
        "emptyIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIterable()"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "filteredIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "boundedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)"
      ],
      [
        "loopingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)"
      ],
      [
        "reversedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)"
      ],
      [
        "skippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)"
      ],
      [
        "transformedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "uniqueIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)"
      ],
      [
        "unmodifiableIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static boolean isEmpty(final Iterable<?> iterable)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<E> iterable, final Object object)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)"
      ],
      [
        "frequency",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static int size(final Iterable<?> iterable)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> List<E> toList(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4",
        "TrieUtils",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "asClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)"
      ],
      [
        "doWhileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "switchMapClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4.trie",
        "UnmodifiableTrie",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "isOutOfBoundsIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isOutOfBoundsIndex(final int bitIndex)"
      ],
      [
        "isEqualBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isEqualBitKey(final int bitIndex)"
      ],
      [
        "isNullBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isNullBitKey(final int bitIndex)"
      ],
      [
        "isValidBitIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isValidBitIndex(final int bitIndex)"
      ],
      [
        "isValidUplink",
        "org.apache.commons.collections4.trie",
        "AbstractPatriciaTrie",
        "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)"
      ],
      [
        "compare",
        "org.apache.commons.collections4.trie",
        "AbstractBitwiseTrie",
        "static boolean compare(final Object a, final Object b)"
      ],
      [
        "transformingSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4.map",
        "PredicatedMap",
        "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4.map",
        "FixedSizeSortedMap",
        "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableSortedMap",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4.map",
        "PredicatedSortedMap",
        "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4.map",
        "FixedSizeMap",
        "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "unmodifiableOrderedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableOrderedMap",
        "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableMap",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "listOrderedMap",
        "org.apache.commons.collections4.map",
        "ListOrderedMap",
        "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableEntrySet",
        "org.apache.commons.collections4.map",
        "UnmodifiableEntrySet",
        "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "AbstractReferenceMap",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "ReferenceStrength",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "multiKeyMap",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "emptyMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> emptyMultiSet()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap",
        "UnmodifiableMultiValuedMap",
        "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4.list",
        "LazyList",
        "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "setUniqueList",
        "org.apache.commons.collections4.list",
        "SetUniqueList",
        "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4.list",
        "UnmodifiableList",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4.list",
        "FixedSizeList",
        "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)"
      ],
      [
        "transformingList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "growthList",
        "org.apache.commons.collections4.list",
        "GrowthList",
        "public static <E> GrowthList<E> growthList(final List<E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4.list",
        "PredicatedList",
        "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4.queue",
        "UnmodifiableQueue",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4.queue",
        "PredicatedQueue",
        "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)"
      ],
      [
        "empty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> empty()"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T singleton)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T... elements)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final Iterable<T> iterable)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)"
      ],
      [
        "switchMapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> equalPredicate(final T value)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> identityPredicate(final T value)"
      ],
      [
        "instanceofPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static Predicate<Object> instanceofPredicate(final Class<?> type)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName)"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "eitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "neitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "asPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "emptySet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> emptySet()"
      ],
      [
        "emptySortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> emptySortedSet()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> Set<T> emptyIfNull(final Set<T> set)"
      ],
      [
        "isEqualSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)"
      ],
      [
        "hashCodeForSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> int hashCodeForSet(final Collection<T> set)"
      ],
      [
        "newIdentityHashSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> newIdentityHashSet()"
      ],
      [
        "synchronizedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> synchronizedSet(final Set<E> set)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "orderedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> orderedSet(final Set<E> set)"
      ],
      [
        "synchronizedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "difference",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "transformingSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformingNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4.set",
        "PredicatedNavigableSet",
        "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSet",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSortedSet",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSortedSet",
        "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSet",
        "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableNavigableSet",
        "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "transformingSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <T> T get(final Enumeration<T> e, final int index)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static List<String> toList(final StringTokenizer stringTokenizer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> emptyQueue()"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedBag",
        "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4.bag",
        "CollectionBag",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableBag",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedSortedBag",
        "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableSortedBag",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedBag",
        "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedSortedBag",
        "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "collectionSortedBag",
        "org.apache.commons.collections4.bag",
        "CollectionSortedBag",
        "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4.multiset",
        "PredicatedMultiSet",
        "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4.multiset",
        "UnmodifiableMultiSet",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4.multiset",
        "SynchronizedMultiSet",
        "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> emptyBag()"
      ],
      [
        "emptySortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> emptySortedBag()"
      ],
      [
        "resettableEmptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ResettableListIterator<E> resettableEmptyListIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ListIterator<E> emptyListIterator()"
      ],
      [
        "unmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableIterator",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4.iterators",
        "PeekingIterator",
        "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "umodifiableListIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableListIterator",
        "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableMapIterator",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)"
      ],
      [
        "resettableEmptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> ResettableIterator<E> resettableEmptyIterator()"
      ],
      [
        "emptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> Iterator<E> emptyIterator()"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4.iterators",
        "PushbackIterator",
        "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "readableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)"
      ],
      [
        "writableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticAttributes":[
      [
        "EMPTY_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_LIST_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;"
      ],
      [
        "EMPTY_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;"
      ],
      [
        "NATURAL_COMPARATOR",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();"
      ],
      [
        "EMPTY_MULTI_VALUED_MAP",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));"
      ],
      [
        "EMPTY_SORTED_MAP",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();"
      ],
      [
        "HASHCODE_NULL",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final int HASHCODE_NULL = -1;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static final Closure INSTANCE = new ExceptionClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static final Closure INSTANCE = new NOPClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static final Predicate INSTANCE = new NullPredicate<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static final Transformer INSTANCE = new NOPTransformer<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static final Factory INSTANCE = new ExceptionFactory<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static final Predicate INSTANCE = new FalsePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static final Transformer INSTANCE = new CloneTransformer<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static final Predicate INSTANCE = new TruePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static final Predicate INSTANCE = new NotNullPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static final ComparableComparator INSTANCE = new ComparableComparator();"
      ],
      [
        "EMPTY_COLLECTION",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());"
      ],
      [
        "EMPTY_ITERABLE",
        "org.apache.commons.collections4",
        "IterableUtils",
        "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};"
      ],
      [
        "NULL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int NULL_BIT_KEY = -1;"
      ],
      [
        "EQUAL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int EQUAL_BIT_KEY = -2;"
      ],
      [
        "OUT_OF_BOUNDS_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();"
      ],
      [
        "LENGTH",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final int LENGTH = Character.SIZE;"
      ],
      [
        "NO_NEXT_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";"
      ],
      [
        "NO_PREVIOUS_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";"
      ],
      [
        "REMOVE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";"
      ],
      [
        "GETKEY_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";"
      ],
      [
        "GETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";"
      ],
      [
        "SETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";"
      ],
      [
        "DEFAULT_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_CAPACITY = 16;"
      ],
      [
        "DEFAULT_THRESHOLD",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_THRESHOLD = 12;"
      ],
      [
        "DEFAULT_LOAD_FACTOR",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;"
      ],
      [
        "MAXIMUM_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int MAXIMUM_CAPACITY = 1 << 30;"
      ],
      [
        "NULL",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final Object NULL = new Object();"
      ],
      [
        "DEFAULT_MAX_SIZE",
        "org.apache.commons.collections4.map",
        "LRUMap",
        "protected static final int DEFAULT_MAX_SIZE = 100;"
      ],
      [
        "EMPTY_MULTISET",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());"
      ],
      [
        "EMPTY_SORTED_SET",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());"
      ],
      [
        "EMPTY_QUEUE",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());"
      ],
      [
        "EMPTY_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());"
      ],
      [
        "EMPTY_SORTED_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;"
      ]
    ],
    "tokensMethodJavadocValues":[

    ],
    "tokensMethodArguments":[
      [
        "predicates",
        "java.util.Collection",
        "Collection<? extends Predicate<? super T>>"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods":[
      [
        "equals",
        "java.lang",
        "Object",
        "public boolean equals(Object arg0)"
      ],
      [
        "hashCode",
        "java.lang",
        "Object",
        "public native int hashCode()"
      ],
      [
        "getClass",
        "java.lang",
        "Object",
        "public final native Class<? extends Object> getClass()"
      ],
      [
        "clone",
        "java.lang",
        "Object",
        "protected native Object clone() throws CloneNotSupportedException"
      ],
      [
        "evaluate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public boolean evaluate(final T object)"
      ],
      [
        "toString",
        "java.lang",
        "Object",
        "public String toString()"
      ],
      [
        "getPredicates",
        "org.apache.commons.collections4.functors",
        "AbstractQuantifierPredicate",
        "public Predicate<? super T>[] getPredicates()"
      ],
      [
        "equals",
        "java.util",
        "Collection",
        "public abstract boolean equals(Object arg0)"
      ],
      [
        "toArray",
        "java.util",
        "Collection",
        "public abstract <T> T[] toArray(T[] arg0)"
      ],
      [
        "toArray",
        "java.util",
        "Collection",
        "public abstract Object[] toArray()"
      ],
      [
        "stream",
        "java.util",
        "Collection",
        "public default Stream<E> stream()"
      ],
      [
        "toArray",
        "java.util",
        "Collection",
        "public default <T> T[] toArray(IntFunction<T[]> arg0)"
      ],
      [
        "retainAll",
        "java.util",
        "Collection",
        "public abstract boolean retainAll(Collection<? extends Object> arg0)"
      ],
      [
        "size",
        "java.util",
        "Collection",
        "public abstract int size()"
      ],
      [
        "containsAll",
        "java.util",
        "Collection",
        "public abstract boolean containsAll(Collection<? extends Object> arg0)"
      ],
      [
        "iterator",
        "java.util",
        "Collection",
        "public abstract Iterator<E> iterator()"
      ],
      [
        "addAll",
        "java.util",
        "Collection",
        "public abstract boolean addAll(Collection<? extends E> arg0)"
      ],
      [
        "hashCode",
        "java.util",
        "Collection",
        "public abstract int hashCode()"
      ],
      [
        "add",
        "java.util",
        "Collection",
        "public abstract boolean add(E arg0)"
      ],
      [
        "removeAll",
        "java.util",
        "Collection",
        "public abstract boolean removeAll(Collection<? extends Object> arg0)"
      ],
      [
        "removeIf",
        "java.util",
        "Collection",
        "public default boolean removeIf(Predicate<? super E> arg0)"
      ],
      [
        "spliterator",
        "java.util",
        "Collection",
        "public default Spliterator<E> spliterator()"
      ],
      [
        "parallelStream",
        "java.util",
        "Collection",
        "public default Stream<E> parallelStream()"
      ],
      [
        "remove",
        "java.util",
        "Collection",
        "public abstract boolean remove(Object arg0)"
      ],
      [
        "isEmpty",
        "java.util",
        "Collection",
        "public abstract boolean isEmpty()"
      ],
      [
        "contains",
        "java.util",
        "Collection",
        "public abstract boolean contains(Object arg0)"
      ],
      [
        "spliterator",
        "java.lang",
        "Iterable",
        "public default Spliterator<T> spliterator()"
      ],
      [
        "iterator",
        "java.lang",
        "Iterable",
        "public abstract Iterator<T> iterator()"
      ],
      [
        "evaluate",
        "org.apache.commons.collections4",
        "Predicate",
        "public abstract boolean evaluate(T arg0)"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticAttributes":[
      [
        "iPredicates",
        "org.apache.commons.collections4.functors",
        "AbstractQuantifierPredicate",
        "protected Predicate<? super T>[] iPredicates;"
      ]
    ],
    "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticAttributes":[

    ]
  },
  {
    "id":8291,
    "oracle":";",
    "oracleType":"EXCEPT_POST",
    "projectName":"commons-collections4-4.1",
    "packageName":"org.apache.commons.collections4.map",
    "className":"MultiKeyMap",
    "javadocTag":"@throws ClassCastException if any key in mapToCopy is not a MultiKey",
    "methodJavadoc":"    /**\n     * Copies all of the keys and values from the specified map to this map.\n     * Each key must be non-null and a MultiKey object.\n     *\n     * @param mapToCopy  to this map\n     * @throws NullPointerException if the mapToCopy or any key within is null\n     * @throws ClassCastException if any key in mapToCopy is not a MultiKey\n     */",
    "methodSourceCode":"public void putAll(final Map<? extends MultiKey<? extends K>, ? extends V> mapToCopy){\n    for (final MultiKey<? extends K> key : mapToCopy.keySet()) {\n        checkKey(key);\n    }\n    super.putAll(mapToCopy);\n}",
    "classJavadoc":"/**\n * A <code>Map</code> implementation that uses multiple keys to map the value.\n * <p>\n * This class is the most efficient way to uses multiple keys to map to a value.\n * The best way to use this class is via the additional map-style methods.\n * These provide <code>get</code>, <code>containsKey</code>, <code>put</code> and\n * <code>remove</code> for individual keys which operate without extra object creation.\n * <p>\n * The additional methods are the main interface of this map.\n * As such, you will not normally hold this map in a variable of type <code>Map</code>.\n * <p>\n * The normal map methods take in and return a {@link MultiKey}.\n * If you try to use <code>put()</code> with any other object type a\n * <code>ClassCastException</code> is thrown. If you try to use <code>null</code> as\n * the key in <code>put()</code> a <code>NullPointerException</code> is thrown.\n * <p>\n * This map is implemented as a decorator of a <code>AbstractHashedMap</code> which\n * enables extra behaviour to be added easily.\n * <ul>\n * <li><code>MultiKeyMap.decorate(new LinkedMap())</code> creates an ordered map.\n * <li><code>MultiKeyMap.decorate(new LRUMap())</code> creates an least recently used map.\n * <li><code>MultiKeyMap.decorate(new ReferenceMap())</code> creates a garbage collector sensitive map.\n * </ul>\n * Note that <code>IdentityMap</code> and <code>ReferenceIdentityMap</code> are unsuitable\n * for use as the key comparison would work on the whole MultiKey, not the elements within.\n * <p>\n * As an example, consider a least recently used cache that uses a String airline code\n * and a Locale to lookup the airline's name:\n * <pre>\n * private MultiKeyMap cache = MultiKeyMap.multiKeyMap(new LRUMap(50));\n *\n * public String getAirlineName(String code, String locale) {\n *   String name = (String) cache.get(code, locale);\n *   if (name == null) {\n *     name = getAirlineNameFromDB(code, locale);\n *     cache.put(code, locale, name);\n *   }\n *   return name;\n * }\n * </pre>\n * <p>\n * <strong>Note that MultiKeyMap is not synchronized and is not thread-safe.</strong>\n * If you wish to use this map from multiple threads concurrently, you must use\n * appropriate synchronization. This class may throw exceptions when accessed\n * by concurrent threads without synchronization.\n *\n * @since 3.1\n * @version $Id: MultiKeyMap.java 1686855 2015-06-22 13:00:27Z tn $\n */",
    "classSourceCode":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.map;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.MapIterator;\nimport org.apache.commons.collections4.keyvalue.MultiKey;\n\n/**\n * A <code>Map</code> implementation that uses multiple keys to map the value.\n * <p>\n * This class is the most efficient way to uses multiple keys to map to a value.\n * The best way to use this class is via the additional map-style methods.\n * These provide <code>get</code>, <code>containsKey</code>, <code>put</code> and\n * <code>remove</code> for individual keys which operate without extra object creation.\n * <p>\n * The additional methods are the main interface of this map.\n * As such, you will not normally hold this map in a variable of type <code>Map</code>.\n * <p>\n * The normal map methods take in and return a {@link MultiKey}.\n * If you try to use <code>put()</code> with any other object type a\n * <code>ClassCastException</code> is thrown. If you try to use <code>null</code> as\n * the key in <code>put()</code> a <code>NullPointerException</code> is thrown.\n * <p>\n * This map is implemented as a decorator of a <code>AbstractHashedMap</code> which\n * enables extra behaviour to be added easily.\n * <ul>\n * <li><code>MultiKeyMap.decorate(new LinkedMap())</code> creates an ordered map.\n * <li><code>MultiKeyMap.decorate(new LRUMap())</code> creates an least recently used map.\n * <li><code>MultiKeyMap.decorate(new ReferenceMap())</code> creates a garbage collector sensitive map.\n * </ul>\n * Note that <code>IdentityMap</code> and <code>ReferenceIdentityMap</code> are unsuitable\n * for use as the key comparison would work on the whole MultiKey, not the elements within.\n * <p>\n * As an example, consider a least recently used cache that uses a String airline code\n * and a Locale to lookup the airline's name:\n * <pre>\n * private MultiKeyMap cache = MultiKeyMap.multiKeyMap(new LRUMap(50));\n *\n * public String getAirlineName(String code, String locale) {\n *   String name = (String) cache.get(code, locale);\n *   if (name == null) {\n *     name = getAirlineNameFromDB(code, locale);\n *     cache.put(code, locale, name);\n *   }\n *   return name;\n * }\n * </pre>\n * <p>\n * <strong>Note that MultiKeyMap is not synchronized and is not thread-safe.</strong>\n * If you wish to use this map from multiple threads concurrently, you must use\n * appropriate synchronization. This class may throw exceptions when accessed\n * by concurrent threads without synchronization.\n *\n * @since 3.1\n * @version $Id: MultiKeyMap.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic class MultiKeyMap<K, V> extends AbstractMapDecorator<MultiKey<? extends K>, V>\n        implements Serializable, Cloneable {\n\n    /** Serialisation version */\n    private static final long serialVersionUID = -1788199231038721040L;\n\n    //-----------------------------------------------------------------------\n    /**\n     * Decorates the specified map to add the MultiKeyMap API and fast query.\n     * The map must not be null and must be empty.\n     *\n     * @param <K>  the key type\n     * @param <V>  the value type\n     * @param map  the map to decorate, not null\n     * @return a new multi key map\n     * @throws NullPointerException if map is null\n     * @throws IllegalArgumentException if the map is not empty\n     * @since 4.0\n     */\n    public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map) {\n        if (map == null) {\n            throw new NullPointerException(\"Map must not be null\");\n        }\n        if (map.size() > 0) {\n            throw new IllegalArgumentException(\"Map must be empty\");\n        }\n        return new MultiKeyMap<K, V>(map);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructs a new MultiKeyMap that decorates a <code>HashedMap</code>.\n     */\n    public MultiKeyMap() {\n        this(new HashedMap<MultiKey<? extends K>, V>());\n    }\n\n    /**\n     * Constructor that decorates the specified map and is called from\n     * {@link #multiKeyMap(AbstractHashedMap)}.\n     * The map must not be null and should be empty or only contain valid keys.\n     * This constructor performs no validation.\n     *\n     * @param map  the map to decorate\n     */\n    protected MultiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map) {\n        super(map);\n        this.map = map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the value mapped to the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @return the mapped value, null if no match\n     */\n    public V get(final Object key1, final Object key2) {\n        final int hashCode = hash(key1, key2);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2)) {\n                return entry.getValue();\n            }\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Checks whether the map contains the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @return true if the map contains the key\n     */\n    public boolean containsKey(final Object key1, final Object key2) {\n        final int hashCode = hash(key1, key2);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2)) {\n                return true;\n            }\n            entry = entry.next;\n        }\n        return false;\n    }\n\n    /**\n     * Stores the value against the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param value  the value to store\n     * @return the value previously mapped to this combined key, null if none\n     */\n    public V put(final K key1, final K key2, final V value) {\n        final int hashCode = hash(key1, key2);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2)) {\n                final V oldValue = entry.getValue();\n                decorated().updateEntry(entry, value);\n                return oldValue;\n            }\n            entry = entry.next;\n        }\n        decorated().addMapping(index, hashCode, new MultiKey<K>(key1, key2), value);\n        return null;\n    }\n\n    /**\n     * Removes the specified multi-key from this map.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @return the value mapped to the removed key, null if key not in map\n     * @since 4.0 (previous name: remove(Object, Object))\n     */\n    public V removeMultiKey(final Object key1, final Object key2) {\n        final int hashCode = hash(key1, key2);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> previous = null;\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2)) {\n                final V oldValue = entry.getValue();\n                decorated().removeMapping(entry, index, previous);\n                return oldValue;\n            }\n            previous = entry;\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Gets the hash code for the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @return the hash code\n     */\n    protected int hash(final Object key1, final Object key2) {\n        int h = 0;\n        if (key1 != null) {\n            h ^= key1.hashCode();\n        }\n        if (key2 != null) {\n            h ^= key2.hashCode();\n        }\n        h += ~(h << 9);\n        h ^=  h >>> 14;\n        h +=  h << 4;\n        h ^=  h >>> 10;\n        return h;\n    }\n\n    /**\n     * Is the key equal to the combined key.\n     *\n     * @param entry  the entry to compare to\n     * @param key1  the first key\n     * @param key2  the second key\n     * @return true if the key matches\n     */\n    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2) {\n        final MultiKey<? extends K> multi = entry.getKey();\n        return\n            multi.size() == 2 &&\n            (key1 == multi.getKey(0) || key1 != null && key1.equals(multi.getKey(0))) &&\n            (key2 == multi.getKey(1) || key2 != null && key2.equals(multi.getKey(1)));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the value mapped to the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @return the mapped value, null if no match\n     */\n    public V get(final Object key1, final Object key2, final Object key3) {\n        final int hashCode = hash(key1, key2, key3);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3)) {\n                return entry.getValue();\n            }\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Checks whether the map contains the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @return true if the map contains the key\n     */\n    public boolean containsKey(final Object key1, final Object key2, final Object key3) {\n        final int hashCode = hash(key1, key2, key3);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3)) {\n                return true;\n            }\n            entry = entry.next;\n        }\n        return false;\n    }\n\n    /**\n     * Stores the value against the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param value  the value to store\n     * @return the value previously mapped to this combined key, null if none\n     */\n    public V put(final K key1, final K key2, final K key3, final V value) {\n        final int hashCode = hash(key1, key2, key3);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3)) {\n                final V oldValue = entry.getValue();\n                decorated().updateEntry(entry, value);\n                return oldValue;\n            }\n            entry = entry.next;\n        }\n        decorated().addMapping(index, hashCode, new MultiKey<K>(key1, key2, key3), value);\n        return null;\n    }\n\n    /**\n     * Removes the specified multi-key from this map.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @return the value mapped to the removed key, null if key not in map\n     * @since 4.0 (previous name: remove(Object, Object, Object))\n     */\n    public V removeMultiKey(final Object key1, final Object key2, final Object key3) {\n        final int hashCode = hash(key1, key2, key3);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> previous = null;\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3)) {\n                final V oldValue = entry.getValue();\n                decorated().removeMapping(entry, index, previous);\n                return oldValue;\n            }\n            previous = entry;\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Gets the hash code for the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @return the hash code\n     */\n    protected int hash(final Object key1, final Object key2, final Object key3) {\n        int h = 0;\n        if (key1 != null) {\n            h ^= key1.hashCode();\n        }\n        if (key2 != null) {\n            h ^= key2.hashCode();\n        }\n        if (key3 != null) {\n            h ^= key3.hashCode();\n        }\n        h += ~(h << 9);\n        h ^=  h >>> 14;\n        h +=  h << 4;\n        h ^=  h >>> 10;\n        return h;\n    }\n\n    /**\n     * Is the key equal to the combined key.\n     *\n     * @param entry  the entry to compare to\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @return true if the key matches\n     */\n    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n                                 final Object key1, final Object key2, final Object key3) {\n        final MultiKey<? extends K> multi = entry.getKey();\n        return\n            multi.size() == 3 &&\n            (key1 == multi.getKey(0) || key1 != null && key1.equals(multi.getKey(0))) &&\n            (key2 == multi.getKey(1) || key2 != null && key2.equals(multi.getKey(1))) &&\n            (key3 == multi.getKey(2) || key3 != null && key3.equals(multi.getKey(2)));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the value mapped to the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @return the mapped value, null if no match\n     */\n    public V get(final Object key1, final Object key2, final Object key3, final Object key4) {\n        final int hashCode = hash(key1, key2, key3, key4);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4)) {\n                return entry.getValue();\n            }\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Checks whether the map contains the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @return true if the map contains the key\n     */\n    public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4) {\n        final int hashCode = hash(key1, key2, key3, key4);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4)) {\n                return true;\n            }\n            entry = entry.next;\n        }\n        return false;\n    }\n\n    /**\n     * Stores the value against the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param value  the value to store\n     * @return the value previously mapped to this combined key, null if none\n     */\n    public V put(final K key1, final K key2, final K key3, final K key4, final V value) {\n        final int hashCode = hash(key1, key2, key3, key4);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4)) {\n                final V oldValue = entry.getValue();\n                decorated().updateEntry(entry, value);\n                return oldValue;\n            }\n            entry = entry.next;\n        }\n        decorated().addMapping(index, hashCode, new MultiKey<K>(key1, key2, key3, key4), value);\n        return null;\n    }\n\n    /**\n     * Removes the specified multi-key from this map.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @return the value mapped to the removed key, null if key not in map\n     * @since 4.0 (previous name: remove(Object, Object, Object, Object))\n     */\n    public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4) {\n        final int hashCode = hash(key1, key2, key3, key4);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> previous = null;\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4)) {\n                final V oldValue = entry.getValue();\n                decorated().removeMapping(entry, index, previous);\n                return oldValue;\n            }\n            previous = entry;\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Gets the hash code for the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @return the hash code\n     */\n    protected int hash(final Object key1, final Object key2, final Object key3, final Object key4) {\n        int h = 0;\n        if (key1 != null) {\n            h ^= key1.hashCode();\n        }\n        if (key2 != null) {\n            h ^= key2.hashCode();\n        }\n        if (key3 != null) {\n            h ^= key3.hashCode();\n        }\n        if (key4 != null) {\n            h ^= key4.hashCode();\n        }\n        h += ~(h << 9);\n        h ^=  h >>> 14;\n        h +=  h << 4;\n        h ^=  h >>> 10;\n        return h;\n    }\n\n    /**\n     * Is the key equal to the combined key.\n     *\n     * @param entry  the entry to compare to\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @return true if the key matches\n     */\n    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n                                 final Object key1, final Object key2, final Object key3, final Object key4) {\n        final MultiKey<? extends K> multi = entry.getKey();\n        return\n            multi.size() == 4 &&\n            (key1 == multi.getKey(0) || key1 != null && key1.equals(multi.getKey(0))) &&\n            (key2 == multi.getKey(1) || key2 != null && key2.equals(multi.getKey(1))) &&\n            (key3 == multi.getKey(2) || key3 != null && key3.equals(multi.getKey(2))) &&\n            (key4 == multi.getKey(3) || key4 != null && key4.equals(multi.getKey(3)));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the value mapped to the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param key5  the fifth key\n     * @return the mapped value, null if no match\n     */\n    public V get(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final int hashCode = hash(key1, key2, key3, key4, key5);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4, key5)) {\n                return entry.getValue();\n            }\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Checks whether the map contains the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param key5  the fifth key\n     * @return true if the map contains the key\n     */\n    public boolean containsKey(final Object key1, final Object key2, final Object key3,\n                               final Object key4, final Object key5) {\n        final int hashCode = hash(key1, key2, key3, key4, key5);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry =\n                decorated().data[decorated().hashIndex(hashCode, decorated().data.length)];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4, key5)) {\n                return true;\n            }\n            entry = entry.next;\n        }\n        return false;\n    }\n\n    /**\n     * Stores the value against the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param key5  the fifth key\n     * @param value  the value to store\n     * @return the value previously mapped to this combined key, null if none\n     */\n    public V put(final K key1, final K key2, final K key3, final K key4, final K key5, final V value) {\n        final int hashCode = hash(key1, key2, key3, key4, key5);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4, key5)) {\n                final V oldValue = entry.getValue();\n                decorated().updateEntry(entry, value);\n                return oldValue;\n            }\n            entry = entry.next;\n        }\n        decorated().addMapping(index, hashCode, new MultiKey<K>(key1, key2, key3, key4, key5), value);\n        return null;\n    }\n\n    /**\n     * Removes the specified multi-key from this map.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param key5  the fifth key\n     * @return the value mapped to the removed key, null if key not in map\n     * @since 4.0 (previous name: remove(Object, Object, Object, Object, Object))\n     */\n    public V removeMultiKey(final Object key1, final Object key2, final Object key3,\n                            final Object key4, final Object key5) {\n        final int hashCode = hash(key1, key2, key3, key4, key5);\n        final int index = decorated().hashIndex(hashCode, decorated().data.length);\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry = decorated().data[index];\n        AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> previous = null;\n        while (entry != null) {\n            if (entry.hashCode == hashCode && isEqualKey(entry, key1, key2, key3, key4, key5)) {\n                final V oldValue = entry.getValue();\n                decorated().removeMapping(entry, index, previous);\n                return oldValue;\n            }\n            previous = entry;\n            entry = entry.next;\n        }\n        return null;\n    }\n\n    /**\n     * Gets the hash code for the specified multi-key.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param key5  the fifth key\n     * @return the hash code\n     */\n    protected int hash(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        int h = 0;\n        if (key1 != null) {\n            h ^= key1.hashCode();\n        }\n        if (key2 != null) {\n            h ^= key2.hashCode();\n        }\n        if (key3 != null) {\n            h ^= key3.hashCode();\n        }\n        if (key4 != null) {\n            h ^= key4.hashCode();\n        }\n        if (key5 != null) {\n            h ^= key5.hashCode();\n        }\n        h += ~(h << 9);\n        h ^=  h >>> 14;\n        h +=  h << 4;\n        h ^=  h >>> 10;\n        return h;\n    }\n\n    /**\n     * Is the key equal to the combined key.\n     *\n     * @param entry  the entry to compare to\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @param key5  the fifth key\n     * @return true if the key matches\n     */\n    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\n        return\n            multi.size() == 5 &&\n            (key1 == multi.getKey(0) || key1 != null && key1.equals(multi.getKey(0))) &&\n            (key2 == multi.getKey(1) || key2 != null && key2.equals(multi.getKey(1))) &&\n            (key3 == multi.getKey(2) || key3 != null && key3.equals(multi.getKey(2))) &&\n            (key4 == multi.getKey(3) || key4 != null && key4.equals(multi.getKey(3))) &&\n            (key5 == multi.getKey(4) || key5 != null && key5.equals(multi.getKey(4)));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Removes all mappings where the first key is that specified.\n     * <p>\n     * This method removes all the mappings where the <code>MultiKey</code>\n     * has one or more keys, and the first matches that specified.\n     *\n     * @param key1  the first key\n     * @return true if any elements were removed\n     */\n    public boolean removeAll(final Object key1) {\n        boolean modified = false;\n        final MapIterator<MultiKey<? extends K>, V> it = mapIterator();\n        while (it.hasNext()) {\n            final MultiKey<? extends K> multi = it.next();\n            if (multi.size() >= 1 &&\n                (key1 == null ? multi.getKey(0) == null : key1.equals(multi.getKey(0)))) {\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }\n\n    /**\n     * Removes all mappings where the first two keys are those specified.\n     * <p>\n     * This method removes all the mappings where the <code>MultiKey</code>\n     * has two or more keys, and the first two match those specified.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @return true if any elements were removed\n     */\n    public boolean removeAll(final Object key1, final Object key2) {\n        boolean modified = false;\n        final MapIterator<MultiKey<? extends K>, V> it = mapIterator();\n        while (it.hasNext()) {\n            final MultiKey<? extends K> multi = it.next();\n            if (multi.size() >= 2 &&\n                (key1 == null ? multi.getKey(0) == null : key1.equals(multi.getKey(0))) &&\n                (key2 == null ? multi.getKey(1) == null : key2.equals(multi.getKey(1)))) {\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }\n\n    /**\n     * Removes all mappings where the first three keys are those specified.\n     * <p>\n     * This method removes all the mappings where the <code>MultiKey</code>\n     * has three or more keys, and the first three match those specified.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @return true if any elements were removed\n     */\n    public boolean removeAll(final Object key1, final Object key2, final Object key3) {\n        boolean modified = false;\n        final MapIterator<MultiKey<? extends K>, V> it = mapIterator();\n        while (it.hasNext()) {\n            final MultiKey<? extends K> multi = it.next();\n            if (multi.size() >= 3 &&\n                (key1 == null ? multi.getKey(0) == null : key1.equals(multi.getKey(0))) &&\n                (key2 == null ? multi.getKey(1) == null : key2.equals(multi.getKey(1))) &&\n                (key3 == null ? multi.getKey(2) == null : key3.equals(multi.getKey(2)))) {\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }\n\n    /**\n     * Removes all mappings where the first four keys are those specified.\n     * <p>\n     * This method removes all the mappings where the <code>MultiKey</code>\n     * has four or more keys, and the first four match those specified.\n     *\n     * @param key1  the first key\n     * @param key2  the second key\n     * @param key3  the third key\n     * @param key4  the fourth key\n     * @return true if any elements were removed\n     */\n    public boolean removeAll(final Object key1, final Object key2, final Object key3, final Object key4) {\n        boolean modified = false;\n        final MapIterator<MultiKey<? extends K>, V> it = mapIterator();\n        while (it.hasNext()) {\n            final MultiKey<? extends K> multi = it.next();\n            if (multi.size() >= 4 &&\n                (key1 == null ? multi.getKey(0) == null : key1.equals(multi.getKey(0))) &&\n                (key2 == null ? multi.getKey(1) == null : key2.equals(multi.getKey(1))) &&\n                (key3 == null ? multi.getKey(2) == null : key3.equals(multi.getKey(2))) &&\n                (key4 == null ? multi.getKey(3) == null : key4.equals(multi.getKey(3)))) {\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Check to ensure that input keys are valid MultiKey objects.\n     *\n     * @param key  the key to check\n     */\n    protected void checkKey(final MultiKey<?> key) {\n        if (key == null) {\n            throw new NullPointerException(\"Key must not be null\");\n        }\n    }\n\n    /**\n     * Clones the map without cloning the keys or values.\n     *\n     * @return a shallow clone\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public MultiKeyMap<K, V> clone() {\n        try {\n            return (MultiKeyMap<K, V>) super.clone();\n        } catch (final CloneNotSupportedException e) {\n            throw new InternalError();\n        }\n    }\n\n    /**\n     * Puts the key and value into the map, where the key must be a non-null\n     * MultiKey object.\n     *\n     * @param key  the non-null MultiKey object\n     * @param value  the value to store\n     * @return the previous value for the key\n     * @throws NullPointerException if the key is null\n     * @throws ClassCastException if the key is not a MultiKey\n     */\n    @Override\n    public V put(final MultiKey<? extends K> key, final V value) {\n        checkKey(key);\n        return super.put(key, value);\n    }\n\n    /**\n     * Copies all of the keys and values from the specified map to this map.\n     * Each key must be non-null and a MultiKey object.\n     *\n     * @param mapToCopy  to this map\n     * @throws NullPointerException if the mapToCopy or any key within is null\n     * @throws ClassCastException if any key in mapToCopy is not a MultiKey\n     */\n    @Override\n    public void putAll(final Map<? extends MultiKey<? extends K>, ? extends V> mapToCopy) {\n        for (final MultiKey<? extends K> key : mapToCopy.keySet()) {\n            checkKey(key);\n        }\n        super.putAll(mapToCopy);\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public MapIterator<MultiKey<? extends K>, V> mapIterator() {\n        return decorated().mapIterator();\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected AbstractHashedMap<MultiKey<? extends K>, V> decorated() {\n        return (AbstractHashedMap<MultiKey<? extends K>, V>) super.decorated();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(map);\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        map = (Map<MultiKey<? extends K>, V>) in.readObject();\n    }\n\n}\n",
    "tokensGeneralGrammar":[
      "null",
      "true",
      "false",
      ",",
      ".",
      ":",
      ";",
      "?",
      "(",
      ")",
      "jdVar",
      "stream",
      "Arrays",
      "allMatch",
      "noneMatch",
      "anyMatch",
      "~",
      ">>",
      "<<",
      ">>>",
      "|",
      "&",
      "^",
      "+",
      "-",
      "/",
      "*",
      "%",
      "&&",
      "||",
      ">=",
      "<=",
      ">",
      "<",
      "==",
      "!=",
      "instanceof",
      "class",
      "methodResultID",
      "this"
    ],
    "tokensGeneralValuesGlobalDictionary":[
      [
        "0",
        "int"
      ],
      [
        "1",
        "int"
      ],
      [
        "-1",
        "int"
      ],
      [
        "0.0",
        "double"
      ],
      [
        "1.0",
        "double"
      ],
      [
        "-1.0",
        "double"
      ],
      [
        "\"\"",
        "String"
      ],
      [
        "\" \"",
        "String"
      ]
    ],
    "tokensProjectClasses":[
      [
        "BidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "Equator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiSet",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "FunctorException",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractDualBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractOrderedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualLinkedHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractSortedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualTreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "TreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "MultiMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedCollection",
        "org.apache.commons.collections4"
      ],
      [
        "UnmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "CompositeCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "TransformedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "PredicatedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "IndexedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "SynchronizedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "UnmodifiableCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "AbstractCollectionDecorator",
        "org.apache.commons.collections4.collection"
      ],
      [
        "OrderedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "FactoryUtils",
        "org.apache.commons.collections4"
      ],
      [
        "IterableGet",
        "org.apache.commons.collections4"
      ],
      [
        "ListUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Closure",
        "org.apache.commons.collections4"
      ],
      [
        "IterableSortedMap",
        "org.apache.commons.collections4"
      ],
      [
        "MapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Transformer",
        "org.apache.commons.collections4"
      ],
      [
        "DefaultEquator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "StringValueTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateDecorator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IdentityPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ClosureTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FunctorUtils",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "WhileClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ForClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsTruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformedPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NonePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OrPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "MapTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AndPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PrototypeFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AbstractQuantifierPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstanceofPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InvokerTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CloneTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ComparatorPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CatchAndRethrowClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AllPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsFalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AnyPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FactoryTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotNullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "UniquePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OnePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "EqualPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ResettableListIterator",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedIterator",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorChain",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "BooleanComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ReverseComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ComparableComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "TransformingComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "FixedOrderComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "NullComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "CollectionUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ListValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractIterableGetMapDecorator",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "TransformedSplitMap",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "Factory",
        "org.apache.commons.collections4"
      ],
      [
        "IterableUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Bag",
        "org.apache.commons.collections4"
      ],
      [
        "Predicate",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBag",
        "org.apache.commons.collections4"
      ],
      [
        "TrieUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ClosureUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "UnmodifiableTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "KeyAnalyzer",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractPatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractBitwiseTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "StringKeyAnalyzer",
        "org.apache.commons.collections4.trie.analyzer"
      ],
      [
        "TransformedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractLinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "Flat3Map",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "DefaultedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceIdentityMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractSortedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractInputCheckedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazySortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CaseInsensitiveMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractHashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractOrderedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "EntrySetToMapIteratorAdapter",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractIterableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ListOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "SingletonMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableEntrySet",
        "org.apache.commons.collections4.map"
      ],
      [
        "StaticBucketMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiKeyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "HashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PassiveExpiringMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiValueMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LRUMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "TransformedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CompositeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiKey",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntryDecorator",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "TiedMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiSetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "MapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "UnmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "HashSetValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "TransformedMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractSetValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractListValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "ArrayListValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractMultiValuedMapDecorator",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "LazyList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractSerializableListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "TreeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "SetUniqueList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "NodeCachingLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "UnmodifiableList",
        "org.apache.commons.collections4.list"
      ],
      [
        "FixedSizeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "TransformedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "GrowthList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "CursorableLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "PredicatedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "OrderedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractQueueDecorator",
        "org.apache.commons.collections4.queue"
      ],
      [
        "TransformedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "UnmodifiableQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "CircularFifoQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "PredicatedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "FluentIterable",
        "org.apache.commons.collections4"
      ],
      [
        "TransformerUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PredicateUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ResettableIterator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "ArrayStack",
        "org.apache.commons.collections4"
      ],
      [
        "Put",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedMapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "TransformedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "CompositeSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "ListOrderedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSerializableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "MapBackedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSortedSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractNavigableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "IterableMap",
        "org.apache.commons.collections4"
      ],
      [
        "EnumerationUtils",
        "org.apache.commons.collections4"
      ],
      [
        "DeleteCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsHandler",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "InsertCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "SequencesComparator",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsFinder",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "KeepCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "CommandVisitor",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditScript",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "QueueUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SetValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SynchronizedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractMapBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TreeBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "SynchronizedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractSortedBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "PredicatedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSetDecorator",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMapMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "UnmodifiableMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "SynchronizedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "BagUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Unmodifiable",
        "org.apache.commons.collections4"
      ],
      [
        "Get",
        "org.apache.commons.collections4"
      ],
      [
        "Trie",
        "org.apache.commons.collections4"
      ],
      [
        "MultiMap",
        "org.apache.commons.collections4"
      ],
      [
        "KeyValue",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractListIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ZippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "CollatingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UniqueFilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ReverseListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "BoundedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "TransformIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "NodeListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LazyIteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PeekingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectGraphIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PermutationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EnumerationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorIterable",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorEnumeration",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ListIteratorWrapper",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SkippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EntrySetMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PushbackIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractUntypedIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractOrderedMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SplitMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedMap",
        "org.apache.commons.collections4"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticNonVoidMethods":[
      [
        "emptyIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> emptyIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> emptyListIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "singletonIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> singletonIterator(final E object)"
      ],
      [
        "singletonListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> singletonListIterator(final E object)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E... array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)"
      ],
      [
        "unmodifiableListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "objectGraphIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)"
      ],
      [
        "filteredIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "filteredListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)"
      ],
      [
        "loopingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)"
      ],
      [
        "loopingListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final NodeList nodeList)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final Node node)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "skippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)"
      ],
      [
        "asIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "asMultipleUseIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "toListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Object[] toArray(final Iterator<?> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)"
      ],
      [
        "getIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Iterator<?> getIterator(final Object obj)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static boolean isEmpty(final Iterator<?> iterator)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean contains(final Iterator<E> iterator, final Object object)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E get(final Iterator<E> iterator, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static int size(final Iterator<?> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "naturalComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)"
      ],
      [
        "reversedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)"
      ],
      [
        "nullLowComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)"
      ],
      [
        "nullHighComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)"
      ],
      [
        "transformedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "min",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "max",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "unmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableBidiMap",
        "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableOrderedBidiMap",
        "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableSortedBidiMap",
        "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)"
      ],
      [
        "emptyMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static boolean isEmpty(final MultiValuedMap<?, ?> map)"
      ],
      [
        "getCollection",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsList",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsSet",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsBag",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "newListValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()"
      ],
      [
        "newSetValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformedMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "builder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> builder(final Predicate<? super E> predicate)"
      ],
      [
        "notNullBuilder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> notNullBuilder()"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)"
      ],
      [
        "uniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "nonUniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4.collection",
        "SynchronizedCollection",
        "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableCollection",
        "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "nullFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> nullFactory()"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> emptyIfNull(final List<T> list)"
      ],
      [
        "defaultIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)"
      ],
      [
        "sum",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "isEqualList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)"
      ],
      [
        "hashCodeForList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static int hashCodeForList(final Collection<?> list)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "synchronizedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> synchronizedList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> fixedSizeList(final List<E> list)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<List<T>> partition(final List<T> list, final int size)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<? super K, V> map, final K key)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)"
      ],
      [
        "toProperties",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Properties toProperties(final Map<K, V> map)"
      ],
      [
        "toMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)"
      ],
      [
        "invertMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)"
      ],
      [
        "putAll",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isEmpty(final Map<?, ?> map)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isNotEmpty(final Map<?, ?> map)"
      ],
      [
        "synchronizedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "orderedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)"
      ],
      [
        "synchronizedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "iterableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)"
      ],
      [
        "iterableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)"
      ],
      [
        "defaultEquator",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static <T> DefaultEquator<T> defaultEquator()"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4.functors",
        "StringValueTransformer",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4.functors",
        "IdentityPredicate",
        "public static <T> Predicate<T> identityPredicate(final T object)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "closureTransformer",
        "org.apache.commons.collections4.functors",
        "ClosureTransformer",
        "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)"
      ],
      [
        "validate",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <E> Closure<E>[] copy(final Closure<? super E>... closures)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Closure<T> coerce(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "transformerPredicate",
        "org.apache.commons.collections4.functors",
        "TransformerPredicate",
        "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "predicateTransformer",
        "org.apache.commons.collections4.functors",
        "PredicateTransformer",
        "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4.functors",
        "WhileClosure",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4.functors",
        "ForClosure",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsTruePredicate",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4.functors",
        "TransformedPredicate",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)"
      ],
      [
        "transformerClosure",
        "org.apache.commons.collections4.functors",
        "TransformerClosure",
        "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4.functors",
        "OrPredicate",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4.functors",
        "MapTransformer",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4.functors",
        "AndPredicate",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4.functors",
        "PrototypeFactory",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "instanceOfPredicate",
        "org.apache.commons.collections4.functors",
        "InstanceofPredicate",
        "public static Predicate<Object> instanceOfPredicate(final Class<?> type)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4.functors",
        "NotPredicate",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsFalsePredicate",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4.functors",
        "NullIsExceptionPredicate",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "factoryTransformer",
        "org.apache.commons.collections4.functors",
        "FactoryTransformer",
        "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4.functors",
        "UniquePredicate",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4.functors",
        "InstantiateFactory",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "getTrueFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getTrueFirstComparator()"
      ],
      [
        "getFalseFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getFalseFirstComparator()"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator booleanComparator(final boolean trueFirst)"
      ],
      [
        "comparableComparator",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()"
      ],
      [
        "emptyCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyCollection()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)"
      ],
      [
        "containsAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "containsAny",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "getCardinalityMap",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)"
      ],
      [
        "isSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isProperSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)"
      ],
      [
        "cardinality",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "filterInverse",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "exists",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "addIgnoreNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterator<T> iterator, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static Object get(final Object object, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int size(final Object object)"
      ],
      [
        "sizeIsEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean sizeIsEmpty(final Object object)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEmpty(final Collection<?> coll)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isNotEmpty(final Collection<?> coll)"
      ],
      [
        "isFull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isFull(final Collection<? extends Object> coll)"
      ],
      [
        "maxSize",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int maxSize(final Collection<? extends Object> coll)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)"
      ],
      [
        "permutations",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<List<E>> permutations(final Collection<E> collection)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "extractSingleton",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> E extractSingleton(final Collection<E> collection)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.splitmap",
        "TransformedSplitMap",
        "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)"
      ],
      [
        "emptyIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIterable()"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "filteredIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "boundedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)"
      ],
      [
        "loopingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)"
      ],
      [
        "reversedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)"
      ],
      [
        "skippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)"
      ],
      [
        "transformedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "uniqueIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)"
      ],
      [
        "unmodifiableIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static boolean isEmpty(final Iterable<?> iterable)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<E> iterable, final Object object)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)"
      ],
      [
        "frequency",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static int size(final Iterable<?> iterable)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> List<E> toList(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4",
        "TrieUtils",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "asClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)"
      ],
      [
        "doWhileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "switchMapClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4.trie",
        "UnmodifiableTrie",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "isOutOfBoundsIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isOutOfBoundsIndex(final int bitIndex)"
      ],
      [
        "isEqualBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isEqualBitKey(final int bitIndex)"
      ],
      [
        "isNullBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isNullBitKey(final int bitIndex)"
      ],
      [
        "isValidBitIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isValidBitIndex(final int bitIndex)"
      ],
      [
        "isValidUplink",
        "org.apache.commons.collections4.trie",
        "AbstractPatriciaTrie",
        "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)"
      ],
      [
        "compare",
        "org.apache.commons.collections4.trie",
        "AbstractBitwiseTrie",
        "static boolean compare(final Object a, final Object b)"
      ],
      [
        "transformingSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4.map",
        "PredicatedMap",
        "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4.map",
        "FixedSizeSortedMap",
        "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableSortedMap",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4.map",
        "PredicatedSortedMap",
        "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4.map",
        "FixedSizeMap",
        "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "unmodifiableOrderedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableOrderedMap",
        "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableMap",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "listOrderedMap",
        "org.apache.commons.collections4.map",
        "ListOrderedMap",
        "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableEntrySet",
        "org.apache.commons.collections4.map",
        "UnmodifiableEntrySet",
        "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "AbstractReferenceMap",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "ReferenceStrength",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "multiKeyMap",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "emptyMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> emptyMultiSet()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap",
        "UnmodifiableMultiValuedMap",
        "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4.list",
        "LazyList",
        "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "setUniqueList",
        "org.apache.commons.collections4.list",
        "SetUniqueList",
        "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4.list",
        "UnmodifiableList",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4.list",
        "FixedSizeList",
        "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)"
      ],
      [
        "transformingList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "growthList",
        "org.apache.commons.collections4.list",
        "GrowthList",
        "public static <E> GrowthList<E> growthList(final List<E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4.list",
        "PredicatedList",
        "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4.queue",
        "UnmodifiableQueue",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4.queue",
        "PredicatedQueue",
        "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)"
      ],
      [
        "empty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> empty()"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T singleton)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T... elements)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final Iterable<T> iterable)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)"
      ],
      [
        "switchMapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> equalPredicate(final T value)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> identityPredicate(final T value)"
      ],
      [
        "instanceofPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static Predicate<Object> instanceofPredicate(final Class<?> type)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName)"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "eitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "neitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "asPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "emptySet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> emptySet()"
      ],
      [
        "emptySortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> emptySortedSet()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> Set<T> emptyIfNull(final Set<T> set)"
      ],
      [
        "isEqualSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)"
      ],
      [
        "hashCodeForSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> int hashCodeForSet(final Collection<T> set)"
      ],
      [
        "newIdentityHashSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> newIdentityHashSet()"
      ],
      [
        "synchronizedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> synchronizedSet(final Set<E> set)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "orderedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> orderedSet(final Set<E> set)"
      ],
      [
        "synchronizedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "difference",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "transformingSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformingNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4.set",
        "PredicatedNavigableSet",
        "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSet",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSortedSet",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSortedSet",
        "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSet",
        "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableNavigableSet",
        "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "transformingSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <T> T get(final Enumeration<T> e, final int index)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static List<String> toList(final StringTokenizer stringTokenizer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> emptyQueue()"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedBag",
        "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4.bag",
        "CollectionBag",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableBag",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedSortedBag",
        "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableSortedBag",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedBag",
        "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedSortedBag",
        "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "collectionSortedBag",
        "org.apache.commons.collections4.bag",
        "CollectionSortedBag",
        "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4.multiset",
        "PredicatedMultiSet",
        "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4.multiset",
        "UnmodifiableMultiSet",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4.multiset",
        "SynchronizedMultiSet",
        "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> emptyBag()"
      ],
      [
        "emptySortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> emptySortedBag()"
      ],
      [
        "resettableEmptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ResettableListIterator<E> resettableEmptyListIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ListIterator<E> emptyListIterator()"
      ],
      [
        "unmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableIterator",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4.iterators",
        "PeekingIterator",
        "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "umodifiableListIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableListIterator",
        "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableMapIterator",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)"
      ],
      [
        "resettableEmptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> ResettableIterator<E> resettableEmptyIterator()"
      ],
      [
        "emptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> Iterator<E> emptyIterator()"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4.iterators",
        "PushbackIterator",
        "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "readableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)"
      ],
      [
        "writableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticAttributes":[
      [
        "EMPTY_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_LIST_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;"
      ],
      [
        "EMPTY_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;"
      ],
      [
        "NATURAL_COMPARATOR",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();"
      ],
      [
        "EMPTY_MULTI_VALUED_MAP",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));"
      ],
      [
        "EMPTY_SORTED_MAP",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();"
      ],
      [
        "HASHCODE_NULL",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final int HASHCODE_NULL = -1;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static final Closure INSTANCE = new ExceptionClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static final Closure INSTANCE = new NOPClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static final Predicate INSTANCE = new NullPredicate<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static final Transformer INSTANCE = new NOPTransformer<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static final Factory INSTANCE = new ExceptionFactory<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static final Predicate INSTANCE = new FalsePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static final Transformer INSTANCE = new CloneTransformer<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static final Predicate INSTANCE = new TruePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static final Predicate INSTANCE = new NotNullPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static final ComparableComparator INSTANCE = new ComparableComparator();"
      ],
      [
        "EMPTY_COLLECTION",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());"
      ],
      [
        "EMPTY_ITERABLE",
        "org.apache.commons.collections4",
        "IterableUtils",
        "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};"
      ],
      [
        "NULL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int NULL_BIT_KEY = -1;"
      ],
      [
        "EQUAL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int EQUAL_BIT_KEY = -2;"
      ],
      [
        "OUT_OF_BOUNDS_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();"
      ],
      [
        "LENGTH",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final int LENGTH = Character.SIZE;"
      ],
      [
        "NO_NEXT_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";"
      ],
      [
        "NO_PREVIOUS_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";"
      ],
      [
        "REMOVE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";"
      ],
      [
        "GETKEY_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";"
      ],
      [
        "GETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";"
      ],
      [
        "SETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";"
      ],
      [
        "DEFAULT_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_CAPACITY = 16;"
      ],
      [
        "DEFAULT_THRESHOLD",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_THRESHOLD = 12;"
      ],
      [
        "DEFAULT_LOAD_FACTOR",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;"
      ],
      [
        "MAXIMUM_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int MAXIMUM_CAPACITY = 1 << 30;"
      ],
      [
        "NULL",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final Object NULL = new Object();"
      ],
      [
        "DEFAULT_MAX_SIZE",
        "org.apache.commons.collections4.map",
        "LRUMap",
        "protected static final int DEFAULT_MAX_SIZE = 100;"
      ],
      [
        "EMPTY_MULTISET",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());"
      ],
      [
        "EMPTY_SORTED_SET",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());"
      ],
      [
        "EMPTY_QUEUE",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());"
      ],
      [
        "EMPTY_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());"
      ],
      [
        "EMPTY_SORTED_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;"
      ]
    ],
    "tokensMethodJavadocValues":[

    ],
    "tokensMethodArguments":[
      [
        "mapToCopy",
        "java.util.Map",
        "Map<? extends MultiKey<? extends K>, ? extends V>"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods":[
      [
        "put",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V put(final K key1, final K key2, final K key3, final K key4, final V value)"
      ],
      [
        "equals",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public boolean equals(Object arg0)"
      ],
      [
        "put",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V put(final MultiKey<? extends K> key, final V value)"
      ],
      [
        "merge",
        "java.util",
        "Map",
        "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)"
      ],
      [
        "mapIterator",
        "org.apache.commons.collections4.map",
        "AbstractIterableMap",
        "public MapIterator<K, V> mapIterator()"
      ],
      [
        "put",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V put(final K key1, final K key2, final K key3, final K key4, final K key5, final V value)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public boolean isEmpty()"
      ],
      [
        "decorated",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "protected Map<K, V> decorated()"
      ],
      [
        "putIfAbsent",
        "java.util",
        "Map",
        "public default V putIfAbsent(K arg0, V arg1)"
      ],
      [
        "decorated",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected AbstractHashedMap<MultiKey<? extends K>, V> decorated()"
      ],
      [
        "toString",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public String toString()"
      ],
      [
        "get",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V get(final Object key1, final Object key2, final Object key3, final Object key4)"
      ],
      [
        "isEqualKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean removeAll(final Object key1, final Object key2)"
      ],
      [
        "put",
        "org.apache.commons.collections4",
        "Put",
        "public abstract Object put(K arg0, V arg1)"
      ],
      [
        "hash",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected int hash(final Object key1, final Object key2)"
      ],
      [
        "getOrDefault",
        "java.util",
        "Map",
        "public default V getOrDefault(Object arg0, V arg1)"
      ],
      [
        "containsKey",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public boolean containsKey(Object arg0)"
      ],
      [
        "containsKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean containsKey(final Object key1, final Object key2)"
      ],
      [
        "compute",
        "java.util",
        "Map",
        "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "removeMultiKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V removeMultiKey(final Object key1, final Object key2, final Object key3)"
      ],
      [
        "hashCode",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public int hashCode()"
      ],
      [
        "get",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V get(final Object key1, final Object key2, final Object key3)"
      ],
      [
        "isEqualKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3, final Object key4, final Object key5)"
      ],
      [
        "keySet",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public Set<K> keySet()"
      ],
      [
        "computeIfAbsent",
        "java.util",
        "Map",
        "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)"
      ],
      [
        "size",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public int size()"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default V replace(K arg0, V arg1)"
      ],
      [
        "containsKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4)"
      ],
      [
        "containsValue",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public boolean containsValue(Object arg0)"
      ],
      [
        "clone",
        "java.lang",
        "Object",
        "protected native Object clone() throws CloneNotSupportedException"
      ],
      [
        "isEqualKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3, final Object key4)"
      ],
      [
        "containsKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5)"
      ],
      [
        "remove",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public V remove(Object arg0)"
      ],
      [
        "mapIterator",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public MapIterator<MultiKey<? extends K>, V> mapIterator()"
      ],
      [
        "removeMultiKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V removeMultiKey(final Object key1, final Object key2)"
      ],
      [
        "get",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V get(final Object key1, final Object key2)"
      ],
      [
        "getClass",
        "java.lang",
        "Object",
        "public final native Class<? extends Object> getClass()"
      ],
      [
        "get",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V get(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean removeAll(final Object key1, final Object key2, final Object key3)"
      ],
      [
        "values",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public Collection<V> values()"
      ],
      [
        "removeMultiKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5)"
      ],
      [
        "put",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V put(final K key1, final K key2, final K key3, final V value)"
      ],
      [
        "containsKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean containsKey(final Object key1, final Object key2, final Object key3)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean removeAll(final Object key1, final Object key2, final Object key3, final Object key4)"
      ],
      [
        "hash",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected int hash(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5)"
      ],
      [
        "put",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V put(final K key1, final K key2, final V value)"
      ],
      [
        "removeMultiKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4)"
      ],
      [
        "hash",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected int hash(final Object key1, final Object key2, final Object key3, final Object key4)"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public default boolean remove(Object arg0, Object arg1)"
      ],
      [
        "isEqualKey",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2)"
      ],
      [
        "computeIfPresent",
        "java.util",
        "Map",
        "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public boolean removeAll(final Object key1)"
      ],
      [
        "clone",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public MultiKeyMap<K, V> clone()"
      ],
      [
        "get",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public V get(Object arg0)"
      ],
      [
        "entrySet",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "public Set<Map.Entry<K, V>> entrySet()"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default boolean replace(K arg0, V arg1, V arg2)"
      ],
      [
        "hash",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "protected int hash(final Object key1, final Object key2, final Object key3)"
      ],
      [
        "put",
        "java.util",
        "Map",
        "public abstract V put(K arg0, V arg1)"
      ],
      [
        "values",
        "java.util",
        "Map",
        "public abstract Collection<V> values()"
      ],
      [
        "isEmpty",
        "java.util",
        "Map",
        "public abstract boolean isEmpty()"
      ],
      [
        "containsValue",
        "java.util",
        "Map",
        "public abstract boolean containsValue(Object arg0)"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public abstract V remove(Object arg0)"
      ],
      [
        "entrySet",
        "java.util",
        "Map",
        "public abstract Set<Map.Entry<K, V>> entrySet()"
      ],
      [
        "containsKey",
        "java.util",
        "Map",
        "public abstract boolean containsKey(Object arg0)"
      ],
      [
        "hashCode",
        "java.util",
        "Map",
        "public abstract int hashCode()"
      ],
      [
        "size",
        "java.util",
        "Map",
        "public abstract int size()"
      ],
      [
        "equals",
        "java.util",
        "Map",
        "public abstract boolean equals(Object arg0)"
      ],
      [
        "keySet",
        "java.util",
        "Map",
        "public abstract Set<K> keySet()"
      ],
      [
        "get",
        "java.util",
        "Map",
        "public abstract V get(Object arg0)"
      ],
      [
        "toString",
        "java.lang",
        "Object",
        "public String toString()"
      ],
      [
        "hashCode",
        "java.lang",
        "Object",
        "public native int hashCode()"
      ],
      [
        "equals",
        "java.lang",
        "Object",
        "public boolean equals(Object arg0)"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticAttributes":[
      [
        "map",
        "org.apache.commons.collections4.map",
        "AbstractMapDecorator",
        "Map<MultiKey<? extends K>, V> map;"
      ]
    ],
    "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticAttributes":[

    ]
  },
  {
    "id":8872,
    "oracle":";",
    "oracleType":"NORMAL_POST",
    "projectName":"commons-collections4-4.1",
    "packageName":"org.apache.commons.collections4",
    "className":"FluentIterable",
    "javadocTag":"@return a new FluentIterable containing the provided elements",
    "methodJavadoc":"    /**\n     * Creates a new FluentIterable from the provided elements.\n     * <p>\n     * The returned iterable's iterator does not support {@code remove()}.\n     *\n     * @param <T>  the element type\n     * @param elements  the elements to be contained in the FluentIterable\n     * @return a new FluentIterable containing the provided elements\n     */",
    "methodSourceCode":"public static <T> FluentIterable<T> of(final T... elements){\n    return of(Arrays.asList(elements));\n}",
    "classJavadoc":"/**\n * A FluentIterable provides a powerful yet simple API for manipulating\n * Iterable instances in a fluent manner.\n * <p>\n * A FluentIterable can be created either from an Iterable or from a set\n * of elements. The following types of methods are provided:\n * <ul>\n *   <li>fluent methods which return a new {@code FluentIterable} instance,\n *       providing a view of the original iterable (e.g. filter(Predicate));\n *   <li>conversion methods which copy the FluentIterable's contents into a\n *       new collection or array (e.g. toList());\n *   <li>utility methods which answer questions about the FluentIterable's\n *       contents (e.g. size(), anyMatch(Predicate)).\n *   <li>\n * </ul>\n * <p>\n * The following example outputs the first 3 even numbers in the range [1, 10]\n * into a list:\n * <pre>\n * List&lt;String&gt; result =\n *   FluentIterable\n *       .of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n *       .filter(new Predicate<Integer>() {\n *                   public boolean evaluate(Integer number) {\n *                        return number % 2 == 0;\n *                   }\n *              )\n *       .transform(TransformerUtils.stringValueTransformer())\n *       .limit(3)\n *       .toList();\n * </pre>\n * The resulting list will contain the following elements:\n * <pre>[2, 4, 6]</pre>\n *\n * @param <E>  the element type\n * @since 4.1\n * @version $Id: FluentIterable.java 1684264 2015-06-08 20:06:29Z tn $\n */",
    "classSourceCode":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Comparator;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.collections4.iterators.SingletonIterator;\n\n/**\n * A FluentIterable provides a powerful yet simple API for manipulating\n * Iterable instances in a fluent manner.\n * <p>\n * A FluentIterable can be created either from an Iterable or from a set\n * of elements. The following types of methods are provided:\n * <ul>\n *   <li>fluent methods which return a new {@code FluentIterable} instance,\n *       providing a view of the original iterable (e.g. filter(Predicate));\n *   <li>conversion methods which copy the FluentIterable's contents into a\n *       new collection or array (e.g. toList());\n *   <li>utility methods which answer questions about the FluentIterable's\n *       contents (e.g. size(), anyMatch(Predicate)).\n *   <li>\n * </ul>\n * <p>\n * The following example outputs the first 3 even numbers in the range [1, 10]\n * into a list:\n * <pre>\n * List&lt;String&gt; result =\n *   FluentIterable\n *       .of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n *       .filter(new Predicate<Integer>() {\n *                   public boolean evaluate(Integer number) {\n *                        return number % 2 == 0;\n *                   }\n *              )\n *       .transform(TransformerUtils.stringValueTransformer())\n *       .limit(3)\n *       .toList();\n * </pre>\n * The resulting list will contain the following elements:\n * <pre>[2, 4, 6]</pre>\n *\n * @param <E>  the element type\n * @since 4.1\n * @version $Id: FluentIterable.java 1684264 2015-06-08 20:06:29Z tn $\n */\npublic class FluentIterable<E> implements Iterable<E> {\n\n    /** A reference to the wrapped iterable. */\n    private final Iterable<E> iterable;\n\n    // Static factory methods\n    // ----------------------------------------------------------------------\n\n    /**\n     * Creates a new empty FluentIterable.\n     *\n     * @param <T>  the element type\n     * @return a new empty FluentIterable\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <T> FluentIterable<T> empty() {\n        return IterableUtils.EMPTY_ITERABLE;\n    }\n\n    /**\n     * Creates a new FluentIterable of the single provided element.\n     * <p>\n     * The returned iterable's iterator does not support {@code remove()}.\n     *\n     * @param <T>  the element type\n     * @param singleton  the singleton element\n     * @return a new FluentIterable containing the singleton\n     */\n    public static <T> FluentIterable<T> of(final T singleton) {\n        return of(IteratorUtils.asIterable(new SingletonIterator<T>(singleton, false)));\n    }\n\n    /**\n     * Creates a new FluentIterable from the provided elements.\n     * <p>\n     * The returned iterable's iterator does not support {@code remove()}.\n     *\n     * @param <T>  the element type\n     * @param elements  the elements to be contained in the FluentIterable\n     * @return a new FluentIterable containing the provided elements\n     */\n    public static <T> FluentIterable<T> of(final T... elements) {\n        return of(Arrays.asList(elements));\n    }\n\n    /**\n     * Construct a new FluentIterable from the provided iterable. If the\n     * iterable is already an instance of FluentIterable, the instance\n     * will be returned instead.\n     * <p>\n     * The returned iterable's iterator supports {@code remove()} when the\n     * corresponding input iterator supports it.\n     *\n     * @param <T>  the element type\n     * @param iterable  the iterable to wrap into a FluentIterable, may not be null\n     * @return a new FluentIterable wrapping the provided iterable\n     * @throws NullPointerException if iterable is null\n     */\n    public static <T> FluentIterable<T> of(final Iterable<T> iterable) {\n        IterableUtils.checkNotNull(iterable);\n        if (iterable instanceof FluentIterable<?>) {\n            return (FluentIterable<T>) iterable;\n        } else {\n            return new FluentIterable<T>(iterable);\n        }\n    }\n\n    // Constructor\n    // ----------------------------------------------------------------------\n\n    /**\n     * Package-private constructor, used by IterableUtils.\n     */\n    FluentIterable() {\n        this.iterable = this;\n    }\n\n    /**\n     * Create a new FluentIterable by wrapping the provided iterable.\n     * @param iterable  the iterable to wrap\n     */\n    private FluentIterable(final Iterable<E> iterable) {\n        this.iterable = iterable;\n    }\n\n    // fluent construction methods\n    // ----------------------------------------------------------------------\n\n    /**\n     * Returns a new FluentIterable whose iterator will first traverse\n     * the elements of the current iterable, followed by the provided\n     * elements.\n     *\n     * @param elements  the elements to append to the iterable\n     * @return a new iterable, combining this iterable with the elements\n     */\n    public FluentIterable<E> append(final E... elements) {\n        return append(Arrays.asList(elements));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will first traverse\n     * the elements of the current iterable, followed by the elements\n     * of the provided iterable.\n     *\n     * @param other  the other iterable to combine, may not be null\n     * @return a new iterable, combining this iterable with other\n     * @throws NullPointerException if other is null\n     */\n    public FluentIterable<E> append(final Iterable<? extends E> other) {\n        return of(IterableUtils.chainedIterable(iterable, other));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will traverse the\n     * elements of the current and provided iterable in natural order.\n     * <p>\n     * Example: natural ordering\n     * <ul>\n     *   <li>this contains elements [1, 3, 5, 7]\n     *   <li>other contains elements [2, 4, 6, 8]\n     * </ul>\n     * <p>\n     * The returned iterable will traverse the elements in the following\n     * order: [1, 2, 3, 4, 5, 6, 7, 8]\n     *\n     * @param other  the other iterable to collate, may not be null\n     * @return a new iterable, collating this iterable with the other in natural order\n     * @throws NullPointerException if other is null\n     * @see {@link org.apache.commons.collections4.iterators.CollatingIterator CollatingIterator}\n     */\n    public FluentIterable<E> collate(final Iterable<? extends E> other) {\n        return of(IterableUtils.collatedIterable(iterable, other));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will traverse the\n     * elements of the current and provided iterable according to the\n     * ordering defined by an comparator.\n     * <p>\n     * Example: descending order\n     * <ul>\n     *   <li>this contains elements [7, 5, 3, 1]\n     *   <li>other contains elements [8, 6, 4, 2]\n     * </ul>\n     * <p>\n     * The returned iterable will traverse the elements in the following\n     * order: [8, 7, 6, 5, 4, 3, 2, 1]\n     *\n     * @param comparator  the comparator to define an ordering, may be null,\n     *   in which case natural ordering will be used\n     * @param other  the other iterable to collate, may not be null\n     * @return a new iterable, collating this iterable with the other in natural order\n     * @throws NullPointerException if other is null\n     * @see {@link org.apache.commons.collections4.iterators.CollatingIterator CollatingIterator}\n     */\n    public FluentIterable<E> collate(final Iterable<? extends E> other,\n                                     final Comparator<? super E> comparator) {\n        return of(IterableUtils.collatedIterable(comparator, iterable, other));\n    }\n\n    /**\n     * This method fully traverses an iterator of this iterable and returns\n     * a new iterable with the same contents, but without any reference\n     * to the originating iterables and/or iterators.\n     * <p>\n     * Calling this method is equivalent to:\n     * <pre>\n     *   FluentIterable<E> someIterable = ...;\n     *   FluentIterable.of(someIterable.toList());\n     * </pre>\n     *\n     * @return a new iterable with the same contents as this iterable\n     */\n    public FluentIterable<E> eval() {\n        return of(toList());\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will only return\n     * elements from this iterable matching the provided predicate.\n     *\n     * @param predicate  the predicate used to filter elements\n     * @return a new iterable, providing a filtered view of this iterable\n     * @throws NullPointerException if predicate is null\n     */\n    public FluentIterable<E> filter(final Predicate<? super E> predicate) {\n        return of(IterableUtils.filteredIterable(iterable, predicate));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will return at most\n     * the provided maximum number of elements from this iterable.\n     *\n     * @param maxSize  the maximum number of elements\n     * @return a new iterable, providing a bounded view of this iterable\n     * @throws IllegalArgumentException if maxSize is negative\n     */\n    public FluentIterable<E> limit(final long maxSize) {\n        return of(IterableUtils.boundedIterable(iterable, maxSize));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will loop infinitely\n     * over the elements from this iterable.\n     *\n     * @return a new iterable, providing a looping view of this iterable\n     */\n    public FluentIterable<E> loop() {\n        return of(IterableUtils.loopingIterable(iterable));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will traverse the\n     * elements from this iterable in reverse order.\n     *\n     * @return a new iterable, providing a reversed view of this iterable\n     */\n    public FluentIterable<E> reverse() {\n        return of(IterableUtils.reversedIterable(iterable));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will skip the first\n     * N elements from this iterable.\n     *\n     * @param elementsToSkip  the number of elements to skip\n     * @return a new iterable, providing a view of this iterable by skipping\n     *   the first N elements\n     * @throws IllegalArgumentException if elementsToSkip is negative\n     */\n    public FluentIterable<E> skip(final long elementsToSkip) {\n        return of(IterableUtils.skippingIterable(iterable, elementsToSkip));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will return all elements\n     * of this iterable transformed by the provided transformer.\n     *\n     * @param <O>  the output element type\n     * @param transformer  the transformer applied to each element\n     * @return a new iterable, providing a transformed view of this iterable\n     * @throws NullPointerException if transformer is null\n     */\n    public <O> FluentIterable<O> transform(final Transformer<? super E, ? extends O> transformer) {\n        return of(IterableUtils.transformedIterable(iterable, transformer));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will return a unique view\n     * of this iterable.\n     *\n     * @return a new iterable, providing a unique view of this iterable\n     */\n    public FluentIterable<E> unique() {\n        return of(IterableUtils.uniqueIterable(iterable));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will return an unmodifiable\n     * view of this iterable.\n     *\n     * @return a new iterable, providing an unmodifiable view of this iterable\n     */\n    public FluentIterable<E> unmodifiable() {\n        return of(IterableUtils.unmodifiableIterable(iterable));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will traverse\n     * the elements of this iterable and the other iterable in\n     * alternating order.\n     *\n     * @param other  the other iterable to interleave, may not be null\n     * @return a new iterable, interleaving this iterable with others\n     * @throws NullPointerException if other is null\n     */\n    public FluentIterable<E> zip(final Iterable<? extends E> other) {\n        return of(IterableUtils.zippingIterable(iterable, other));\n    }\n\n    /**\n     * Returns a new FluentIterable whose iterator will traverse\n     * the elements of this iterable and the other iterables in\n     * alternating order.\n     *\n     * @param others  the iterables to interleave, may not be null\n     * @return a new iterable, interleaving this iterable with others\n     * @throws NullPointerException if either of the provided iterables is null\n     */\n    public FluentIterable<E> zip(final Iterable<? extends E>... others) {\n        return of(IterableUtils.zippingIterable(iterable, others));\n    }\n\n    // convenience methods\n    // ----------------------------------------------------------------------\n\n    /** {@inheritDoc} */\n    @Override\n    public Iterator<E> iterator() {\n        return iterable.iterator();\n    }\n\n    /**\n     * Returns an Enumeration that will enumerate all elements contained\n     * in this iterable.\n     *\n     * @return an Enumeration over the elements of this iterable\n     */\n    public Enumeration<E> asEnumeration() {\n        return IteratorUtils.asEnumeration(iterator());\n    }\n\n    /**\n     * Checks if all elements contained in this iterable are matching the\n     * provided predicate.\n     * <p>\n     * A <code>null</code> or empty iterable returns true.\n     *\n     * @param predicate  the predicate to use, may not be null\n     * @return true if all elements contained in this iterable match the predicate,\n     *   false otherwise\n     * @throws NullPointerException if predicate is null\n     */\n    public boolean allMatch(final Predicate<? super E> predicate) {\n        return IterableUtils.matchesAll(iterable, predicate);\n    }\n\n    /**\n     * Checks if this iterable contains any element matching the provided predicate.\n     * <p>\n     * A <code>null</code> or empty iterable returns false.\n     *\n     * @param predicate  the predicate to use, may not be null\n     * @return true if at least one element contained in this iterable matches the predicate,\n     *   false otherwise\n     * @throws NullPointerException if predicate is null\n     */\n    public boolean anyMatch(final Predicate<? super E> predicate) {\n        return IterableUtils.matchesAny(iterable, predicate);\n    }\n\n    /**\n     * Checks if this iterable is empty.\n     *\n     * @return true if this iterable does not contain any elements, false otherwise\n     */\n    public boolean isEmpty() {\n        return IterableUtils.isEmpty(iterable);\n    }\n\n    /**\n     * Checks if the object is contained in this iterable.\n     *\n     * @param object  the object to check\n     * @return true if the object is contained in this iterable, false otherwise\n     */\n    public boolean contains(final Object object) {\n        return IterableUtils.contains(iterable, object);\n    }\n\n    /**\n     * Applies the closure to all elements contained in this iterable.\n     *\n     * @param closure  the closure to apply to each element, may not be null\n     * @throws NullPointerException if closure is null\n     */\n    public void forEach(final Closure<? super E> closure) {\n        IterableUtils.forEach(iterable, closure);\n    }\n\n    /**\n     * Returns the element at the provided position in this iterable.\n     * In order to return the element, an iterator needs to be traversed\n     * up to the requested position.\n     *\n     * @param position  the position of the element to return\n     * @return the element\n     * @throws IndexOutOfBoundsException if the provided position is outside the\n     *   valid range of this iterable: [0, size)\n     */\n    public E get(final int position) {\n        return IterableUtils.get(iterable, position);\n    }\n\n    /**\n     * Returns the number of elements that are contained in this iterable.\n     * In order to determine the size, an iterator needs to be traversed.\n     *\n     * @return the size of this iterable\n     */\n    public int size() {\n        return IterableUtils.size(iterable);\n    }\n\n    /**\n     * Traverses an iterator of this iterable and adds all elements\n     * to the provided collection.\n     *\n     * @param collection  the collection to add the elements\n     * @throws NullPointerException if collection is null\n     */\n    public void copyInto(final Collection<? super E> collection) {\n        if (collection == null) {\n            throw new NullPointerException(\"Collection must not be null\");\n        }\n        CollectionUtils.addAll(collection, iterable);\n    }\n\n    /**\n     * Returns an array containing all elements of this iterable by traversing\n     * its iterator.\n     *\n     * @param arrayClass  the class of array to create\n     * @return an array of the iterable contents\n     * @throws ArrayStoreException if arrayClass is invalid\n     */\n    public E[] toArray(final Class<E> arrayClass) {\n        return IteratorUtils.toArray(iterator(), arrayClass);\n    }\n\n    /**\n     * Returns a mutable list containing all elements of this iterable\n     * by traversing its iterator.\n     * <p>\n     * The returned list is guaranteed to be mutable.\n     *\n     * @return a list of the iterable contents\n     */\n    public List<E> toList() {\n        return IterableUtils.toList(iterable);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public String toString() {\n        return IterableUtils.toString(iterable);\n    }\n\n}\n",
    "tokensGeneralGrammar":[
      "null",
      "true",
      "false",
      ",",
      ".",
      ":",
      ";",
      "?",
      "(",
      ")",
      "jdVar",
      "stream",
      "Arrays",
      "allMatch",
      "noneMatch",
      "anyMatch",
      "~",
      ">>",
      "<<",
      ">>>",
      "|",
      "&",
      "^",
      "+",
      "-",
      "/",
      "*",
      "%",
      "&&",
      "||",
      ">=",
      "<=",
      ">",
      "<",
      "==",
      "!=",
      "instanceof",
      "class",
      "methodResultID",
      "this"
    ],
    "tokensGeneralValuesGlobalDictionary":[
      [
        "0",
        "int"
      ],
      [
        "1",
        "int"
      ],
      [
        "-1",
        "int"
      ],
      [
        "0.0",
        "double"
      ],
      [
        "1.0",
        "double"
      ],
      [
        "-1.0",
        "double"
      ],
      [
        "\"\"",
        "String"
      ],
      [
        "\" \"",
        "String"
      ]
    ],
    "tokensProjectClasses":[
      [
        "BidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "Equator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiSet",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "FunctorException",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractDualBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractOrderedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualLinkedHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractSortedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualTreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "TreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "MultiMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedCollection",
        "org.apache.commons.collections4"
      ],
      [
        "UnmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "CompositeCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "TransformedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "PredicatedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "IndexedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "SynchronizedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "UnmodifiableCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "AbstractCollectionDecorator",
        "org.apache.commons.collections4.collection"
      ],
      [
        "OrderedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "FactoryUtils",
        "org.apache.commons.collections4"
      ],
      [
        "IterableGet",
        "org.apache.commons.collections4"
      ],
      [
        "ListUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Closure",
        "org.apache.commons.collections4"
      ],
      [
        "IterableSortedMap",
        "org.apache.commons.collections4"
      ],
      [
        "MapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Transformer",
        "org.apache.commons.collections4"
      ],
      [
        "DefaultEquator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "StringValueTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateDecorator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IdentityPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ClosureTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FunctorUtils",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "WhileClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ForClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsTruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformedPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NonePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OrPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "MapTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AndPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PrototypeFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AbstractQuantifierPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstanceofPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InvokerTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CloneTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ComparatorPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CatchAndRethrowClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AllPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsFalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AnyPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FactoryTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotNullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "UniquePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OnePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "EqualPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ResettableListIterator",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedIterator",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorChain",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "BooleanComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ReverseComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ComparableComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "TransformingComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "FixedOrderComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "NullComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "CollectionUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ListValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractIterableGetMapDecorator",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "TransformedSplitMap",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "Factory",
        "org.apache.commons.collections4"
      ],
      [
        "IterableUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Bag",
        "org.apache.commons.collections4"
      ],
      [
        "Predicate",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBag",
        "org.apache.commons.collections4"
      ],
      [
        "TrieUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ClosureUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "UnmodifiableTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "KeyAnalyzer",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractPatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractBitwiseTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "StringKeyAnalyzer",
        "org.apache.commons.collections4.trie.analyzer"
      ],
      [
        "TransformedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractLinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "Flat3Map",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "DefaultedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceIdentityMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractSortedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractInputCheckedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazySortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CaseInsensitiveMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractHashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractOrderedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "EntrySetToMapIteratorAdapter",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractIterableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ListOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "SingletonMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableEntrySet",
        "org.apache.commons.collections4.map"
      ],
      [
        "StaticBucketMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiKeyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "HashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PassiveExpiringMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiValueMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LRUMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "TransformedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CompositeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiKey",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntryDecorator",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "TiedMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiSetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "MapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "UnmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "HashSetValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "TransformedMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractSetValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractListValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "ArrayListValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractMultiValuedMapDecorator",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "LazyList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractSerializableListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "TreeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "SetUniqueList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "NodeCachingLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "UnmodifiableList",
        "org.apache.commons.collections4.list"
      ],
      [
        "FixedSizeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "TransformedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "GrowthList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "CursorableLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "PredicatedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "OrderedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractQueueDecorator",
        "org.apache.commons.collections4.queue"
      ],
      [
        "TransformedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "UnmodifiableQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "CircularFifoQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "PredicatedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "FluentIterable",
        "org.apache.commons.collections4"
      ],
      [
        "TransformerUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PredicateUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ResettableIterator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "ArrayStack",
        "org.apache.commons.collections4"
      ],
      [
        "Put",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedMapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "TransformedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "CompositeSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "ListOrderedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSerializableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "MapBackedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSortedSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractNavigableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "IterableMap",
        "org.apache.commons.collections4"
      ],
      [
        "EnumerationUtils",
        "org.apache.commons.collections4"
      ],
      [
        "DeleteCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsHandler",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "InsertCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "SequencesComparator",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsFinder",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "KeepCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "CommandVisitor",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditScript",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "QueueUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SetValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SynchronizedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractMapBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TreeBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "SynchronizedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractSortedBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "PredicatedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSetDecorator",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMapMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "UnmodifiableMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "SynchronizedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "BagUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Unmodifiable",
        "org.apache.commons.collections4"
      ],
      [
        "Get",
        "org.apache.commons.collections4"
      ],
      [
        "Trie",
        "org.apache.commons.collections4"
      ],
      [
        "MultiMap",
        "org.apache.commons.collections4"
      ],
      [
        "KeyValue",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractListIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ZippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "CollatingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UniqueFilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ReverseListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "BoundedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "TransformIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "NodeListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LazyIteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PeekingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectGraphIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PermutationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EnumerationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorIterable",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorEnumeration",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ListIteratorWrapper",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SkippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EntrySetMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PushbackIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractUntypedIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractOrderedMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SplitMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedMap",
        "org.apache.commons.collections4"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticNonVoidMethods":[
      [
        "emptyIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> emptyIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> emptyListIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "singletonIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> singletonIterator(final E object)"
      ],
      [
        "singletonListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> singletonListIterator(final E object)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E... array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)"
      ],
      [
        "unmodifiableListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "objectGraphIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)"
      ],
      [
        "filteredIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "filteredListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)"
      ],
      [
        "loopingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)"
      ],
      [
        "loopingListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final NodeList nodeList)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final Node node)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "skippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)"
      ],
      [
        "asIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "asMultipleUseIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "toListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Object[] toArray(final Iterator<?> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)"
      ],
      [
        "getIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Iterator<?> getIterator(final Object obj)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static boolean isEmpty(final Iterator<?> iterator)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean contains(final Iterator<E> iterator, final Object object)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E get(final Iterator<E> iterator, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static int size(final Iterator<?> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "naturalComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)"
      ],
      [
        "reversedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)"
      ],
      [
        "nullLowComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)"
      ],
      [
        "nullHighComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)"
      ],
      [
        "transformedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "min",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "max",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "unmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableBidiMap",
        "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableOrderedBidiMap",
        "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableSortedBidiMap",
        "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)"
      ],
      [
        "emptyMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static boolean isEmpty(final MultiValuedMap<?, ?> map)"
      ],
      [
        "getCollection",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsList",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsSet",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsBag",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "newListValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()"
      ],
      [
        "newSetValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformedMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "builder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> builder(final Predicate<? super E> predicate)"
      ],
      [
        "notNullBuilder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> notNullBuilder()"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)"
      ],
      [
        "uniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "nonUniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4.collection",
        "SynchronizedCollection",
        "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableCollection",
        "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "nullFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> nullFactory()"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> emptyIfNull(final List<T> list)"
      ],
      [
        "defaultIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)"
      ],
      [
        "sum",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "isEqualList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)"
      ],
      [
        "hashCodeForList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static int hashCodeForList(final Collection<?> list)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "synchronizedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> synchronizedList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> fixedSizeList(final List<E> list)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<List<T>> partition(final List<T> list, final int size)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<? super K, V> map, final K key)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)"
      ],
      [
        "toProperties",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Properties toProperties(final Map<K, V> map)"
      ],
      [
        "toMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)"
      ],
      [
        "invertMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)"
      ],
      [
        "putAll",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isEmpty(final Map<?, ?> map)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isNotEmpty(final Map<?, ?> map)"
      ],
      [
        "synchronizedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "orderedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)"
      ],
      [
        "synchronizedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "iterableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)"
      ],
      [
        "iterableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)"
      ],
      [
        "defaultEquator",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static <T> DefaultEquator<T> defaultEquator()"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4.functors",
        "StringValueTransformer",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4.functors",
        "IdentityPredicate",
        "public static <T> Predicate<T> identityPredicate(final T object)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "closureTransformer",
        "org.apache.commons.collections4.functors",
        "ClosureTransformer",
        "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)"
      ],
      [
        "validate",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <E> Closure<E>[] copy(final Closure<? super E>... closures)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Closure<T> coerce(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "transformerPredicate",
        "org.apache.commons.collections4.functors",
        "TransformerPredicate",
        "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "predicateTransformer",
        "org.apache.commons.collections4.functors",
        "PredicateTransformer",
        "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4.functors",
        "WhileClosure",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4.functors",
        "ForClosure",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsTruePredicate",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4.functors",
        "TransformedPredicate",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)"
      ],
      [
        "transformerClosure",
        "org.apache.commons.collections4.functors",
        "TransformerClosure",
        "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4.functors",
        "OrPredicate",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4.functors",
        "MapTransformer",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4.functors",
        "AndPredicate",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4.functors",
        "PrototypeFactory",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "instanceOfPredicate",
        "org.apache.commons.collections4.functors",
        "InstanceofPredicate",
        "public static Predicate<Object> instanceOfPredicate(final Class<?> type)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4.functors",
        "NotPredicate",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsFalsePredicate",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4.functors",
        "NullIsExceptionPredicate",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "factoryTransformer",
        "org.apache.commons.collections4.functors",
        "FactoryTransformer",
        "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4.functors",
        "UniquePredicate",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4.functors",
        "InstantiateFactory",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "getTrueFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getTrueFirstComparator()"
      ],
      [
        "getFalseFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getFalseFirstComparator()"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator booleanComparator(final boolean trueFirst)"
      ],
      [
        "comparableComparator",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()"
      ],
      [
        "emptyCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyCollection()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)"
      ],
      [
        "containsAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "containsAny",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "getCardinalityMap",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)"
      ],
      [
        "isSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isProperSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)"
      ],
      [
        "cardinality",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "filterInverse",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "exists",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "addIgnoreNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterator<T> iterator, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static Object get(final Object object, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int size(final Object object)"
      ],
      [
        "sizeIsEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean sizeIsEmpty(final Object object)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEmpty(final Collection<?> coll)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isNotEmpty(final Collection<?> coll)"
      ],
      [
        "isFull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isFull(final Collection<? extends Object> coll)"
      ],
      [
        "maxSize",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int maxSize(final Collection<? extends Object> coll)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)"
      ],
      [
        "permutations",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<List<E>> permutations(final Collection<E> collection)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "extractSingleton",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> E extractSingleton(final Collection<E> collection)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.splitmap",
        "TransformedSplitMap",
        "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)"
      ],
      [
        "emptyIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIterable()"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "filteredIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "boundedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)"
      ],
      [
        "loopingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)"
      ],
      [
        "reversedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)"
      ],
      [
        "skippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)"
      ],
      [
        "transformedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "uniqueIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)"
      ],
      [
        "unmodifiableIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static boolean isEmpty(final Iterable<?> iterable)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<E> iterable, final Object object)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)"
      ],
      [
        "frequency",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static int size(final Iterable<?> iterable)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> List<E> toList(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4",
        "TrieUtils",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "asClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)"
      ],
      [
        "doWhileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "switchMapClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4.trie",
        "UnmodifiableTrie",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "isOutOfBoundsIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isOutOfBoundsIndex(final int bitIndex)"
      ],
      [
        "isEqualBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isEqualBitKey(final int bitIndex)"
      ],
      [
        "isNullBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isNullBitKey(final int bitIndex)"
      ],
      [
        "isValidBitIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isValidBitIndex(final int bitIndex)"
      ],
      [
        "isValidUplink",
        "org.apache.commons.collections4.trie",
        "AbstractPatriciaTrie",
        "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)"
      ],
      [
        "compare",
        "org.apache.commons.collections4.trie",
        "AbstractBitwiseTrie",
        "static boolean compare(final Object a, final Object b)"
      ],
      [
        "transformingSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4.map",
        "PredicatedMap",
        "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4.map",
        "FixedSizeSortedMap",
        "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableSortedMap",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4.map",
        "PredicatedSortedMap",
        "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4.map",
        "FixedSizeMap",
        "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "unmodifiableOrderedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableOrderedMap",
        "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableMap",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "listOrderedMap",
        "org.apache.commons.collections4.map",
        "ListOrderedMap",
        "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableEntrySet",
        "org.apache.commons.collections4.map",
        "UnmodifiableEntrySet",
        "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "AbstractReferenceMap",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "ReferenceStrength",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "multiKeyMap",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "emptyMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> emptyMultiSet()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap",
        "UnmodifiableMultiValuedMap",
        "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4.list",
        "LazyList",
        "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "setUniqueList",
        "org.apache.commons.collections4.list",
        "SetUniqueList",
        "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4.list",
        "UnmodifiableList",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4.list",
        "FixedSizeList",
        "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)"
      ],
      [
        "transformingList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "growthList",
        "org.apache.commons.collections4.list",
        "GrowthList",
        "public static <E> GrowthList<E> growthList(final List<E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4.list",
        "PredicatedList",
        "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4.queue",
        "UnmodifiableQueue",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4.queue",
        "PredicatedQueue",
        "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)"
      ],
      [
        "empty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> empty()"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T singleton)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T... elements)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final Iterable<T> iterable)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)"
      ],
      [
        "switchMapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> equalPredicate(final T value)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> identityPredicate(final T value)"
      ],
      [
        "instanceofPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static Predicate<Object> instanceofPredicate(final Class<?> type)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName)"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "eitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "neitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "asPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "emptySet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> emptySet()"
      ],
      [
        "emptySortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> emptySortedSet()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> Set<T> emptyIfNull(final Set<T> set)"
      ],
      [
        "isEqualSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)"
      ],
      [
        "hashCodeForSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> int hashCodeForSet(final Collection<T> set)"
      ],
      [
        "newIdentityHashSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> newIdentityHashSet()"
      ],
      [
        "synchronizedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> synchronizedSet(final Set<E> set)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "orderedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> orderedSet(final Set<E> set)"
      ],
      [
        "synchronizedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "difference",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "transformingSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformingNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4.set",
        "PredicatedNavigableSet",
        "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSet",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSortedSet",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSortedSet",
        "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSet",
        "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableNavigableSet",
        "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "transformingSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <T> T get(final Enumeration<T> e, final int index)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static List<String> toList(final StringTokenizer stringTokenizer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> emptyQueue()"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedBag",
        "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4.bag",
        "CollectionBag",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableBag",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedSortedBag",
        "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableSortedBag",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedBag",
        "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedSortedBag",
        "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "collectionSortedBag",
        "org.apache.commons.collections4.bag",
        "CollectionSortedBag",
        "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4.multiset",
        "PredicatedMultiSet",
        "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4.multiset",
        "UnmodifiableMultiSet",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4.multiset",
        "SynchronizedMultiSet",
        "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> emptyBag()"
      ],
      [
        "emptySortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> emptySortedBag()"
      ],
      [
        "resettableEmptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ResettableListIterator<E> resettableEmptyListIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ListIterator<E> emptyListIterator()"
      ],
      [
        "unmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableIterator",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4.iterators",
        "PeekingIterator",
        "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "umodifiableListIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableListIterator",
        "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableMapIterator",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)"
      ],
      [
        "resettableEmptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> ResettableIterator<E> resettableEmptyIterator()"
      ],
      [
        "emptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> Iterator<E> emptyIterator()"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4.iterators",
        "PushbackIterator",
        "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "readableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)"
      ],
      [
        "writableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticAttributes":[
      [
        "EMPTY_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_LIST_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;"
      ],
      [
        "EMPTY_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;"
      ],
      [
        "NATURAL_COMPARATOR",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();"
      ],
      [
        "EMPTY_MULTI_VALUED_MAP",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));"
      ],
      [
        "EMPTY_SORTED_MAP",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();"
      ],
      [
        "HASHCODE_NULL",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final int HASHCODE_NULL = -1;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static final Closure INSTANCE = new ExceptionClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static final Closure INSTANCE = new NOPClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static final Predicate INSTANCE = new NullPredicate<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static final Transformer INSTANCE = new NOPTransformer<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static final Factory INSTANCE = new ExceptionFactory<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static final Predicate INSTANCE = new FalsePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static final Transformer INSTANCE = new CloneTransformer<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static final Predicate INSTANCE = new TruePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static final Predicate INSTANCE = new NotNullPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static final ComparableComparator INSTANCE = new ComparableComparator();"
      ],
      [
        "EMPTY_COLLECTION",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());"
      ],
      [
        "EMPTY_ITERABLE",
        "org.apache.commons.collections4",
        "IterableUtils",
        "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};"
      ],
      [
        "NULL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int NULL_BIT_KEY = -1;"
      ],
      [
        "EQUAL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int EQUAL_BIT_KEY = -2;"
      ],
      [
        "OUT_OF_BOUNDS_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();"
      ],
      [
        "LENGTH",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final int LENGTH = Character.SIZE;"
      ],
      [
        "NO_NEXT_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";"
      ],
      [
        "NO_PREVIOUS_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";"
      ],
      [
        "REMOVE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";"
      ],
      [
        "GETKEY_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";"
      ],
      [
        "GETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";"
      ],
      [
        "SETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";"
      ],
      [
        "DEFAULT_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_CAPACITY = 16;"
      ],
      [
        "DEFAULT_THRESHOLD",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_THRESHOLD = 12;"
      ],
      [
        "DEFAULT_LOAD_FACTOR",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;"
      ],
      [
        "MAXIMUM_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int MAXIMUM_CAPACITY = 1 << 30;"
      ],
      [
        "NULL",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final Object NULL = new Object();"
      ],
      [
        "DEFAULT_MAX_SIZE",
        "org.apache.commons.collections4.map",
        "LRUMap",
        "protected static final int DEFAULT_MAX_SIZE = 100;"
      ],
      [
        "EMPTY_MULTISET",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());"
      ],
      [
        "EMPTY_SORTED_SET",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());"
      ],
      [
        "EMPTY_QUEUE",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());"
      ],
      [
        "EMPTY_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());"
      ],
      [
        "EMPTY_SORTED_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;"
      ]
    ],
    "tokensMethodJavadocValues":[

    ],
    "tokensMethodArguments":[
      [
        "elements",
        "",
        "T[][]"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods":[
      [
        "get",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public E get(final int position)"
      ],
      [
        "equals",
        "java.lang",
        "Object",
        "public boolean equals(Object arg0)"
      ],
      [
        "iterator",
        "java.lang",
        "Iterable",
        "public abstract Iterator<T> iterator()"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public Enumeration<E> asEnumeration()"
      ],
      [
        "clone",
        "java.lang",
        "Object",
        "protected native Object clone() throws CloneNotSupportedException"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public List<E> toList()"
      ],
      [
        "loop",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> loop()"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public int size()"
      ],
      [
        "anyMatch",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public boolean anyMatch(final Predicate<? super E> predicate)"
      ],
      [
        "append",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> append(final E... elements)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> filter(final Predicate<? super E> predicate)"
      ],
      [
        "transform",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public <O> FluentIterable<O> transform(final Transformer<? super E, ? extends O> transformer)"
      ],
      [
        "unmodifiable",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> unmodifiable()"
      ],
      [
        "limit",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> limit(final long maxSize)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public String toString()"
      ],
      [
        "allMatch",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public boolean allMatch(final Predicate<? super E> predicate)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> collate(final Iterable<? extends E> other, final Comparator<? super E> comparator)"
      ],
      [
        "zip",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> zip(final Iterable<? extends E>... others)"
      ],
      [
        "unique",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> unique()"
      ],
      [
        "zip",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> zip(final Iterable<? extends E> other)"
      ],
      [
        "iterator",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public Iterator<E> iterator()"
      ],
      [
        "hashCode",
        "java.lang",
        "Object",
        "public native int hashCode()"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public boolean contains(final Object object)"
      ],
      [
        "eval",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> eval()"
      ],
      [
        "getClass",
        "java.lang",
        "Object",
        "public final native Class<? extends Object> getClass()"
      ],
      [
        "append",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> append(final Iterable<? extends E> other)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public boolean isEmpty()"
      ],
      [
        "spliterator",
        "java.lang",
        "Iterable",
        "public default Spliterator<T> spliterator()"
      ],
      [
        "reverse",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> reverse()"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public E[] toArray(final Class<E> arrayClass)"
      ],
      [
        "skip",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> skip(final long elementsToSkip)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public FluentIterable<E> collate(final Iterable<? extends E> other)"
      ],
      [
        "toString",
        "java.lang",
        "Object",
        "public String toString()"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticAttributes":[
      [
        "length",
        "",
        "T[]",
        "public final int length;"
      ]
    ],
    "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticAttributes":[

    ]
  },
  {
    "id":8975,
    "oracle":";",
    "oracleType":"EXCEPT_POST",
    "projectName":"commons-collections4-4.1",
    "packageName":"org.apache.commons.collections4",
    "className":"TransformerUtils",
    "javadocTag":"@throws NullPointerException if any transformer in the map is null",
    "methodJavadoc":"    /**\n     * Create a new Transformer that uses the input object as a key to find the\n     * transformer to call.\n     * <p>\n     * The Map consists of object keys and Transformer values. A transformer\n     * is called if the input object equals the key. If there is no match, the\n     * default transformer is called. The default transformer is set in the map\n     * using a null key. If no default is set, null will be returned in a default case.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param objectsAndTransformers  a map of objects to transformers\n     * @return the transformer\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any transformer in the map is null\n     * @see SwitchTransformer\n     */",
    "methodSourceCode":"public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers){\n    if (objectsAndTransformers == null) {\n        throw new NullPointerException(\"The object and transformer map must not be null\");\n    }\n    final Transformer<? super I, ? extends O> def = objectsAndTransformers.remove(null);\n    final int size = objectsAndTransformers.size();\n    final Transformer<? super I, ? extends O>[] trs = new Transformer[size];\n    final Predicate<I>[] preds = new Predicate[size];\n    int i = 0;\n    for (final Map.Entry<I, Transformer<I, O>> entry : objectsAndTransformers.entrySet()) {\n        preds[i] = EqualPredicate.<I>equalPredicate(entry.getKey());\n        trs[i++] = entry.getValue();\n    }\n    return TransformerUtils.switchTransformer(preds, trs, def);\n}",
    "classJavadoc":"/**\n * <code>TransformerUtils</code> provides reference implementations and\n * utilities for the Transformer functor interface. The supplied transformers are:\n * <ul>\n * <li>Invoker - returns the result of a method call on the input object\n * <li>Clone - returns a clone of the input object\n * <li>Constant - always returns the same object\n * <li>Closure - performs a Closure and returns the input object\n * <li>Predicate - returns the result of the predicate as a Boolean\n * <li>Factory - returns a new object from a factory\n * <li>Chained - chains two or more transformers together\n * <li>If - calls one transformer or another based on a predicate\n * <li>Switch - calls one transformer based on one or more predicates\n * <li>SwitchMap - calls one transformer looked up from a Map\n * <li>Instantiate - the Class input object is instantiated\n * <li>Map - returns an object from a supplied Map\n * <li>Null - always returns null\n * <li>NOP - returns the input object, which should be immutable\n * <li>Exception - always throws an exception\n * <li>StringValue - returns a <code>java.lang.String</code> representation of the input object\n * </ul>\n * <p>\n * Since v4.1 only transformers which are considered to be unsafe are\n * Serializable. Transformers considered to be unsafe for serialization are:\n * <ul>\n * <li>Invoker\n * <li>Clone\n * <li>Instantiate\n * </ul>\n *\n * @since 3.0\n * @version $Id: TransformerUtils.java 1714362 2015-11-14 20:38:02Z tn $\n */",
    "classSourceCode":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport java.util.Collection;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.functors.ChainedTransformer;\nimport org.apache.commons.collections4.functors.CloneTransformer;\nimport org.apache.commons.collections4.functors.ClosureTransformer;\nimport org.apache.commons.collections4.functors.ConstantTransformer;\nimport org.apache.commons.collections4.functors.EqualPredicate;\nimport org.apache.commons.collections4.functors.ExceptionTransformer;\nimport org.apache.commons.collections4.functors.FactoryTransformer;\nimport org.apache.commons.collections4.functors.IfTransformer;\nimport org.apache.commons.collections4.functors.InstantiateTransformer;\nimport org.apache.commons.collections4.functors.InvokerTransformer;\nimport org.apache.commons.collections4.functors.MapTransformer;\nimport org.apache.commons.collections4.functors.NOPTransformer;\nimport org.apache.commons.collections4.functors.PredicateTransformer;\nimport org.apache.commons.collections4.functors.StringValueTransformer;\nimport org.apache.commons.collections4.functors.SwitchTransformer;\n\n/**\n * <code>TransformerUtils</code> provides reference implementations and\n * utilities for the Transformer functor interface. The supplied transformers are:\n * <ul>\n * <li>Invoker - returns the result of a method call on the input object\n * <li>Clone - returns a clone of the input object\n * <li>Constant - always returns the same object\n * <li>Closure - performs a Closure and returns the input object\n * <li>Predicate - returns the result of the predicate as a Boolean\n * <li>Factory - returns a new object from a factory\n * <li>Chained - chains two or more transformers together\n * <li>If - calls one transformer or another based on a predicate\n * <li>Switch - calls one transformer based on one or more predicates\n * <li>SwitchMap - calls one transformer looked up from a Map\n * <li>Instantiate - the Class input object is instantiated\n * <li>Map - returns an object from a supplied Map\n * <li>Null - always returns null\n * <li>NOP - returns the input object, which should be immutable\n * <li>Exception - always throws an exception\n * <li>StringValue - returns a <code>java.lang.String</code> representation of the input object\n * </ul>\n * <p>\n * Since v4.1 only transformers which are considered to be unsafe are\n * Serializable. Transformers considered to be unsafe for serialization are:\n * <ul>\n * <li>Invoker\n * <li>Clone\n * <li>Instantiate\n * </ul>\n *\n * @since 3.0\n * @version $Id: TransformerUtils.java 1714362 2015-11-14 20:38:02Z tn $\n */\npublic class TransformerUtils {\n\n    /**\n     * This class is not normally instantiated.\n     */\n    private TransformerUtils() {}\n\n    /**\n     * Gets a transformer that always throws an exception.\n     * This could be useful during testing as a placeholder.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @return the transformer\n     * @see ExceptionTransformer\n     */\n    public static <I, O> Transformer<I, O> exceptionTransformer() {\n        return ExceptionTransformer.exceptionTransformer();\n    }\n\n    /**\n     * Gets a transformer that always returns null.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @return the transformer\n     * @see ConstantTransformer\n     */\n    public static <I, O> Transformer<I, O> nullTransformer() {\n        return ConstantTransformer.nullTransformer();\n    }\n\n    /**\n     * Gets a transformer that returns the input object.\n     * The input object should be immutable to maintain the\n     * contract of Transformer (although this is not checked).\n     *\n     * @param <T>  the input/output type\n     * @return the transformer\n     * @see NOPTransformer\n     */\n    public static <T> Transformer<T, T> nopTransformer() {\n        return NOPTransformer.nopTransformer();\n    }\n\n    /**\n     * Gets a transformer that returns a clone of the input object.\n     * The input object will be cloned using one of these techniques (in order):\n     * <ul>\n     * <li>public clone method\n     * <li>public copy constructor\n     * <li>serialization clone\n     * <ul>\n     *\n     * @param <T>  the input/output type\n     * @return the transformer\n     * @see CloneTransformer\n     */\n    public static <T> Transformer<T, T> cloneTransformer() {\n        return CloneTransformer.cloneTransformer();\n    }\n\n    /**\n     * Creates a Transformer that will return the same object each time the\n     * transformer is used.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param constantToReturn  the constant object to return each time in the transformer\n     * @return the transformer.\n     * @see ConstantTransformer\n     */\n    public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn) {\n        return ConstantTransformer.constantTransformer(constantToReturn);\n    }\n\n    /**\n     * Creates a Transformer that calls a Closure each time the transformer is used.\n     * The transformer returns the input object.\n     *\n     * @param <T>  the input/output type\n     * @param closure  the closure to run each time in the transformer, not null\n     * @return the transformer\n     * @throws NullPointerException if the closure is null\n     * @see ClosureTransformer\n     */\n    public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure) {\n        return ClosureTransformer.closureTransformer(closure);\n    }\n\n    /**\n     * Creates a Transformer that calls a Predicate each time the transformer is used.\n     * The transformer will return either Boolean.TRUE or Boolean.FALSE.\n     *\n     * @param <T>  the input type\n     * @param predicate  the predicate to run each time in the transformer, not null\n     * @return the transformer\n     * @throws NullPointerException if the predicate is null\n     * @see PredicateTransformer\n     */\n    public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate) {\n        return PredicateTransformer.predicateTransformer(predicate);\n    }\n\n    /**\n     * Creates a Transformer that calls a Factory each time the transformer is used.\n     * The transformer will return the value returned by the factory.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param factory  the factory to run each time in the transformer, not null\n     * @return the transformer\n     * @throws NullPointerException if the factory is null\n     * @see FactoryTransformer\n     */\n    public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory) {\n        return FactoryTransformer.factoryTransformer(factory);\n    }\n\n    /**\n     * Create a new Transformer that calls each transformer in turn, passing the\n     * result into the next transformer.\n     *\n     * @param <T>  the input/output type\n     * @param transformers  an array of transformers to chain\n     * @return the transformer\n     * @throws NullPointerException if the transformers array or any of the transformers is null\n     * @see ChainedTransformer\n     */\n    public static <T> Transformer<T, T> chainedTransformer(\n            final Transformer<? super T, ? extends T>... transformers) {\n        return ChainedTransformer.chainedTransformer(transformers);\n    }\n\n    /**\n     * Create a new Transformer that calls each transformer in turn, passing the\n     * result into the next transformer. The ordering is that of the iterator()\n     * method on the collection.\n     *\n     * @param <T>  the input/output type\n     * @param transformers  a collection of transformers to chain\n     * @return the transformer\n     * @throws NullPointerException if the transformers collection or any of the transformers is null\n     * @see ChainedTransformer\n     */\n    public static <T> Transformer<T, T> chainedTransformer(\n            final Collection<? extends Transformer<? super T, ? extends T>> transformers) {\n        return ChainedTransformer.chainedTransformer(transformers);\n    }\n\n    /**\n     * Create a new Transformer that calls the transformer if the predicate is true,\n     * otherwise the input object is returned unchanged.\n     *\n     * @param <T>  the input / output type\n     * @param predicate  the predicate to switch on\n     * @param trueTransformer  the transformer called if the predicate is true\n     * @return the transformer\n     * @throws NullPointerException if either the predicate or transformer is null\n     * @see IfTransformer\n     * @since 4.1\n     */\n    public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate,\n                                                      final Transformer<? super T, ? extends T> trueTransformer) {\n        return IfTransformer.ifTransformer(predicate, trueTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of two transformers depending\n     * on the specified predicate.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicate  the predicate to switch on\n     * @param trueTransformer  the transformer called if the predicate is true\n     * @param falseTransformer  the transformer called if the predicate is false\n     * @return the transformer\n     * @throws NullPointerException if either the predicate or transformer is null\n     * @see IfTransformer\n     * @since 4.1\n     */\n    public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate,\n                                                         final Transformer<? super I, ? extends O> trueTransformer,\n                                                         final Transformer<? super I, ? extends O> falseTransformer) {\n        return IfTransformer.ifTransformer(predicate, trueTransformer, falseTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of two transformers depending\n     * on the specified predicate.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicate  the predicate to switch on\n     * @param trueTransformer  the transformer called if the predicate is true\n     * @param falseTransformer  the transformer called if the predicate is false\n     * @return the transformer\n     * @throws NullPointerException if either the predicate or transformer is null\n     * @see SwitchTransformer\n     * @deprecated as of 4.1, use {@link #ifTransformer(Predicate, Transformer, Transformer))\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Deprecated\n    public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate,\n            final Transformer<? super I, ? extends O> trueTransformer,\n            final Transformer<? super I, ? extends O> falseTransformer) {\n        return SwitchTransformer.switchTransformer(new Predicate[] { predicate },\n                                                   new Transformer[] { trueTransformer }, falseTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates. The transformer at array location 0 is called if the\n     * predicate at array location 0 returned true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, null is returned.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicates  an array of predicates to check\n     * @param transformers  an array of transformers to call\n     * @return the transformer\n     * @throws NullPointerException if the either array is null\n     * @throws NullPointerException if any element in the arrays is null\n     * @throws IllegalArgumentException if the arrays have different sizes\n     * @see SwitchTransformer\n     */\n    public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates,\n            final Transformer<? super I, ? extends O>[] transformers) {\n        return SwitchTransformer.switchTransformer(predicates, transformers, null);\n    }\n\n    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates. The transformer at array location 0 is called if the\n     * predicate at array location 0 returned true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * transformer is called. If the default transformer is null, null is returned.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicates  an array of predicates to check\n     * @param transformers  an array of transformers to call\n     * @param defaultTransformer  the default to call if no predicate matches, null means return null\n     * @return the transformer\n     * @throws NullPointerException if the either array is null\n     * @throws NullPointerException if any element in the arrays is null\n     * @throws IllegalArgumentException if the arrays have different sizes\n     * @see SwitchTransformer\n     */\n    public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates,\n            final Transformer<? super I, ? extends O>[] transformers,\n            final Transformer<? super I, ? extends O> defaultTransformer) {\n        return SwitchTransformer.switchTransformer(predicates, transformers, defaultTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates.\n     * <p>\n     * The Map consists of Predicate keys and Transformer values. A transformer\n     * is called if its matching predicate returns true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * transformer is called. The default transformer is set in the map with a\n     * null key. If no default transformer is set, null will be returned in a default\n     * case. The ordering is that of the iterator() method on the entryset collection\n     * of the map.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicatesAndTransformers  a map of predicates to transformers\n     * @return the transformer\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any transformer in the map is null\n     * @throws ClassCastException  if the map elements are of the wrong type\n     * @see SwitchTransformer\n     */\n    public static <I, O> Transformer<I, O> switchTransformer(\n            final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers) {\n        return SwitchTransformer.switchTransformer(predicatesAndTransformers);\n    }\n\n    /**\n     * Create a new Transformer that uses the input object as a key to find the\n     * transformer to call.\n     * <p>\n     * The Map consists of object keys and Transformer values. A transformer\n     * is called if the input object equals the key. If there is no match, the\n     * default transformer is called. The default transformer is set in the map\n     * using a null key. If no default is set, null will be returned in a default case.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param objectsAndTransformers  a map of objects to transformers\n     * @return the transformer\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any transformer in the map is null\n     * @see SwitchTransformer\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <I, O> Transformer<I, O> switchMapTransformer(\n            final Map<I, Transformer<I, O>> objectsAndTransformers) {\n\n        if (objectsAndTransformers == null) {\n            throw new NullPointerException(\"The object and transformer map must not be null\");\n        }\n        final Transformer<? super I, ? extends O> def = objectsAndTransformers.remove(null);\n        final int size = objectsAndTransformers.size();\n        final Transformer<? super I, ? extends O>[] trs = new Transformer[size];\n        final Predicate<I>[] preds = new Predicate[size];\n        int i = 0;\n        for (final Map.Entry<I, Transformer<I, O>> entry : objectsAndTransformers.entrySet()) {\n            preds[i] = EqualPredicate.<I>equalPredicate(entry.getKey());\n            trs[i++] = entry.getValue();\n        }\n        return TransformerUtils.switchTransformer(preds, trs, def);\n    }\n\n    /**\n     * Gets a Transformer that expects an input Class object that it will instantiate.\n     *\n     * @param <T>  the output type\n     * @return the transformer\n     * @see InstantiateTransformer\n     */\n    public static <T> Transformer<Class<? extends T>, T> instantiateTransformer() {\n        return InstantiateTransformer.instantiateTransformer();\n    }\n\n    /**\n     * Creates a Transformer that expects an input Class object that it will\n     * instantiate. The constructor used is determined by the arguments specified\n     * to this method.\n     *\n     * @param <T>  the output type\n     * @param paramTypes  parameter types for the constructor, can be null\n     * @param args  the arguments to pass to the constructor, can be null\n     * @return the transformer\n     * @throws IllegalArgumentException if the paramTypes and args don't match\n     * @see InstantiateTransformer\n     */\n    public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(\n            final Class<?>[] paramTypes, final Object[] args) {\n        return InstantiateTransformer.instantiateTransformer(paramTypes, args);\n    }\n\n    /**\n     * Creates a Transformer that uses the passed in Map to transform the input\n     * object (as a simple lookup).\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param map  the map to use to transform the objects\n     * @return the transformer, or {@link ConstantTransformer#nullTransformer()} if the\n     *   {@code map} is {@code null}\n     * @see MapTransformer\n     */\n    public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map) {\n        return MapTransformer.mapTransformer(map);\n    }\n\n    /**\n     * Gets a Transformer that invokes a method on the input object.\n     * The method must have no parameters. If the input object is null,\n     * null is returned.\n     * <p>\n     * For example, <code>TransformerUtils.invokerTransformer(\"getName\");</code>\n     * will call the <code>getName/code> method on the input object to\n     * determine the transformer result.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param methodName  the method name to call on the input object, may not be null\n     * @return the transformer\n     * @throws NullPointerException if the methodName is null.\n     * @see InvokerTransformer\n     */\n    public static <I, O> Transformer<I, O> invokerTransformer(final String methodName) {\n        return InvokerTransformer.invokerTransformer(methodName, null, null);\n    }\n\n    /**\n     * Gets a Transformer that invokes a method on the input object.\n     * The method parameters are specified. If the input object is {@code null},\n     * {@code null} is returned.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param methodName  the name of the method\n     * @param paramTypes  the parameter types\n     * @param args  the arguments\n     * @return the transformer\n     * @throws NullPointerException if the method name is null\n     * @throws IllegalArgumentException if the paramTypes and args don't match\n     * @see InvokerTransformer\n     */\n    public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes,\n                                                              final Object[] args) {\n        return InvokerTransformer.invokerTransformer(methodName, paramTypes, args);\n    }\n\n    /**\n     * Gets a transformer that returns a <code>java.lang.String</code>\n     * representation of the input object. This is achieved via the\n     * <code>toString</code> method, <code>null</code> returns 'null'.\n     *\n     * @param <T>  the input type\n     * @return the transformer\n     * @see StringValueTransformer\n     */\n    public static <T> Transformer<T, String> stringValueTransformer() {\n        return StringValueTransformer.stringValueTransformer();\n    }\n\n}\n",
    "tokensGeneralGrammar":[
      "null",
      "true",
      "false",
      ",",
      ".",
      ":",
      ";",
      "?",
      "(",
      ")",
      "jdVar",
      "stream",
      "Arrays",
      "allMatch",
      "noneMatch",
      "anyMatch",
      "~",
      ">>",
      "<<",
      ">>>",
      "|",
      "&",
      "^",
      "+",
      "-",
      "/",
      "*",
      "%",
      "&&",
      "||",
      ">=",
      "<=",
      ">",
      "<",
      "==",
      "!=",
      "instanceof",
      "class",
      "methodResultID",
      "this"
    ],
    "tokensGeneralValuesGlobalDictionary":[
      [
        "0",
        "int"
      ],
      [
        "1",
        "int"
      ],
      [
        "-1",
        "int"
      ],
      [
        "0.0",
        "double"
      ],
      [
        "1.0",
        "double"
      ],
      [
        "-1.0",
        "double"
      ],
      [
        "\"\"",
        "String"
      ],
      [
        "\" \"",
        "String"
      ]
    ],
    "tokensProjectClasses":[
      [
        "BidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "Equator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiSet",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "FunctorException",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractDualBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractOrderedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualLinkedHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractSortedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualTreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "TreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "MultiMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedCollection",
        "org.apache.commons.collections4"
      ],
      [
        "UnmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "CompositeCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "TransformedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "PredicatedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "IndexedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "SynchronizedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "UnmodifiableCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "AbstractCollectionDecorator",
        "org.apache.commons.collections4.collection"
      ],
      [
        "OrderedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "FactoryUtils",
        "org.apache.commons.collections4"
      ],
      [
        "IterableGet",
        "org.apache.commons.collections4"
      ],
      [
        "ListUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Closure",
        "org.apache.commons.collections4"
      ],
      [
        "IterableSortedMap",
        "org.apache.commons.collections4"
      ],
      [
        "MapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Transformer",
        "org.apache.commons.collections4"
      ],
      [
        "DefaultEquator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "StringValueTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateDecorator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IdentityPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ClosureTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FunctorUtils",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "WhileClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ForClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsTruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformedPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NonePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OrPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "MapTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AndPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PrototypeFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AbstractQuantifierPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstanceofPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InvokerTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CloneTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ComparatorPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CatchAndRethrowClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AllPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsFalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AnyPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FactoryTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotNullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "UniquePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OnePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "EqualPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ResettableListIterator",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedIterator",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorChain",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "BooleanComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ReverseComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ComparableComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "TransformingComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "FixedOrderComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "NullComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "CollectionUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ListValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractIterableGetMapDecorator",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "TransformedSplitMap",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "Factory",
        "org.apache.commons.collections4"
      ],
      [
        "IterableUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Bag",
        "org.apache.commons.collections4"
      ],
      [
        "Predicate",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBag",
        "org.apache.commons.collections4"
      ],
      [
        "TrieUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ClosureUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "UnmodifiableTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "KeyAnalyzer",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractPatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractBitwiseTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "StringKeyAnalyzer",
        "org.apache.commons.collections4.trie.analyzer"
      ],
      [
        "TransformedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractLinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "Flat3Map",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "DefaultedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceIdentityMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractSortedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractInputCheckedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazySortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CaseInsensitiveMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractHashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractOrderedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "EntrySetToMapIteratorAdapter",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractIterableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ListOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "SingletonMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableEntrySet",
        "org.apache.commons.collections4.map"
      ],
      [
        "StaticBucketMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiKeyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "HashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PassiveExpiringMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiValueMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LRUMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "TransformedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CompositeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiKey",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntryDecorator",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "TiedMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiSetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "MapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "UnmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "HashSetValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "TransformedMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractSetValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractListValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "ArrayListValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractMultiValuedMapDecorator",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "LazyList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractSerializableListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "TreeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "SetUniqueList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "NodeCachingLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "UnmodifiableList",
        "org.apache.commons.collections4.list"
      ],
      [
        "FixedSizeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "TransformedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "GrowthList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "CursorableLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "PredicatedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "OrderedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractQueueDecorator",
        "org.apache.commons.collections4.queue"
      ],
      [
        "TransformedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "UnmodifiableQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "CircularFifoQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "PredicatedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "FluentIterable",
        "org.apache.commons.collections4"
      ],
      [
        "TransformerUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PredicateUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ResettableIterator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "ArrayStack",
        "org.apache.commons.collections4"
      ],
      [
        "Put",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedMapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "TransformedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "CompositeSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "ListOrderedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSerializableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "MapBackedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSortedSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractNavigableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "IterableMap",
        "org.apache.commons.collections4"
      ],
      [
        "EnumerationUtils",
        "org.apache.commons.collections4"
      ],
      [
        "DeleteCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsHandler",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "InsertCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "SequencesComparator",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsFinder",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "KeepCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "CommandVisitor",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditScript",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "QueueUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SetValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SynchronizedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractMapBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TreeBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "SynchronizedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractSortedBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "PredicatedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSetDecorator",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMapMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "UnmodifiableMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "SynchronizedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "BagUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Unmodifiable",
        "org.apache.commons.collections4"
      ],
      [
        "Get",
        "org.apache.commons.collections4"
      ],
      [
        "Trie",
        "org.apache.commons.collections4"
      ],
      [
        "MultiMap",
        "org.apache.commons.collections4"
      ],
      [
        "KeyValue",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractListIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ZippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "CollatingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UniqueFilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ReverseListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "BoundedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "TransformIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "NodeListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LazyIteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PeekingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectGraphIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PermutationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EnumerationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorIterable",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorEnumeration",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ListIteratorWrapper",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SkippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EntrySetMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PushbackIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractUntypedIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractOrderedMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SplitMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedMap",
        "org.apache.commons.collections4"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticNonVoidMethods":[
      [
        "emptyIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> emptyIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> emptyListIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "singletonIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> singletonIterator(final E object)"
      ],
      [
        "singletonListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> singletonListIterator(final E object)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E... array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)"
      ],
      [
        "unmodifiableListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "objectGraphIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)"
      ],
      [
        "filteredIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "filteredListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)"
      ],
      [
        "loopingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)"
      ],
      [
        "loopingListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final NodeList nodeList)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final Node node)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "skippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)"
      ],
      [
        "asIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "asMultipleUseIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "toListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Object[] toArray(final Iterator<?> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)"
      ],
      [
        "getIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Iterator<?> getIterator(final Object obj)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static boolean isEmpty(final Iterator<?> iterator)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean contains(final Iterator<E> iterator, final Object object)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E get(final Iterator<E> iterator, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static int size(final Iterator<?> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "naturalComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)"
      ],
      [
        "reversedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)"
      ],
      [
        "nullLowComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)"
      ],
      [
        "nullHighComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)"
      ],
      [
        "transformedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "min",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "max",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "unmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableBidiMap",
        "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableOrderedBidiMap",
        "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableSortedBidiMap",
        "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)"
      ],
      [
        "emptyMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static boolean isEmpty(final MultiValuedMap<?, ?> map)"
      ],
      [
        "getCollection",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsList",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsSet",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsBag",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "newListValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()"
      ],
      [
        "newSetValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformedMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "builder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> builder(final Predicate<? super E> predicate)"
      ],
      [
        "notNullBuilder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> notNullBuilder()"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)"
      ],
      [
        "uniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "nonUniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4.collection",
        "SynchronizedCollection",
        "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableCollection",
        "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "nullFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> nullFactory()"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> emptyIfNull(final List<T> list)"
      ],
      [
        "defaultIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)"
      ],
      [
        "sum",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "isEqualList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)"
      ],
      [
        "hashCodeForList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static int hashCodeForList(final Collection<?> list)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "synchronizedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> synchronizedList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> fixedSizeList(final List<E> list)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<List<T>> partition(final List<T> list, final int size)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<? super K, V> map, final K key)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)"
      ],
      [
        "toProperties",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Properties toProperties(final Map<K, V> map)"
      ],
      [
        "toMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)"
      ],
      [
        "invertMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)"
      ],
      [
        "putAll",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isEmpty(final Map<?, ?> map)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isNotEmpty(final Map<?, ?> map)"
      ],
      [
        "synchronizedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "orderedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)"
      ],
      [
        "synchronizedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "iterableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)"
      ],
      [
        "iterableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)"
      ],
      [
        "defaultEquator",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static <T> DefaultEquator<T> defaultEquator()"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4.functors",
        "StringValueTransformer",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4.functors",
        "IdentityPredicate",
        "public static <T> Predicate<T> identityPredicate(final T object)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "closureTransformer",
        "org.apache.commons.collections4.functors",
        "ClosureTransformer",
        "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)"
      ],
      [
        "validate",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <E> Closure<E>[] copy(final Closure<? super E>... closures)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Closure<T> coerce(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "transformerPredicate",
        "org.apache.commons.collections4.functors",
        "TransformerPredicate",
        "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "predicateTransformer",
        "org.apache.commons.collections4.functors",
        "PredicateTransformer",
        "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4.functors",
        "WhileClosure",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4.functors",
        "ForClosure",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsTruePredicate",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4.functors",
        "TransformedPredicate",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)"
      ],
      [
        "transformerClosure",
        "org.apache.commons.collections4.functors",
        "TransformerClosure",
        "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4.functors",
        "OrPredicate",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4.functors",
        "MapTransformer",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4.functors",
        "AndPredicate",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4.functors",
        "PrototypeFactory",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "instanceOfPredicate",
        "org.apache.commons.collections4.functors",
        "InstanceofPredicate",
        "public static Predicate<Object> instanceOfPredicate(final Class<?> type)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4.functors",
        "NotPredicate",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsFalsePredicate",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4.functors",
        "NullIsExceptionPredicate",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "factoryTransformer",
        "org.apache.commons.collections4.functors",
        "FactoryTransformer",
        "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4.functors",
        "UniquePredicate",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4.functors",
        "InstantiateFactory",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "getTrueFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getTrueFirstComparator()"
      ],
      [
        "getFalseFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getFalseFirstComparator()"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator booleanComparator(final boolean trueFirst)"
      ],
      [
        "comparableComparator",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()"
      ],
      [
        "emptyCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyCollection()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)"
      ],
      [
        "containsAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "containsAny",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "getCardinalityMap",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)"
      ],
      [
        "isSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isProperSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)"
      ],
      [
        "cardinality",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "filterInverse",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "exists",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "addIgnoreNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterator<T> iterator, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static Object get(final Object object, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int size(final Object object)"
      ],
      [
        "sizeIsEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean sizeIsEmpty(final Object object)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEmpty(final Collection<?> coll)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isNotEmpty(final Collection<?> coll)"
      ],
      [
        "isFull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isFull(final Collection<? extends Object> coll)"
      ],
      [
        "maxSize",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int maxSize(final Collection<? extends Object> coll)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)"
      ],
      [
        "permutations",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<List<E>> permutations(final Collection<E> collection)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "extractSingleton",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> E extractSingleton(final Collection<E> collection)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.splitmap",
        "TransformedSplitMap",
        "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)"
      ],
      [
        "emptyIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIterable()"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "filteredIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "boundedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)"
      ],
      [
        "loopingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)"
      ],
      [
        "reversedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)"
      ],
      [
        "skippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)"
      ],
      [
        "transformedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "uniqueIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)"
      ],
      [
        "unmodifiableIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static boolean isEmpty(final Iterable<?> iterable)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<E> iterable, final Object object)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)"
      ],
      [
        "frequency",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static int size(final Iterable<?> iterable)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> List<E> toList(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4",
        "TrieUtils",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "asClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)"
      ],
      [
        "doWhileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "switchMapClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4.trie",
        "UnmodifiableTrie",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "isOutOfBoundsIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isOutOfBoundsIndex(final int bitIndex)"
      ],
      [
        "isEqualBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isEqualBitKey(final int bitIndex)"
      ],
      [
        "isNullBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isNullBitKey(final int bitIndex)"
      ],
      [
        "isValidBitIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isValidBitIndex(final int bitIndex)"
      ],
      [
        "isValidUplink",
        "org.apache.commons.collections4.trie",
        "AbstractPatriciaTrie",
        "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)"
      ],
      [
        "compare",
        "org.apache.commons.collections4.trie",
        "AbstractBitwiseTrie",
        "static boolean compare(final Object a, final Object b)"
      ],
      [
        "transformingSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4.map",
        "PredicatedMap",
        "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4.map",
        "FixedSizeSortedMap",
        "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableSortedMap",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4.map",
        "PredicatedSortedMap",
        "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4.map",
        "FixedSizeMap",
        "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "unmodifiableOrderedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableOrderedMap",
        "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableMap",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "listOrderedMap",
        "org.apache.commons.collections4.map",
        "ListOrderedMap",
        "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableEntrySet",
        "org.apache.commons.collections4.map",
        "UnmodifiableEntrySet",
        "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "AbstractReferenceMap",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "ReferenceStrength",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "multiKeyMap",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "emptyMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> emptyMultiSet()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap",
        "UnmodifiableMultiValuedMap",
        "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4.list",
        "LazyList",
        "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "setUniqueList",
        "org.apache.commons.collections4.list",
        "SetUniqueList",
        "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4.list",
        "UnmodifiableList",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4.list",
        "FixedSizeList",
        "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)"
      ],
      [
        "transformingList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "growthList",
        "org.apache.commons.collections4.list",
        "GrowthList",
        "public static <E> GrowthList<E> growthList(final List<E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4.list",
        "PredicatedList",
        "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4.queue",
        "UnmodifiableQueue",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4.queue",
        "PredicatedQueue",
        "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)"
      ],
      [
        "empty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> empty()"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T singleton)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T... elements)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final Iterable<T> iterable)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)"
      ],
      [
        "switchMapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> equalPredicate(final T value)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> identityPredicate(final T value)"
      ],
      [
        "instanceofPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static Predicate<Object> instanceofPredicate(final Class<?> type)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName)"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "eitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "neitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "asPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "emptySet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> emptySet()"
      ],
      [
        "emptySortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> emptySortedSet()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> Set<T> emptyIfNull(final Set<T> set)"
      ],
      [
        "isEqualSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)"
      ],
      [
        "hashCodeForSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> int hashCodeForSet(final Collection<T> set)"
      ],
      [
        "newIdentityHashSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> newIdentityHashSet()"
      ],
      [
        "synchronizedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> synchronizedSet(final Set<E> set)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "orderedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> orderedSet(final Set<E> set)"
      ],
      [
        "synchronizedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "difference",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "transformingSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformingNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4.set",
        "PredicatedNavigableSet",
        "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSet",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSortedSet",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSortedSet",
        "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSet",
        "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableNavigableSet",
        "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "transformingSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <T> T get(final Enumeration<T> e, final int index)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static List<String> toList(final StringTokenizer stringTokenizer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> emptyQueue()"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedBag",
        "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4.bag",
        "CollectionBag",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableBag",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedSortedBag",
        "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableSortedBag",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedBag",
        "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedSortedBag",
        "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "collectionSortedBag",
        "org.apache.commons.collections4.bag",
        "CollectionSortedBag",
        "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4.multiset",
        "PredicatedMultiSet",
        "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4.multiset",
        "UnmodifiableMultiSet",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4.multiset",
        "SynchronizedMultiSet",
        "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> emptyBag()"
      ],
      [
        "emptySortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> emptySortedBag()"
      ],
      [
        "resettableEmptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ResettableListIterator<E> resettableEmptyListIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ListIterator<E> emptyListIterator()"
      ],
      [
        "unmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableIterator",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4.iterators",
        "PeekingIterator",
        "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "umodifiableListIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableListIterator",
        "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableMapIterator",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)"
      ],
      [
        "resettableEmptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> ResettableIterator<E> resettableEmptyIterator()"
      ],
      [
        "emptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> Iterator<E> emptyIterator()"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4.iterators",
        "PushbackIterator",
        "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "readableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)"
      ],
      [
        "writableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticAttributes":[
      [
        "EMPTY_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_LIST_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;"
      ],
      [
        "EMPTY_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;"
      ],
      [
        "NATURAL_COMPARATOR",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();"
      ],
      [
        "EMPTY_MULTI_VALUED_MAP",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));"
      ],
      [
        "EMPTY_SORTED_MAP",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();"
      ],
      [
        "HASHCODE_NULL",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final int HASHCODE_NULL = -1;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static final Closure INSTANCE = new ExceptionClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static final Closure INSTANCE = new NOPClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static final Predicate INSTANCE = new NullPredicate<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static final Transformer INSTANCE = new NOPTransformer<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static final Factory INSTANCE = new ExceptionFactory<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static final Predicate INSTANCE = new FalsePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static final Transformer INSTANCE = new CloneTransformer<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static final Predicate INSTANCE = new TruePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static final Predicate INSTANCE = new NotNullPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static final ComparableComparator INSTANCE = new ComparableComparator();"
      ],
      [
        "EMPTY_COLLECTION",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());"
      ],
      [
        "EMPTY_ITERABLE",
        "org.apache.commons.collections4",
        "IterableUtils",
        "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};"
      ],
      [
        "NULL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int NULL_BIT_KEY = -1;"
      ],
      [
        "EQUAL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int EQUAL_BIT_KEY = -2;"
      ],
      [
        "OUT_OF_BOUNDS_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();"
      ],
      [
        "LENGTH",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final int LENGTH = Character.SIZE;"
      ],
      [
        "NO_NEXT_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";"
      ],
      [
        "NO_PREVIOUS_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";"
      ],
      [
        "REMOVE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";"
      ],
      [
        "GETKEY_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";"
      ],
      [
        "GETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";"
      ],
      [
        "SETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";"
      ],
      [
        "DEFAULT_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_CAPACITY = 16;"
      ],
      [
        "DEFAULT_THRESHOLD",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_THRESHOLD = 12;"
      ],
      [
        "DEFAULT_LOAD_FACTOR",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;"
      ],
      [
        "MAXIMUM_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int MAXIMUM_CAPACITY = 1 << 30;"
      ],
      [
        "NULL",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final Object NULL = new Object();"
      ],
      [
        "DEFAULT_MAX_SIZE",
        "org.apache.commons.collections4.map",
        "LRUMap",
        "protected static final int DEFAULT_MAX_SIZE = 100;"
      ],
      [
        "EMPTY_MULTISET",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());"
      ],
      [
        "EMPTY_SORTED_SET",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());"
      ],
      [
        "EMPTY_QUEUE",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());"
      ],
      [
        "EMPTY_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());"
      ],
      [
        "EMPTY_SORTED_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;"
      ]
    ],
    "tokensMethodJavadocValues":[

    ],
    "tokensMethodArguments":[
      [
        "objectsAndTransformers",
        "java.util.Map",
        "Map<I, Transformer<I, O>>"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods":[
      [
        "getClass",
        "java.lang",
        "Object",
        "public final native Class<? extends Object> getClass()"
      ],
      [
        "hashCode",
        "java.lang",
        "Object",
        "public native int hashCode()"
      ],
      [
        "toString",
        "java.lang",
        "Object",
        "public String toString()"
      ],
      [
        "equals",
        "java.lang",
        "Object",
        "public boolean equals(Object arg0)"
      ],
      [
        "clone",
        "java.lang",
        "Object",
        "protected native Object clone() throws CloneNotSupportedException"
      ],
      [
        "containsValue",
        "java.util",
        "Map",
        "public abstract boolean containsValue(Object arg0)"
      ],
      [
        "getOrDefault",
        "java.util",
        "Map",
        "public default V getOrDefault(Object arg0, V arg1)"
      ],
      [
        "merge",
        "java.util",
        "Map",
        "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)"
      ],
      [
        "equals",
        "java.util",
        "Map",
        "public abstract boolean equals(Object arg0)"
      ],
      [
        "size",
        "java.util",
        "Map",
        "public abstract int size()"
      ],
      [
        "keySet",
        "java.util",
        "Map",
        "public abstract Set<K> keySet()"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public abstract V remove(Object arg0)"
      ],
      [
        "containsKey",
        "java.util",
        "Map",
        "public abstract boolean containsKey(Object arg0)"
      ],
      [
        "hashCode",
        "java.util",
        "Map",
        "public abstract int hashCode()"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default boolean replace(K arg0, V arg1, V arg2)"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public default boolean remove(Object arg0, Object arg1)"
      ],
      [
        "compute",
        "java.util",
        "Map",
        "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "computeIfPresent",
        "java.util",
        "Map",
        "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "put",
        "java.util",
        "Map",
        "public abstract V put(K arg0, V arg1)"
      ],
      [
        "get",
        "java.util",
        "Map",
        "public abstract V get(Object arg0)"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default V replace(K arg0, V arg1)"
      ],
      [
        "computeIfAbsent",
        "java.util",
        "Map",
        "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)"
      ],
      [
        "isEmpty",
        "java.util",
        "Map",
        "public abstract boolean isEmpty()"
      ],
      [
        "values",
        "java.util",
        "Map",
        "public abstract Collection<V> values()"
      ],
      [
        "entrySet",
        "java.util",
        "Map",
        "public abstract Set<Map.Entry<K, V>> entrySet()"
      ],
      [
        "putIfAbsent",
        "java.util",
        "Map",
        "public default V putIfAbsent(K arg0, V arg1)"
      ],
      [
        "transform",
        "org.apache.commons.collections4",
        "Transformer",
        "public abstract O transform(I arg0)"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticAttributes":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticAttributes":[

    ]
  },
  {
    "id":8969,
    "oracle":";",
    "oracleType":"EXCEPT_POST",
    "projectName":"commons-collections4-4.1",
    "packageName":"org.apache.commons.collections4",
    "className":"TransformerUtils",
    "javadocTag":"@throws NullPointerException if any transformer in the map is null",
    "methodJavadoc":"    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates.\n     * <p>\n     * The Map consists of Predicate keys and Transformer values. A transformer\n     * is called if its matching predicate returns true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * transformer is called. The default transformer is set in the map with a\n     * null key. If no default transformer is set, null will be returned in a default\n     * case. The ordering is that of the iterator() method on the entryset collection\n     * of the map.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicatesAndTransformers  a map of predicates to transformers\n     * @return the transformer\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any transformer in the map is null\n     * @throws ClassCastException  if the map elements are of the wrong type\n     * @see SwitchTransformer\n     */",
    "methodSourceCode":"public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers){\n    return SwitchTransformer.switchTransformer(predicatesAndTransformers);\n}",
    "classJavadoc":"/**\n * <code>TransformerUtils</code> provides reference implementations and\n * utilities for the Transformer functor interface. The supplied transformers are:\n * <ul>\n * <li>Invoker - returns the result of a method call on the input object\n * <li>Clone - returns a clone of the input object\n * <li>Constant - always returns the same object\n * <li>Closure - performs a Closure and returns the input object\n * <li>Predicate - returns the result of the predicate as a Boolean\n * <li>Factory - returns a new object from a factory\n * <li>Chained - chains two or more transformers together\n * <li>If - calls one transformer or another based on a predicate\n * <li>Switch - calls one transformer based on one or more predicates\n * <li>SwitchMap - calls one transformer looked up from a Map\n * <li>Instantiate - the Class input object is instantiated\n * <li>Map - returns an object from a supplied Map\n * <li>Null - always returns null\n * <li>NOP - returns the input object, which should be immutable\n * <li>Exception - always throws an exception\n * <li>StringValue - returns a <code>java.lang.String</code> representation of the input object\n * </ul>\n * <p>\n * Since v4.1 only transformers which are considered to be unsafe are\n * Serializable. Transformers considered to be unsafe for serialization are:\n * <ul>\n * <li>Invoker\n * <li>Clone\n * <li>Instantiate\n * </ul>\n *\n * @since 3.0\n * @version $Id: TransformerUtils.java 1714362 2015-11-14 20:38:02Z tn $\n */",
    "classSourceCode":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport java.util.Collection;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.functors.ChainedTransformer;\nimport org.apache.commons.collections4.functors.CloneTransformer;\nimport org.apache.commons.collections4.functors.ClosureTransformer;\nimport org.apache.commons.collections4.functors.ConstantTransformer;\nimport org.apache.commons.collections4.functors.EqualPredicate;\nimport org.apache.commons.collections4.functors.ExceptionTransformer;\nimport org.apache.commons.collections4.functors.FactoryTransformer;\nimport org.apache.commons.collections4.functors.IfTransformer;\nimport org.apache.commons.collections4.functors.InstantiateTransformer;\nimport org.apache.commons.collections4.functors.InvokerTransformer;\nimport org.apache.commons.collections4.functors.MapTransformer;\nimport org.apache.commons.collections4.functors.NOPTransformer;\nimport org.apache.commons.collections4.functors.PredicateTransformer;\nimport org.apache.commons.collections4.functors.StringValueTransformer;\nimport org.apache.commons.collections4.functors.SwitchTransformer;\n\n/**\n * <code>TransformerUtils</code> provides reference implementations and\n * utilities for the Transformer functor interface. The supplied transformers are:\n * <ul>\n * <li>Invoker - returns the result of a method call on the input object\n * <li>Clone - returns a clone of the input object\n * <li>Constant - always returns the same object\n * <li>Closure - performs a Closure and returns the input object\n * <li>Predicate - returns the result of the predicate as a Boolean\n * <li>Factory - returns a new object from a factory\n * <li>Chained - chains two or more transformers together\n * <li>If - calls one transformer or another based on a predicate\n * <li>Switch - calls one transformer based on one or more predicates\n * <li>SwitchMap - calls one transformer looked up from a Map\n * <li>Instantiate - the Class input object is instantiated\n * <li>Map - returns an object from a supplied Map\n * <li>Null - always returns null\n * <li>NOP - returns the input object, which should be immutable\n * <li>Exception - always throws an exception\n * <li>StringValue - returns a <code>java.lang.String</code> representation of the input object\n * </ul>\n * <p>\n * Since v4.1 only transformers which are considered to be unsafe are\n * Serializable. Transformers considered to be unsafe for serialization are:\n * <ul>\n * <li>Invoker\n * <li>Clone\n * <li>Instantiate\n * </ul>\n *\n * @since 3.0\n * @version $Id: TransformerUtils.java 1714362 2015-11-14 20:38:02Z tn $\n */\npublic class TransformerUtils {\n\n    /**\n     * This class is not normally instantiated.\n     */\n    private TransformerUtils() {}\n\n    /**\n     * Gets a transformer that always throws an exception.\n     * This could be useful during testing as a placeholder.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @return the transformer\n     * @see ExceptionTransformer\n     */\n    public static <I, O> Transformer<I, O> exceptionTransformer() {\n        return ExceptionTransformer.exceptionTransformer();\n    }\n\n    /**\n     * Gets a transformer that always returns null.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @return the transformer\n     * @see ConstantTransformer\n     */\n    public static <I, O> Transformer<I, O> nullTransformer() {\n        return ConstantTransformer.nullTransformer();\n    }\n\n    /**\n     * Gets a transformer that returns the input object.\n     * The input object should be immutable to maintain the\n     * contract of Transformer (although this is not checked).\n     *\n     * @param <T>  the input/output type\n     * @return the transformer\n     * @see NOPTransformer\n     */\n    public static <T> Transformer<T, T> nopTransformer() {\n        return NOPTransformer.nopTransformer();\n    }\n\n    /**\n     * Gets a transformer that returns a clone of the input object.\n     * The input object will be cloned using one of these techniques (in order):\n     * <ul>\n     * <li>public clone method\n     * <li>public copy constructor\n     * <li>serialization clone\n     * <ul>\n     *\n     * @param <T>  the input/output type\n     * @return the transformer\n     * @see CloneTransformer\n     */\n    public static <T> Transformer<T, T> cloneTransformer() {\n        return CloneTransformer.cloneTransformer();\n    }\n\n    /**\n     * Creates a Transformer that will return the same object each time the\n     * transformer is used.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param constantToReturn  the constant object to return each time in the transformer\n     * @return the transformer.\n     * @see ConstantTransformer\n     */\n    public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn) {\n        return ConstantTransformer.constantTransformer(constantToReturn);\n    }\n\n    /**\n     * Creates a Transformer that calls a Closure each time the transformer is used.\n     * The transformer returns the input object.\n     *\n     * @param <T>  the input/output type\n     * @param closure  the closure to run each time in the transformer, not null\n     * @return the transformer\n     * @throws NullPointerException if the closure is null\n     * @see ClosureTransformer\n     */\n    public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure) {\n        return ClosureTransformer.closureTransformer(closure);\n    }\n\n    /**\n     * Creates a Transformer that calls a Predicate each time the transformer is used.\n     * The transformer will return either Boolean.TRUE or Boolean.FALSE.\n     *\n     * @param <T>  the input type\n     * @param predicate  the predicate to run each time in the transformer, not null\n     * @return the transformer\n     * @throws NullPointerException if the predicate is null\n     * @see PredicateTransformer\n     */\n    public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate) {\n        return PredicateTransformer.predicateTransformer(predicate);\n    }\n\n    /**\n     * Creates a Transformer that calls a Factory each time the transformer is used.\n     * The transformer will return the value returned by the factory.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param factory  the factory to run each time in the transformer, not null\n     * @return the transformer\n     * @throws NullPointerException if the factory is null\n     * @see FactoryTransformer\n     */\n    public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory) {\n        return FactoryTransformer.factoryTransformer(factory);\n    }\n\n    /**\n     * Create a new Transformer that calls each transformer in turn, passing the\n     * result into the next transformer.\n     *\n     * @param <T>  the input/output type\n     * @param transformers  an array of transformers to chain\n     * @return the transformer\n     * @throws NullPointerException if the transformers array or any of the transformers is null\n     * @see ChainedTransformer\n     */\n    public static <T> Transformer<T, T> chainedTransformer(\n            final Transformer<? super T, ? extends T>... transformers) {\n        return ChainedTransformer.chainedTransformer(transformers);\n    }\n\n    /**\n     * Create a new Transformer that calls each transformer in turn, passing the\n     * result into the next transformer. The ordering is that of the iterator()\n     * method on the collection.\n     *\n     * @param <T>  the input/output type\n     * @param transformers  a collection of transformers to chain\n     * @return the transformer\n     * @throws NullPointerException if the transformers collection or any of the transformers is null\n     * @see ChainedTransformer\n     */\n    public static <T> Transformer<T, T> chainedTransformer(\n            final Collection<? extends Transformer<? super T, ? extends T>> transformers) {\n        return ChainedTransformer.chainedTransformer(transformers);\n    }\n\n    /**\n     * Create a new Transformer that calls the transformer if the predicate is true,\n     * otherwise the input object is returned unchanged.\n     *\n     * @param <T>  the input / output type\n     * @param predicate  the predicate to switch on\n     * @param trueTransformer  the transformer called if the predicate is true\n     * @return the transformer\n     * @throws NullPointerException if either the predicate or transformer is null\n     * @see IfTransformer\n     * @since 4.1\n     */\n    public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate,\n                                                      final Transformer<? super T, ? extends T> trueTransformer) {\n        return IfTransformer.ifTransformer(predicate, trueTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of two transformers depending\n     * on the specified predicate.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicate  the predicate to switch on\n     * @param trueTransformer  the transformer called if the predicate is true\n     * @param falseTransformer  the transformer called if the predicate is false\n     * @return the transformer\n     * @throws NullPointerException if either the predicate or transformer is null\n     * @see IfTransformer\n     * @since 4.1\n     */\n    public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate,\n                                                         final Transformer<? super I, ? extends O> trueTransformer,\n                                                         final Transformer<? super I, ? extends O> falseTransformer) {\n        return IfTransformer.ifTransformer(predicate, trueTransformer, falseTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of two transformers depending\n     * on the specified predicate.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicate  the predicate to switch on\n     * @param trueTransformer  the transformer called if the predicate is true\n     * @param falseTransformer  the transformer called if the predicate is false\n     * @return the transformer\n     * @throws NullPointerException if either the predicate or transformer is null\n     * @see SwitchTransformer\n     * @deprecated as of 4.1, use {@link #ifTransformer(Predicate, Transformer, Transformer))\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Deprecated\n    public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate,\n            final Transformer<? super I, ? extends O> trueTransformer,\n            final Transformer<? super I, ? extends O> falseTransformer) {\n        return SwitchTransformer.switchTransformer(new Predicate[] { predicate },\n                                                   new Transformer[] { trueTransformer }, falseTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates. The transformer at array location 0 is called if the\n     * predicate at array location 0 returned true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, null is returned.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicates  an array of predicates to check\n     * @param transformers  an array of transformers to call\n     * @return the transformer\n     * @throws NullPointerException if the either array is null\n     * @throws NullPointerException if any element in the arrays is null\n     * @throws IllegalArgumentException if the arrays have different sizes\n     * @see SwitchTransformer\n     */\n    public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates,\n            final Transformer<? super I, ? extends O>[] transformers) {\n        return SwitchTransformer.switchTransformer(predicates, transformers, null);\n    }\n\n    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates. The transformer at array location 0 is called if the\n     * predicate at array location 0 returned true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * transformer is called. If the default transformer is null, null is returned.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicates  an array of predicates to check\n     * @param transformers  an array of transformers to call\n     * @param defaultTransformer  the default to call if no predicate matches, null means return null\n     * @return the transformer\n     * @throws NullPointerException if the either array is null\n     * @throws NullPointerException if any element in the arrays is null\n     * @throws IllegalArgumentException if the arrays have different sizes\n     * @see SwitchTransformer\n     */\n    public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates,\n            final Transformer<? super I, ? extends O>[] transformers,\n            final Transformer<? super I, ? extends O> defaultTransformer) {\n        return SwitchTransformer.switchTransformer(predicates, transformers, defaultTransformer);\n    }\n\n    /**\n     * Create a new Transformer that calls one of the transformers depending\n     * on the predicates.\n     * <p>\n     * The Map consists of Predicate keys and Transformer values. A transformer\n     * is called if its matching predicate returns true. Each predicate is evaluated\n     * until one returns true. If no predicates evaluate to true, the default\n     * transformer is called. The default transformer is set in the map with a\n     * null key. If no default transformer is set, null will be returned in a default\n     * case. The ordering is that of the iterator() method on the entryset collection\n     * of the map.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param predicatesAndTransformers  a map of predicates to transformers\n     * @return the transformer\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any transformer in the map is null\n     * @throws ClassCastException  if the map elements are of the wrong type\n     * @see SwitchTransformer\n     */\n    public static <I, O> Transformer<I, O> switchTransformer(\n            final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers) {\n        return SwitchTransformer.switchTransformer(predicatesAndTransformers);\n    }\n\n    /**\n     * Create a new Transformer that uses the input object as a key to find the\n     * transformer to call.\n     * <p>\n     * The Map consists of object keys and Transformer values. A transformer\n     * is called if the input object equals the key. If there is no match, the\n     * default transformer is called. The default transformer is set in the map\n     * using a null key. If no default is set, null will be returned in a default case.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param objectsAndTransformers  a map of objects to transformers\n     * @return the transformer\n     * @throws NullPointerException if the map is null\n     * @throws NullPointerException if any transformer in the map is null\n     * @see SwitchTransformer\n     */\n    @SuppressWarnings(\"unchecked\")\n    public static <I, O> Transformer<I, O> switchMapTransformer(\n            final Map<I, Transformer<I, O>> objectsAndTransformers) {\n\n        if (objectsAndTransformers == null) {\n            throw new NullPointerException(\"The object and transformer map must not be null\");\n        }\n        final Transformer<? super I, ? extends O> def = objectsAndTransformers.remove(null);\n        final int size = objectsAndTransformers.size();\n        final Transformer<? super I, ? extends O>[] trs = new Transformer[size];\n        final Predicate<I>[] preds = new Predicate[size];\n        int i = 0;\n        for (final Map.Entry<I, Transformer<I, O>> entry : objectsAndTransformers.entrySet()) {\n            preds[i] = EqualPredicate.<I>equalPredicate(entry.getKey());\n            trs[i++] = entry.getValue();\n        }\n        return TransformerUtils.switchTransformer(preds, trs, def);\n    }\n\n    /**\n     * Gets a Transformer that expects an input Class object that it will instantiate.\n     *\n     * @param <T>  the output type\n     * @return the transformer\n     * @see InstantiateTransformer\n     */\n    public static <T> Transformer<Class<? extends T>, T> instantiateTransformer() {\n        return InstantiateTransformer.instantiateTransformer();\n    }\n\n    /**\n     * Creates a Transformer that expects an input Class object that it will\n     * instantiate. The constructor used is determined by the arguments specified\n     * to this method.\n     *\n     * @param <T>  the output type\n     * @param paramTypes  parameter types for the constructor, can be null\n     * @param args  the arguments to pass to the constructor, can be null\n     * @return the transformer\n     * @throws IllegalArgumentException if the paramTypes and args don't match\n     * @see InstantiateTransformer\n     */\n    public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(\n            final Class<?>[] paramTypes, final Object[] args) {\n        return InstantiateTransformer.instantiateTransformer(paramTypes, args);\n    }\n\n    /**\n     * Creates a Transformer that uses the passed in Map to transform the input\n     * object (as a simple lookup).\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param map  the map to use to transform the objects\n     * @return the transformer, or {@link ConstantTransformer#nullTransformer()} if the\n     *   {@code map} is {@code null}\n     * @see MapTransformer\n     */\n    public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map) {\n        return MapTransformer.mapTransformer(map);\n    }\n\n    /**\n     * Gets a Transformer that invokes a method on the input object.\n     * The method must have no parameters. If the input object is null,\n     * null is returned.\n     * <p>\n     * For example, <code>TransformerUtils.invokerTransformer(\"getName\");</code>\n     * will call the <code>getName/code> method on the input object to\n     * determine the transformer result.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param methodName  the method name to call on the input object, may not be null\n     * @return the transformer\n     * @throws NullPointerException if the methodName is null.\n     * @see InvokerTransformer\n     */\n    public static <I, O> Transformer<I, O> invokerTransformer(final String methodName) {\n        return InvokerTransformer.invokerTransformer(methodName, null, null);\n    }\n\n    /**\n     * Gets a Transformer that invokes a method on the input object.\n     * The method parameters are specified. If the input object is {@code null},\n     * {@code null} is returned.\n     *\n     * @param <I>  the input type\n     * @param <O>  the output type\n     * @param methodName  the name of the method\n     * @param paramTypes  the parameter types\n     * @param args  the arguments\n     * @return the transformer\n     * @throws NullPointerException if the method name is null\n     * @throws IllegalArgumentException if the paramTypes and args don't match\n     * @see InvokerTransformer\n     */\n    public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes,\n                                                              final Object[] args) {\n        return InvokerTransformer.invokerTransformer(methodName, paramTypes, args);\n    }\n\n    /**\n     * Gets a transformer that returns a <code>java.lang.String</code>\n     * representation of the input object. This is achieved via the\n     * <code>toString</code> method, <code>null</code> returns 'null'.\n     *\n     * @param <T>  the input type\n     * @return the transformer\n     * @see StringValueTransformer\n     */\n    public static <T> Transformer<T, String> stringValueTransformer() {\n        return StringValueTransformer.stringValueTransformer();\n    }\n\n}\n",
    "tokensGeneralGrammar":[
      "null",
      "true",
      "false",
      ",",
      ".",
      ":",
      ";",
      "?",
      "(",
      ")",
      "jdVar",
      "stream",
      "Arrays",
      "allMatch",
      "noneMatch",
      "anyMatch",
      "~",
      ">>",
      "<<",
      ">>>",
      "|",
      "&",
      "^",
      "+",
      "-",
      "/",
      "*",
      "%",
      "&&",
      "||",
      ">=",
      "<=",
      ">",
      "<",
      "==",
      "!=",
      "instanceof",
      "class",
      "methodResultID",
      "this"
    ],
    "tokensGeneralValuesGlobalDictionary":[
      [
        "0",
        "int"
      ],
      [
        "1",
        "int"
      ],
      [
        "-1",
        "int"
      ],
      [
        "0.0",
        "double"
      ],
      [
        "1.0",
        "double"
      ],
      [
        "-1.0",
        "double"
      ],
      [
        "\"\"",
        "String"
      ],
      [
        "\" \"",
        "String"
      ]
    ],
    "tokensProjectClasses":[
      [
        "BidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "Equator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiSet",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorUtils",
        "org.apache.commons.collections4"
      ],
      [
        "FunctorException",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractDualBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractOrderedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualLinkedHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "UnmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "AbstractSortedBidiMapDecorator",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualHashBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "DualTreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "TreeBidiMap",
        "org.apache.commons.collections4.bidimap"
      ],
      [
        "MultiMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedCollection",
        "org.apache.commons.collections4"
      ],
      [
        "UnmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "CompositeCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "TransformedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "PredicatedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "IndexedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "SynchronizedCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "UnmodifiableCollection",
        "org.apache.commons.collections4.collection"
      ],
      [
        "AbstractCollectionDecorator",
        "org.apache.commons.collections4.collection"
      ],
      [
        "OrderedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "FactoryUtils",
        "org.apache.commons.collections4"
      ],
      [
        "IterableGet",
        "org.apache.commons.collections4"
      ],
      [
        "ListUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Closure",
        "org.apache.commons.collections4"
      ],
      [
        "IterableSortedMap",
        "org.apache.commons.collections4"
      ],
      [
        "MapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Transformer",
        "org.apache.commons.collections4"
      ],
      [
        "DefaultEquator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "StringValueTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateDecorator",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IdentityPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ClosureTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FunctorUtils",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PredicateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "WhileClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ForClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsTruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformedPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NonePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TransformerClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OrPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NOPTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "MapTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AndPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "PrototypeFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AbstractQuantifierPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstanceofPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InvokerTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CloneTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ConstantFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ChainedTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ComparatorPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "CatchAndRethrowClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AllPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsFalsePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NullIsExceptionPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "AnyPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "TruePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "FactoryTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "NotNullPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "SwitchClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "UniquePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateTransformer",
        "org.apache.commons.collections4.functors"
      ],
      [
        "OnePredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "EqualPredicate",
        "org.apache.commons.collections4.functors"
      ],
      [
        "InstantiateFactory",
        "org.apache.commons.collections4.functors"
      ],
      [
        "IfClosure",
        "org.apache.commons.collections4.functors"
      ],
      [
        "ResettableListIterator",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedIterator",
        "org.apache.commons.collections4"
      ],
      [
        "ComparatorChain",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "BooleanComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ReverseComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "ComparableComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "TransformingComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "FixedOrderComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "NullComparator",
        "org.apache.commons.collections4.comparators"
      ],
      [
        "CollectionUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ListValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractIterableGetMapDecorator",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "TransformedSplitMap",
        "org.apache.commons.collections4.splitmap"
      ],
      [
        "Factory",
        "org.apache.commons.collections4"
      ],
      [
        "IterableUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Bag",
        "org.apache.commons.collections4"
      ],
      [
        "Predicate",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBag",
        "org.apache.commons.collections4"
      ],
      [
        "TrieUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ClosureUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "UnmodifiableTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "KeyAnalyzer",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractPatriciaTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "AbstractBitwiseTrie",
        "org.apache.commons.collections4.trie"
      ],
      [
        "StringKeyAnalyzer",
        "org.apache.commons.collections4.trie.analyzer"
      ],
      [
        "TransformedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractLinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "Flat3Map",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PredicatedSortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "DefaultedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceIdentityMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractSortedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractInputCheckedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "FixedSizeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazySortedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CaseInsensitiveMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractHashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractOrderedMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "EntrySetToMapIteratorAdapter",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractIterableMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ListOrderedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LinkedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "SingletonMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableEntrySet",
        "org.apache.commons.collections4.map"
      ],
      [
        "StaticBucketMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractMapDecorator",
        "org.apache.commons.collections4.map"
      ],
      [
        "AbstractReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiKeyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "HashedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LazyMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "PassiveExpiringMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "MultiValueMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "LRUMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "ReferenceMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "TransformedMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "CompositeMap",
        "org.apache.commons.collections4.map"
      ],
      [
        "UnmodifiableMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiKey",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "DefaultKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntryDecorator",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractKeyValue",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "TiedMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "AbstractMapEntry",
        "org.apache.commons.collections4.keyvalue"
      ],
      [
        "MultiSetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "MapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "UnmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "HashSetValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "TransformedMultiValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractSetValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractListValuedMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "ArrayListValuedHashMap",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "AbstractMultiValuedMapDecorator",
        "org.apache.commons.collections4.multimap"
      ],
      [
        "LazyList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractSerializableListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "TreeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "SetUniqueList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractListDecorator",
        "org.apache.commons.collections4.list"
      ],
      [
        "NodeCachingLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "UnmodifiableList",
        "org.apache.commons.collections4.list"
      ],
      [
        "FixedSizeList",
        "org.apache.commons.collections4.list"
      ],
      [
        "TransformedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "GrowthList",
        "org.apache.commons.collections4.list"
      ],
      [
        "AbstractLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "CursorableLinkedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "PredicatedList",
        "org.apache.commons.collections4.list"
      ],
      [
        "OrderedMap",
        "org.apache.commons.collections4"
      ],
      [
        "AbstractQueueDecorator",
        "org.apache.commons.collections4.queue"
      ],
      [
        "TransformedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "UnmodifiableQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "CircularFifoQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "PredicatedQueue",
        "org.apache.commons.collections4.queue"
      ],
      [
        "FluentIterable",
        "org.apache.commons.collections4"
      ],
      [
        "TransformerUtils",
        "org.apache.commons.collections4"
      ],
      [
        "PredicateUtils",
        "org.apache.commons.collections4"
      ],
      [
        "ResettableIterator",
        "org.apache.commons.collections4"
      ],
      [
        "MultiValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SetUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SortedBidiMap",
        "org.apache.commons.collections4"
      ],
      [
        "ArrayStack",
        "org.apache.commons.collections4"
      ],
      [
        "Put",
        "org.apache.commons.collections4"
      ],
      [
        "OrderedMapIterator",
        "org.apache.commons.collections4"
      ],
      [
        "TransformedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "CompositeSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "ListOrderedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSerializableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "MapBackedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractSortedSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "PredicatedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "AbstractNavigableSetDecorator",
        "org.apache.commons.collections4.set"
      ],
      [
        "UnmodifiableNavigableSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "TransformedSortedSet",
        "org.apache.commons.collections4.set"
      ],
      [
        "IterableMap",
        "org.apache.commons.collections4"
      ],
      [
        "EnumerationUtils",
        "org.apache.commons.collections4"
      ],
      [
        "DeleteCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsHandler",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "InsertCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "SequencesComparator",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "ReplacementsFinder",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "KeepCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditCommand",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "CommandVisitor",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "EditScript",
        "org.apache.commons.collections4.sequence"
      ],
      [
        "QueueUtils",
        "org.apache.commons.collections4"
      ],
      [
        "SetValuedMap",
        "org.apache.commons.collections4"
      ],
      [
        "SynchronizedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractMapBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "UnmodifiableSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TreeBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "PredicatedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "SynchronizedSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "CollectionSortedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "TransformedBag",
        "org.apache.commons.collections4.bag"
      ],
      [
        "AbstractSortedBagDecorator",
        "org.apache.commons.collections4.bag"
      ],
      [
        "HashMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "PredicatedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMultiSetDecorator",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "AbstractMapMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "UnmodifiableMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "SynchronizedMultiSet",
        "org.apache.commons.collections4.multiset"
      ],
      [
        "BagUtils",
        "org.apache.commons.collections4"
      ],
      [
        "Unmodifiable",
        "org.apache.commons.collections4"
      ],
      [
        "Get",
        "org.apache.commons.collections4"
      ],
      [
        "Trie",
        "org.apache.commons.collections4"
      ],
      [
        "MultiMap",
        "org.apache.commons.collections4"
      ],
      [
        "KeyValue",
        "org.apache.commons.collections4"
      ],
      [
        "IteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractListIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ZippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "CollatingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UniqueFilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ReverseListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "BoundedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "TransformIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "NodeListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LazyIteratorChain",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PeekingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectGraphIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PermutationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EnumerationIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorIterable",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractEmptyMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "LoopingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "IteratorEnumeration",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SingletonIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ListIteratorWrapper",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SkippingIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "ObjectArrayListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "UnmodifiableMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EmptyIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "EntrySetMapIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "PushbackIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractUntypedIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "AbstractOrderedMapIteratorDecorator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "FilterListIterator",
        "org.apache.commons.collections4.iterators"
      ],
      [
        "SplitMapUtils",
        "org.apache.commons.collections4"
      ],
      [
        "BoundedMap",
        "org.apache.commons.collections4"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticNonVoidMethods":[
      [
        "emptyIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> emptyIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> emptyListIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "singletonIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> singletonIterator(final E object)"
      ],
      [
        "singletonListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> singletonListIterator(final E object)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E... array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)"
      ],
      [
        "arrayListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)"
      ],
      [
        "boundedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)"
      ],
      [
        "unmodifiableListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "chainedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)"
      ],
      [
        "collatedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)"
      ],
      [
        "objectGraphIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)"
      ],
      [
        "filteredIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "filteredListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)"
      ],
      [
        "loopingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)"
      ],
      [
        "loopingListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final NodeList nodeList)"
      ],
      [
        "nodeListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static NodeListIterator nodeListIterator(final Node node)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "skippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)"
      ],
      [
        "zippingIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)"
      ],
      [
        "asIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)"
      ],
      [
        "asEnumeration",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)"
      ],
      [
        "asIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "asMultipleUseIterable",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)"
      ],
      [
        "toListIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Object[] toArray(final Iterator<?> iterator)"
      ],
      [
        "toArray",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)"
      ],
      [
        "getIterator",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static Iterator<?> getIterator(final Object obj)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static boolean isEmpty(final Iterator<?> iterator)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> boolean contains(final Iterator<E> iterator, final Object object)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> E get(final Iterator<E> iterator, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static int size(final Iterator<?> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "naturalComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)"
      ],
      [
        "chainedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)"
      ],
      [
        "reversedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)"
      ],
      [
        "nullLowComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)"
      ],
      [
        "nullHighComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)"
      ],
      [
        "transformedComparator",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "min",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "max",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)"
      ],
      [
        "unmodifiableBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableBidiMap",
        "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableOrderedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableOrderedBidiMap",
        "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableSortedBidiMap",
        "org.apache.commons.collections4.bidimap",
        "UnmodifiableSortedBidiMap",
        "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)"
      ],
      [
        "emptyMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static boolean isEmpty(final MultiValuedMap<?, ?> map)"
      ],
      [
        "getCollection",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsList",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsSet",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "getValuesAsBag",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)"
      ],
      [
        "newListValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()"
      ],
      [
        "newSetValuedHashMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformedMultiValuedMap",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)"
      ],
      [
        "unmodifiableBoundedCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableBoundedCollection",
        "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedCollection",
        "org.apache.commons.collections4.collection",
        "TransformedCollection",
        "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "builder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> builder(final Predicate<? super E> predicate)"
      ],
      [
        "notNullBuilder",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <E> Builder<E> notNullBuilder()"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4.collection",
        "PredicatedCollection",
        "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)"
      ],
      [
        "uniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "nonUniqueIndexedCollection",
        "org.apache.commons.collections4.collection",
        "IndexedCollection",
        "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4.collection",
        "SynchronizedCollection",
        "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4.collection",
        "UnmodifiableCollection",
        "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "nullFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> nullFactory()"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4",
        "FactoryUtils",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> emptyIfNull(final List<T> list)"
      ],
      [
        "defaultIfNull",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)"
      ],
      [
        "sum",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)"
      ],
      [
        "isEqualList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)"
      ],
      [
        "hashCodeForList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static int hashCodeForList(final Collection<?> list)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "synchronizedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> synchronizedList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> fixedSizeList(final List<E> list)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)"
      ],
      [
        "longestCommonSubsequence",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "ListUtils",
        "public static <T> List<List<T>> partition(final List<T> list, final int size)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<? super K, V> map, final K key)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getObject",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)"
      ],
      [
        "getString",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)"
      ],
      [
        "getBoolean",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)"
      ],
      [
        "getNumber",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)"
      ],
      [
        "getByte",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)"
      ],
      [
        "getShort",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)"
      ],
      [
        "getInteger",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)"
      ],
      [
        "getLong",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)"
      ],
      [
        "getFloat",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)"
      ],
      [
        "getDouble",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)"
      ],
      [
        "getMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)"
      ],
      [
        "getBooleanValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)"
      ],
      [
        "getByteValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)"
      ],
      [
        "getShortValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)"
      ],
      [
        "getIntValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)"
      ],
      [
        "getLongValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)"
      ],
      [
        "getFloatValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)"
      ],
      [
        "getDoubleValue",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)"
      ],
      [
        "toProperties",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Properties toProperties(final Map<K, V> map)"
      ],
      [
        "toMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)"
      ],
      [
        "invertMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)"
      ],
      [
        "putAll",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isEmpty(final Map<?, ?> map)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static boolean isNotEmpty(final Map<?, ?> map)"
      ],
      [
        "synchronizedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "orderedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)"
      ],
      [
        "synchronizedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)"
      ],
      [
        "iterableMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)"
      ],
      [
        "iterableSortedMap",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)"
      ],
      [
        "defaultEquator",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static <T> DefaultEquator<T> defaultEquator()"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4.functors",
        "StringValueTransformer",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4.functors",
        "IfTransformer",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4.functors",
        "IdentityPredicate",
        "public static <T> Predicate<T> identityPredicate(final T object)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "closureTransformer",
        "org.apache.commons.collections4.functors",
        "ClosureTransformer",
        "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)"
      ],
      [
        "validate",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <E> Closure<E>[] copy(final Closure<? super E>... closures)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <T> Closure<T> coerce(final Closure<? super T> closure)"
      ],
      [
        "copy",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)"
      ],
      [
        "coerce",
        "org.apache.commons.collections4.functors",
        "FunctorUtils",
        "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "transformerPredicate",
        "org.apache.commons.collections4.functors",
        "TransformerPredicate",
        "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "predicateTransformer",
        "org.apache.commons.collections4.functors",
        "PredicateTransformer",
        "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4.functors",
        "WhileClosure",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4.functors",
        "ForClosure",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsTruePredicate",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4.functors",
        "TransformedPredicate",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4.functors",
        "NonePredicate",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4.functors",
        "SwitchTransformer",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)"
      ],
      [
        "transformerClosure",
        "org.apache.commons.collections4.functors",
        "TransformerClosure",
        "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4.functors",
        "OrPredicate",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4.functors",
        "MapTransformer",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "exceptionFactory",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static <T> Factory<T> exceptionFactory()"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4.functors",
        "ChainedClosure",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4.functors",
        "AndPredicate",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "prototypeFactory",
        "org.apache.commons.collections4.functors",
        "PrototypeFactory",
        "public static <T> Factory<T> prototypeFactory(final T prototype)"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "instanceOfPredicate",
        "org.apache.commons.collections4.functors",
        "InstanceofPredicate",
        "public static Predicate<Object> instanceOfPredicate(final Class<?> type)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4.functors",
        "InvokerTransformer",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4.functors",
        "NotPredicate",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "constantFactory",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static <T> Factory<T> constantFactory(final T constantToReturn)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4.functors",
        "ChainedTransformer",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)"
      ],
      [
        "comparatorPredicate",
        "org.apache.commons.collections4.functors",
        "ComparatorPredicate",
        "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4.functors",
        "AllPredicate",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4.functors",
        "NullIsFalsePredicate",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4.functors",
        "NullIsExceptionPredicate",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4.functors",
        "AnyPredicate",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "factoryTransformer",
        "org.apache.commons.collections4.functors",
        "FactoryTransformer",
        "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4.functors",
        "SwitchClosure",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4.functors",
        "UniquePredicate",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4.functors",
        "InstantiateTransformer",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4.functors",
        "OnePredicate",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object)"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4.functors",
        "EqualPredicate",
        "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)"
      ],
      [
        "instantiateFactory",
        "org.apache.commons.collections4.functors",
        "InstantiateFactory",
        "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4.functors",
        "IfClosure",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "getTrueFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getTrueFirstComparator()"
      ],
      [
        "getFalseFirstComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator getFalseFirstComparator()"
      ],
      [
        "booleanComparator",
        "org.apache.commons.collections4.comparators",
        "BooleanComparator",
        "public static BooleanComparator booleanComparator(final boolean trueFirst)"
      ],
      [
        "comparableComparator",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()"
      ],
      [
        "emptyCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyCollection()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)"
      ],
      [
        "subtract",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)"
      ],
      [
        "containsAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "containsAny",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)"
      ],
      [
        "getCardinalityMap",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)"
      ],
      [
        "isSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isProperSubCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)"
      ],
      [
        "isEqualCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)"
      ],
      [
        "cardinality",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)"
      ],
      [
        "forAllButLastDo",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)"
      ],
      [
        "filter",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "filterInverse",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "exists",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "select",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)"
      ],
      [
        "selectRejected",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "collect",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)"
      ],
      [
        "addIgnoreNull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)"
      ],
      [
        "addAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterator<T> iterator, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static Object get(final Object object, final int index)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int size(final Object object)"
      ],
      [
        "sizeIsEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean sizeIsEmpty(final Object object)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isEmpty(final Collection<?> coll)"
      ],
      [
        "isNotEmpty",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isNotEmpty(final Collection<?> coll)"
      ],
      [
        "isFull",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static boolean isFull(final Collection<? extends Object> coll)"
      ],
      [
        "maxSize",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static int maxSize(final Collection<? extends Object> coll)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)"
      ],
      [
        "collate",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)"
      ],
      [
        "permutations",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<List<E>> permutations(final Collection<E> collection)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)"
      ],
      [
        "retainAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)"
      ],
      [
        "removeAll",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)"
      ],
      [
        "synchronizedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)"
      ],
      [
        "unmodifiableCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)"
      ],
      [
        "predicatedCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)"
      ],
      [
        "transformingCollection",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "extractSingleton",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static <E> E extractSingleton(final Collection<E> collection)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.splitmap",
        "TransformedSplitMap",
        "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)"
      ],
      [
        "emptyIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIterable()"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)"
      ],
      [
        "chainedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "collatedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "filteredIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "boundedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)"
      ],
      [
        "loopingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)"
      ],
      [
        "reversedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)"
      ],
      [
        "skippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)"
      ],
      [
        "transformedIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)"
      ],
      [
        "uniqueIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)"
      ],
      [
        "unmodifiableIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)"
      ],
      [
        "zippingIterable",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)"
      ],
      [
        "forEachButLast",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)"
      ],
      [
        "find",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "indexOf",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAll",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "matchesAny",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)"
      ],
      [
        "countMatches",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)"
      ],
      [
        "isEmpty",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static boolean isEmpty(final Iterable<?> iterable)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<E> iterable, final Object object)"
      ],
      [
        "contains",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)"
      ],
      [
        "frequency",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <T> T get(final Iterable<T> iterable, final int index)"
      ],
      [
        "size",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static int size(final Iterable<?> iterable)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)"
      ],
      [
        "partition",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> List<E> toList(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)"
      ],
      [
        "toString",
        "org.apache.commons.collections4",
        "IterableUtils",
        "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4",
        "TrieUtils",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "exceptionClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> exceptionClosure()"
      ],
      [
        "nopClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> nopClosure()"
      ],
      [
        "asClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)"
      ],
      [
        "forClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)"
      ],
      [
        "whileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)"
      ],
      [
        "doWhileClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName)"
      ],
      [
        "invokerClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)"
      ],
      [
        "chainedClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)"
      ],
      [
        "ifClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)"
      ],
      [
        "switchClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)"
      ],
      [
        "switchMapClosure",
        "org.apache.commons.collections4",
        "ClosureUtils",
        "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)"
      ],
      [
        "unmodifiableTrie",
        "org.apache.commons.collections4.trie",
        "UnmodifiableTrie",
        "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)"
      ],
      [
        "isOutOfBoundsIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isOutOfBoundsIndex(final int bitIndex)"
      ],
      [
        "isEqualBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isEqualBitKey(final int bitIndex)"
      ],
      [
        "isNullBitKey",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isNullBitKey(final int bitIndex)"
      ],
      [
        "isValidBitIndex",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "static boolean isValidBitIndex(final int bitIndex)"
      ],
      [
        "isValidUplink",
        "org.apache.commons.collections4.trie",
        "AbstractPatriciaTrie",
        "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)"
      ],
      [
        "compare",
        "org.apache.commons.collections4.trie",
        "AbstractBitwiseTrie",
        "static boolean compare(final Object a, final Object b)"
      ],
      [
        "transformingSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedSortedMap",
        "org.apache.commons.collections4.map",
        "TransformedSortedMap",
        "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "predicatedMap",
        "org.apache.commons.collections4.map",
        "PredicatedMap",
        "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "fixedSizeSortedMap",
        "org.apache.commons.collections4.map",
        "FixedSizeSortedMap",
        "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)"
      ],
      [
        "unmodifiableSortedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableSortedMap",
        "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)"
      ],
      [
        "predicatedSortedMap",
        "org.apache.commons.collections4.map",
        "PredicatedSortedMap",
        "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "defaultedMap",
        "org.apache.commons.collections4.map",
        "DefaultedMap",
        "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)"
      ],
      [
        "fixedSizeMap",
        "org.apache.commons.collections4.map",
        "FixedSizeMap",
        "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazySortedMap",
        "org.apache.commons.collections4.map",
        "LazySortedMap",
        "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "unmodifiableOrderedMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableOrderedMap",
        "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)"
      ],
      [
        "unmodifiableMap",
        "org.apache.commons.collections4.map",
        "UnmodifiableMap",
        "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)"
      ],
      [
        "listOrderedMap",
        "org.apache.commons.collections4.map",
        "ListOrderedMap",
        "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)"
      ],
      [
        "unmodifiableEntrySet",
        "org.apache.commons.collections4.map",
        "UnmodifiableEntrySet",
        "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "AbstractReferenceMap",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "resolve",
        "org.apache.commons.collections4.map",
        "ReferenceStrength",
        "public static ReferenceStrength resolve(final int value)"
      ],
      [
        "multiKeyMap",
        "org.apache.commons.collections4.map",
        "MultiKeyMap",
        "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)"
      ],
      [
        "lazyMap",
        "org.apache.commons.collections4.map",
        "LazyMap",
        "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)"
      ],
      [
        "multiValueMap",
        "org.apache.commons.collections4.map",
        "MultiValueMap",
        "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.map",
        "TransformedMap",
        "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "emptyMultiSet",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static <E> MultiSet<E> emptyMultiSet()"
      ],
      [
        "unmodifiableMultiValuedMap",
        "org.apache.commons.collections4.multimap",
        "UnmodifiableMultiValuedMap",
        "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)"
      ],
      [
        "transformingMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "transformedMap",
        "org.apache.commons.collections4.multimap",
        "TransformedMultiValuedMap",
        "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)"
      ],
      [
        "lazyList",
        "org.apache.commons.collections4.list",
        "LazyList",
        "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)"
      ],
      [
        "setUniqueList",
        "org.apache.commons.collections4.list",
        "SetUniqueList",
        "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)"
      ],
      [
        "unmodifiableList",
        "org.apache.commons.collections4.list",
        "UnmodifiableList",
        "public static <E> List<E> unmodifiableList(final List<? extends E> list)"
      ],
      [
        "fixedSizeList",
        "org.apache.commons.collections4.list",
        "FixedSizeList",
        "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)"
      ],
      [
        "transformingList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedList",
        "org.apache.commons.collections4.list",
        "TransformedList",
        "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "growthList",
        "org.apache.commons.collections4.list",
        "GrowthList",
        "public static <E> GrowthList<E> growthList(final List<E> list)"
      ],
      [
        "predicatedList",
        "org.apache.commons.collections4.list",
        "PredicatedList",
        "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedQueue",
        "org.apache.commons.collections4.queue",
        "TransformedQueue",
        "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4.queue",
        "UnmodifiableQueue",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4.queue",
        "PredicatedQueue",
        "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)"
      ],
      [
        "empty",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> empty()"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T singleton)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final T... elements)"
      ],
      [
        "of",
        "org.apache.commons.collections4",
        "FluentIterable",
        "public static <T> FluentIterable<T> of(final Iterable<T> iterable)"
      ],
      [
        "exceptionTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> exceptionTransformer()"
      ],
      [
        "nullTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> nullTransformer()"
      ],
      [
        "nopTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> nopTransformer()"
      ],
      [
        "cloneTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> cloneTransformer()"
      ],
      [
        "constantTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)"
      ],
      [
        "asTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)"
      ],
      [
        "chainedTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)"
      ],
      [
        "ifTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)"
      ],
      [
        "switchTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)"
      ],
      [
        "switchMapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()"
      ],
      [
        "instantiateTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "mapTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)"
      ],
      [
        "invokerTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "stringValueTransformer",
        "org.apache.commons.collections4",
        "TransformerUtils",
        "public static <T> Transformer<T, String> stringValueTransformer()"
      ],
      [
        "exceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> exceptionPredicate()"
      ],
      [
        "truePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> truePredicate()"
      ],
      [
        "falsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> falsePredicate()"
      ],
      [
        "nullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullPredicate()"
      ],
      [
        "notNullPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notNullPredicate()"
      ],
      [
        "equalPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> equalPredicate(final T value)"
      ],
      [
        "identityPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> identityPredicate(final T value)"
      ],
      [
        "instanceofPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static Predicate<Object> instanceofPredicate(final Class<?> type)"
      ],
      [
        "uniquePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> uniquePredicate()"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName)"
      ],
      [
        "invokerPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)"
      ],
      [
        "andPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "allPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "orPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "anyPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "eitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "onePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "neitherPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)"
      ],
      [
        "nonePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)"
      ],
      [
        "notPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "asPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)"
      ],
      [
        "nullIsExceptionPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsFalsePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "nullIsTruePredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)"
      ],
      [
        "transformedPredicate",
        "org.apache.commons.collections4",
        "PredicateUtils",
        "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)"
      ],
      [
        "emptySet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> emptySet()"
      ],
      [
        "emptySortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> emptySortedSet()"
      ],
      [
        "emptyIfNull",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> Set<T> emptyIfNull(final Set<T> set)"
      ],
      [
        "isEqualSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)"
      ],
      [
        "hashCodeForSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <T> int hashCodeForSet(final Collection<T> set)"
      ],
      [
        "newIdentityHashSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> newIdentityHashSet()"
      ],
      [
        "synchronizedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> synchronizedSet(final Set<E> set)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "orderedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> Set<E> orderedSet(final Set<E> set)"
      ],
      [
        "synchronizedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "union",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "difference",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "intersection",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "disjunction",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)"
      ],
      [
        "transformingSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSet",
        "org.apache.commons.collections4.set",
        "TransformedSet",
        "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformingNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedNavigableSet",
        "org.apache.commons.collections4.set",
        "TransformedNavigableSet",
        "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedNavigableSet",
        "org.apache.commons.collections4.set",
        "PredicatedNavigableSet",
        "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)"
      ],
      [
        "listOrderedSet",
        "org.apache.commons.collections4.set",
        "ListOrderedSet",
        "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)"
      ],
      [
        "unmodifiableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSet",
        "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)"
      ],
      [
        "mapBackedSet",
        "org.apache.commons.collections4.set",
        "MapBackedSet",
        "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)"
      ],
      [
        "unmodifiableSortedSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableSortedSet",
        "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)"
      ],
      [
        "predicatedSortedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSortedSet",
        "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "predicatedSet",
        "org.apache.commons.collections4.set",
        "PredicatedSet",
        "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableNavigableSet",
        "org.apache.commons.collections4.set",
        "UnmodifiableNavigableSet",
        "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)"
      ],
      [
        "transformingSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedSet",
        "org.apache.commons.collections4.set",
        "TransformedSortedSet",
        "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "get",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <T> T get(final Enumeration<T> e, final int index)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)"
      ],
      [
        "toList",
        "org.apache.commons.collections4",
        "EnumerationUtils",
        "public static List<String> toList(final StringTokenizer stringTokenizer)"
      ],
      [
        "unmodifiableQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)"
      ],
      [
        "predicatedQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)"
      ],
      [
        "transformingQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyQueue",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static <E> Queue<E> emptyQueue()"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedBag",
        "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4.bag",
        "CollectionBag",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableBag",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedSortedBag",
        "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4.bag",
        "UnmodifiableSortedBag",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedSortedBag",
        "org.apache.commons.collections4.bag",
        "TransformedSortedBag",
        "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4.bag",
        "PredicatedBag",
        "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4.bag",
        "SynchronizedSortedBag",
        "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "collectionSortedBag",
        "org.apache.commons.collections4.bag",
        "CollectionSortedBag",
        "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "transformedBag",
        "org.apache.commons.collections4.bag",
        "TransformedBag",
        "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "predicatedMultiSet",
        "org.apache.commons.collections4.multiset",
        "PredicatedMultiSet",
        "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)"
      ],
      [
        "unmodifiableMultiSet",
        "org.apache.commons.collections4.multiset",
        "UnmodifiableMultiSet",
        "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)"
      ],
      [
        "synchronizedMultiSet",
        "org.apache.commons.collections4.multiset",
        "SynchronizedMultiSet",
        "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)"
      ],
      [
        "synchronizedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)"
      ],
      [
        "unmodifiableBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)"
      ],
      [
        "predicatedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "collectionBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> collectionBag(final Bag<E> bag)"
      ],
      [
        "synchronizedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)"
      ],
      [
        "unmodifiableSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)"
      ],
      [
        "predicatedSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)"
      ],
      [
        "transformingSortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)"
      ],
      [
        "emptyBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> Bag<E> emptyBag()"
      ],
      [
        "emptySortedBag",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static <E> SortedBag<E> emptySortedBag()"
      ],
      [
        "resettableEmptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ResettableListIterator<E> resettableEmptyListIterator()"
      ],
      [
        "emptyListIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static <E> ListIterator<E> emptyListIterator()"
      ],
      [
        "unmodifiableOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)"
      ],
      [
        "unmodifiableIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableIterator",
        "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "peekingIterator",
        "org.apache.commons.collections4.iterators",
        "PeekingIterator",
        "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "emptyMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static <K, V> MapIterator<K, V> emptyMapIterator()"
      ],
      [
        "emptyOrderedIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static <E> OrderedIterator<E> emptyOrderedIterator()"
      ],
      [
        "umodifiableListIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableListIterator",
        "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)"
      ],
      [
        "emptyOrderedMapIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()"
      ],
      [
        "unmodifiableMapIterator",
        "org.apache.commons.collections4.iterators",
        "UnmodifiableMapIterator",
        "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)"
      ],
      [
        "resettableEmptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> ResettableIterator<E> resettableEmptyIterator()"
      ],
      [
        "emptyIterator",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static <E> Iterator<E> emptyIterator()"
      ],
      [
        "pushbackIterator",
        "org.apache.commons.collections4.iterators",
        "PushbackIterator",
        "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)"
      ],
      [
        "readableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)"
      ],
      [
        "writableMap",
        "org.apache.commons.collections4",
        "SplitMapUtils",
        "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)"
      ]
    ],
    "tokensProjectClassesNonPrivateStaticAttributes":[
      [
        "EMPTY_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_LIST_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;"
      ],
      [
        "EMPTY_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;"
      ],
      [
        "EMPTY_ORDERED_MAP_ITERATOR",
        "org.apache.commons.collections4",
        "IteratorUtils",
        "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;"
      ],
      [
        "NATURAL_COMPARATOR",
        "org.apache.commons.collections4",
        "ComparatorUtils",
        "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();"
      ],
      [
        "EMPTY_MULTI_VALUED_MAP",
        "org.apache.commons.collections4",
        "MultiMapUtils",
        "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));"
      ],
      [
        "EMPTY_SORTED_MAP",
        "org.apache.commons.collections4",
        "MapUtils",
        "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();"
      ],
      [
        "HASHCODE_NULL",
        "org.apache.commons.collections4.functors",
        "DefaultEquator",
        "public static final int HASHCODE_NULL = -1;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionClosure",
        "public static final Closure INSTANCE = new ExceptionClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPClosure",
        "public static final Closure INSTANCE = new NOPClosure<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NullPredicate",
        "public static final Predicate INSTANCE = new NullPredicate<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantTransformer",
        "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionTransformer",
        "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NOPTransformer",
        "public static final Transformer INSTANCE = new NOPTransformer<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionFactory",
        "public static final Factory INSTANCE = new ExceptionFactory<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "ExceptionPredicate",
        "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "FalsePredicate",
        "public static final Predicate INSTANCE = new FalsePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "CloneTransformer",
        "public static final Transformer INSTANCE = new CloneTransformer<Object>();"
      ],
      [
        "NULL_INSTANCE",
        "org.apache.commons.collections4.functors",
        "ConstantFactory",
        "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "TruePredicate",
        "public static final Predicate INSTANCE = new TruePredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.functors",
        "NotNullPredicate",
        "public static final Predicate INSTANCE = new NotNullPredicate<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.comparators",
        "ComparableComparator",
        "public static final ComparableComparator INSTANCE = new ComparableComparator();"
      ],
      [
        "EMPTY_COLLECTION",
        "org.apache.commons.collections4",
        "CollectionUtils",
        "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());"
      ],
      [
        "EMPTY_ITERABLE",
        "org.apache.commons.collections4",
        "IterableUtils",
        "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};"
      ],
      [
        "NULL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int NULL_BIT_KEY = -1;"
      ],
      [
        "EQUAL_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int EQUAL_BIT_KEY = -2;"
      ],
      [
        "OUT_OF_BOUNDS_BIT_KEY",
        "org.apache.commons.collections4.trie",
        "KeyAnalyzer",
        "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();"
      ],
      [
        "LENGTH",
        "org.apache.commons.collections4.trie.analyzer",
        "StringKeyAnalyzer",
        "public static final int LENGTH = Character.SIZE;"
      ],
      [
        "NO_NEXT_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";"
      ],
      [
        "NO_PREVIOUS_ENTRY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";"
      ],
      [
        "REMOVE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";"
      ],
      [
        "GETKEY_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";"
      ],
      [
        "GETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";"
      ],
      [
        "SETVALUE_INVALID",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";"
      ],
      [
        "DEFAULT_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_CAPACITY = 16;"
      ],
      [
        "DEFAULT_THRESHOLD",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int DEFAULT_THRESHOLD = 12;"
      ],
      [
        "DEFAULT_LOAD_FACTOR",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;"
      ],
      [
        "MAXIMUM_CAPACITY",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final int MAXIMUM_CAPACITY = 1 << 30;"
      ],
      [
        "NULL",
        "org.apache.commons.collections4.map",
        "AbstractHashedMap",
        "protected static final Object NULL = new Object();"
      ],
      [
        "DEFAULT_MAX_SIZE",
        "org.apache.commons.collections4.map",
        "LRUMap",
        "protected static final int DEFAULT_MAX_SIZE = 100;"
      ],
      [
        "EMPTY_MULTISET",
        "org.apache.commons.collections4",
        "MultiSetUtils",
        "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());"
      ],
      [
        "EMPTY_SORTED_SET",
        "org.apache.commons.collections4",
        "SetUtils",
        "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());"
      ],
      [
        "EMPTY_QUEUE",
        "org.apache.commons.collections4",
        "QueueUtils",
        "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());"
      ],
      [
        "EMPTY_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());"
      ],
      [
        "EMPTY_SORTED_BAG",
        "org.apache.commons.collections4",
        "BagUtils",
        "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyListIterator",
        "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyMapIterator",
        "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedIterator",
        "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyOrderedMapIterator",
        "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();"
      ],
      [
        "RESETTABLE_INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();"
      ],
      [
        "INSTANCE",
        "org.apache.commons.collections4.iterators",
        "EmptyIterator",
        "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;"
      ]
    ],
    "tokensMethodJavadocValues":[

    ],
    "tokensMethodArguments":[
      [
        "predicatesAndTransformers",
        "java.util.Map",
        "Map<Predicate<I>, Transformer<I, O>>"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods":[
      [
        "clone",
        "java.lang",
        "Object",
        "protected native Object clone() throws CloneNotSupportedException"
      ],
      [
        "toString",
        "java.lang",
        "Object",
        "public String toString()"
      ],
      [
        "getClass",
        "java.lang",
        "Object",
        "public final native Class<? extends Object> getClass()"
      ],
      [
        "hashCode",
        "java.lang",
        "Object",
        "public native int hashCode()"
      ],
      [
        "equals",
        "java.lang",
        "Object",
        "public boolean equals(Object arg0)"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public abstract V remove(Object arg0)"
      ],
      [
        "containsKey",
        "java.util",
        "Map",
        "public abstract boolean containsKey(Object arg0)"
      ],
      [
        "size",
        "java.util",
        "Map",
        "public abstract int size()"
      ],
      [
        "remove",
        "java.util",
        "Map",
        "public default boolean remove(Object arg0, Object arg1)"
      ],
      [
        "compute",
        "java.util",
        "Map",
        "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "keySet",
        "java.util",
        "Map",
        "public abstract Set<K> keySet()"
      ],
      [
        "hashCode",
        "java.util",
        "Map",
        "public abstract int hashCode()"
      ],
      [
        "isEmpty",
        "java.util",
        "Map",
        "public abstract boolean isEmpty()"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default boolean replace(K arg0, V arg1, V arg2)"
      ],
      [
        "getOrDefault",
        "java.util",
        "Map",
        "public default V getOrDefault(Object arg0, V arg1)"
      ],
      [
        "containsValue",
        "java.util",
        "Map",
        "public abstract boolean containsValue(Object arg0)"
      ],
      [
        "replace",
        "java.util",
        "Map",
        "public default V replace(K arg0, V arg1)"
      ],
      [
        "equals",
        "java.util",
        "Map",
        "public abstract boolean equals(Object arg0)"
      ],
      [
        "computeIfPresent",
        "java.util",
        "Map",
        "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)"
      ],
      [
        "values",
        "java.util",
        "Map",
        "public abstract Collection<V> values()"
      ],
      [
        "merge",
        "java.util",
        "Map",
        "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)"
      ],
      [
        "computeIfAbsent",
        "java.util",
        "Map",
        "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)"
      ],
      [
        "entrySet",
        "java.util",
        "Map",
        "public abstract Set<Map.Entry<K, V>> entrySet()"
      ],
      [
        "putIfAbsent",
        "java.util",
        "Map",
        "public default V putIfAbsent(K arg0, V arg1)"
      ],
      [
        "put",
        "java.util",
        "Map",
        "public abstract V put(K arg0, V arg1)"
      ],
      [
        "get",
        "java.util",
        "Map",
        "public abstract V get(Object arg0)"
      ],
      [
        "transform",
        "org.apache.commons.collections4",
        "Transformer",
        "public abstract O transform(I arg0)"
      ]
    ],
    "tokensMethodVariablesNonPrivateNonStaticAttributes":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods":[

    ],
    "tokensOracleVariablesNonPrivateNonStaticAttributes":[

    ]
  }
]