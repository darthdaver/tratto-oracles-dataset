[ {
  "id" : 6350,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.collection",
  "className" : "IndexedCollection",
  "javadocTag" : "@throws IllegalArgumentException if the object maps to an existing key and the index\n  enforces a uniqueness constraint",
  "methodJavadoc" : "    /**\n     * {@inheritDoc}\n     *\n     * @throws IllegalArgumentException if the object maps to an existing key and the index\n     *   enforces a uniqueness constraint\n     */",
  "methodSourceCode" : "public boolean add(final C object){\n    final boolean added = super.add(object);\n    if (added) {\n        addToIndex(object);\n    }\n    return added;\n}",
  "classJavadoc" : "/**\n * An IndexedCollection is a Map-like view onto a Collection. It accepts a\n * keyTransformer to define how the keys are converted from the values.\n * <p>\n * Modifications made to this decorator modify the index as well as the\n * decorated {@link Collection}. However, modifications to the underlying\n * {@link Collection} will not update the index and it will get out of sync.\n * <p>\n * If modification of the decorated {@link Collection} is unavoidable, then a\n * call to {@link #reindex()} will update the index to the current contents of\n * the {@link Collection}.\n *\n * @param <K> the type of object in the index.\n * @param <C> the type of object in the collection.\n *\n * @since 4.0\n * @version $Id: IndexedCollection.java 1683018 2015-06-01 22:41:31Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.collection;\n\nimport java.util.Collection;\nimport java.util.HashMap;\n\nimport org.apache.commons.collections4.MultiMap;\nimport org.apache.commons.collections4.Transformer;\nimport org.apache.commons.collections4.map.MultiValueMap;\n\n/**\n * An IndexedCollection is a Map-like view onto a Collection. It accepts a\n * keyTransformer to define how the keys are converted from the values.\n * <p>\n * Modifications made to this decorator modify the index as well as the\n * decorated {@link Collection}. However, modifications to the underlying\n * {@link Collection} will not update the index and it will get out of sync.\n * <p>\n * If modification of the decorated {@link Collection} is unavoidable, then a\n * call to {@link #reindex()} will update the index to the current contents of\n * the {@link Collection}.\n *\n * @param <K> the type of object in the index.\n * @param <C> the type of object in the collection.\n *\n * @since 4.0\n * @version $Id: IndexedCollection.java 1683018 2015-06-01 22:41:31Z tn $\n */\npublic class IndexedCollection<K, C> extends AbstractCollectionDecorator<C> {\n\n    // TODO: replace with MultiValuedMap\n\n    /** Serialization version */\n    private static final long serialVersionUID = -5512610452568370038L;\n\n    /** The {@link Transformer} for generating index keys. */\n    private final Transformer<C, K> keyTransformer;\n\n    /** The map of indexes to collected objects. */\n    private final MultiMap<K, C> index;\n\n    /** The uniqueness constraint for the index. */\n    private final boolean uniqueIndex;\n\n    /**\n     * Create an {@link IndexedCollection} for a unique index.\n     * <p>\n     * If an element is added, which maps to an existing key, an {@link IllegalArgumentException}\n     * will be thrown.\n     *\n     * @param <K> the index object type.\n     * @param <C> the collection type.\n     * @param coll the decorated {@link Collection}.\n     * @param keyTransformer the {@link Transformer} for generating index keys.\n     * @return the created {@link IndexedCollection}.\n     */\n    public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll,\n                                                                         final Transformer<C, K> keyTransformer) {\n        return new IndexedCollection<K, C>(coll, keyTransformer,\n                                           MultiValueMap.<K, C>multiValueMap(new HashMap<K, Collection<C>>()),\n                                           true);\n    }\n\n    /**\n     * Create an {@link IndexedCollection} for a non-unique index.\n     *\n     * @param <K> the index object type.\n     * @param <C> the collection type.\n     * @param coll the decorated {@link Collection}.\n     * @param keyTransformer the {@link Transformer} for generating index keys.\n     * @return the created {@link IndexedCollection}.\n     */\n    public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll,\n                                                                            final Transformer<C, K> keyTransformer) {\n        return new IndexedCollection<K, C>(coll, keyTransformer,\n                                           MultiValueMap.<K, C>multiValueMap(new HashMap<K, Collection<C>>()),\n                                           false);\n    }\n\n    /**\n     * Create a {@link IndexedCollection}.\n     *\n     * @param coll  decorated {@link Collection}\n     * @param keyTransformer  {@link Transformer} for generating index keys\n     * @param map  map to use as index\n     * @param uniqueIndex  if the index shall enforce uniqueness of index keys\n     */\n    public IndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer,\n                             final MultiMap<K, C> map, final boolean uniqueIndex) {\n        super(coll);\n        this.keyTransformer = keyTransformer;\n        this.index = map;\n        this.uniqueIndex = uniqueIndex;\n        reindex();\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @throws IllegalArgumentException if the object maps to an existing key and the index\n     *   enforces a uniqueness constraint\n     */\n    @Override\n    public boolean add(final C object) {\n        final boolean added = super.add(object);\n        if (added) {\n            addToIndex(object);\n        }\n        return added;\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends C> coll) {\n        boolean changed = false;\n        for (final C c: coll) {\n            changed |= add(c);\n        }\n        return changed;\n    }\n\n    @Override\n    public void clear() {\n        super.clear();\n        index.clear();\n    }\n\n    /**\n     * {@inheritDoc}\n     * <p>\n     * Note: uses the index for fast lookup\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public boolean contains(final Object object) {\n        return index.containsKey(keyTransformer.transform((C) object));\n    }\n\n    /**\n     * {@inheritDoc}\n     * <p>\n     * Note: uses the index for fast lookup\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        for (final Object o : coll) {\n            if (!contains(o)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Get the element associated with the given key.\n     * <p>\n     * In case of a non-unique index, this method will return the first\n     * value associated with the given key. To retrieve all elements associated\n     * with a key, use {@link #values(Object)}.\n     *\n     * @param key  key to look up\n     * @return element found\n     * @see #values(Object)\n     */\n    public C get(final K key) {\n        @SuppressWarnings(\"unchecked\") // index is a MultiMap which returns a Collection\n        final Collection<C> coll = (Collection<C>) index.get(key);\n        return coll == null ? null : coll.iterator().next();\n    }\n\n    /**\n     * Get all elements associated with the given key.\n     *\n     * @param key  key to look up\n     * @return a collection of elements found, or null if {@code contains(key) == false}\n     */\n    @SuppressWarnings(\"unchecked\") // index is a MultiMap which returns a Collection\n    public Collection<C> values(final K key) {\n        return (Collection<C>) index.get(key);\n    }\n\n    /**\n     * Clears the index and re-indexes the entire decorated {@link Collection}.\n     */\n    public void reindex() {\n        index.clear();\n        for (final C c : decorated()) {\n            addToIndex(c);\n        }\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public boolean remove(final Object object) {\n        final boolean removed = super.remove(object);\n        if (removed) {\n            removeFromIndex((C) object);\n        }\n        return removed;\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean changed = false;\n        for (final Object o : coll) {\n            changed |= remove(o);\n        }\n        return changed;\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        final boolean changed = super.retainAll(coll);\n        if (changed) {\n            reindex();\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Provides checking for adding the index.\n     *\n     * @param object the object to index\n     * @throws IllegalArgumentException if the object maps to an existing key and the index\n     *   enforces a uniqueness constraint\n     */\n    private void addToIndex(final C object) {\n        final K key = keyTransformer.transform(object);\n        if (uniqueIndex && index.containsKey(key)) {\n            throw new IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n        }\n        index.put(key, object);\n    }\n\n    /**\n     * Removes an object from the index.\n     *\n     * @param object the object to remove\n     */\n    private void removeFromIndex(final C object) {\n        index.remove(keyTransformer.transform(object));\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "object", "", "C" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "retainAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean retainAll(final Collection<?> coll)" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "add", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean add(final C object)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "removeAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean removeAll(final Collection<?> coll)" ], [ "remove", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean remove(final Object object)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "containsAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean containsAll(final Collection<?> coll)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "addAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean addAll(final Collection<? extends C> coll)" ], [ "values", "org.apache.commons.collections4.collection", "IndexedCollection", "public Collection<C> values(final K key)" ], [ "get", "org.apache.commons.collections4.collection", "IndexedCollection", "public C get(final K key)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "contains", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean contains(final Object object)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toString", "java.lang", "Object", "public String toString()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 6359,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.collection",
  "className" : "IndexedCollection",
  "javadocTag" : "@param keyTransformer {@link Transformer} for generating index keys",
  "methodJavadoc" : "    /**\n     * Create a {@link IndexedCollection}.\n     *\n     * @param coll  decorated {@link Collection}\n     * @param keyTransformer  {@link Transformer} for generating index keys\n     * @param map  map to use as index\n     * @param uniqueIndex  if the index shall enforce uniqueness of index keys\n     */",
  "methodSourceCode" : "public IndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer, final MultiMap<K, C> map, final boolean uniqueIndex){\n    super(coll);\n    this.keyTransformer = keyTransformer;\n    this.index = map;\n    this.uniqueIndex = uniqueIndex;\n    reindex();\n}",
  "classJavadoc" : "/**\n * An IndexedCollection is a Map-like view onto a Collection. It accepts a\n * keyTransformer to define how the keys are converted from the values.\n * <p>\n * Modifications made to this decorator modify the index as well as the\n * decorated {@link Collection}. However, modifications to the underlying\n * {@link Collection} will not update the index and it will get out of sync.\n * <p>\n * If modification of the decorated {@link Collection} is unavoidable, then a\n * call to {@link #reindex()} will update the index to the current contents of\n * the {@link Collection}.\n *\n * @param <K> the type of object in the index.\n * @param <C> the type of object in the collection.\n *\n * @since 4.0\n * @version $Id: IndexedCollection.java 1683018 2015-06-01 22:41:31Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.collection;\n\nimport java.util.Collection;\nimport java.util.HashMap;\n\nimport org.apache.commons.collections4.MultiMap;\nimport org.apache.commons.collections4.Transformer;\nimport org.apache.commons.collections4.map.MultiValueMap;\n\n/**\n * An IndexedCollection is a Map-like view onto a Collection. It accepts a\n * keyTransformer to define how the keys are converted from the values.\n * <p>\n * Modifications made to this decorator modify the index as well as the\n * decorated {@link Collection}. However, modifications to the underlying\n * {@link Collection} will not update the index and it will get out of sync.\n * <p>\n * If modification of the decorated {@link Collection} is unavoidable, then a\n * call to {@link #reindex()} will update the index to the current contents of\n * the {@link Collection}.\n *\n * @param <K> the type of object in the index.\n * @param <C> the type of object in the collection.\n *\n * @since 4.0\n * @version $Id: IndexedCollection.java 1683018 2015-06-01 22:41:31Z tn $\n */\npublic class IndexedCollection<K, C> extends AbstractCollectionDecorator<C> {\n\n    // TODO: replace with MultiValuedMap\n\n    /** Serialization version */\n    private static final long serialVersionUID = -5512610452568370038L;\n\n    /** The {@link Transformer} for generating index keys. */\n    private final Transformer<C, K> keyTransformer;\n\n    /** The map of indexes to collected objects. */\n    private final MultiMap<K, C> index;\n\n    /** The uniqueness constraint for the index. */\n    private final boolean uniqueIndex;\n\n    /**\n     * Create an {@link IndexedCollection} for a unique index.\n     * <p>\n     * If an element is added, which maps to an existing key, an {@link IllegalArgumentException}\n     * will be thrown.\n     *\n     * @param <K> the index object type.\n     * @param <C> the collection type.\n     * @param coll the decorated {@link Collection}.\n     * @param keyTransformer the {@link Transformer} for generating index keys.\n     * @return the created {@link IndexedCollection}.\n     */\n    public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll,\n                                                                         final Transformer<C, K> keyTransformer) {\n        return new IndexedCollection<K, C>(coll, keyTransformer,\n                                           MultiValueMap.<K, C>multiValueMap(new HashMap<K, Collection<C>>()),\n                                           true);\n    }\n\n    /**\n     * Create an {@link IndexedCollection} for a non-unique index.\n     *\n     * @param <K> the index object type.\n     * @param <C> the collection type.\n     * @param coll the decorated {@link Collection}.\n     * @param keyTransformer the {@link Transformer} for generating index keys.\n     * @return the created {@link IndexedCollection}.\n     */\n    public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll,\n                                                                            final Transformer<C, K> keyTransformer) {\n        return new IndexedCollection<K, C>(coll, keyTransformer,\n                                           MultiValueMap.<K, C>multiValueMap(new HashMap<K, Collection<C>>()),\n                                           false);\n    }\n\n    /**\n     * Create a {@link IndexedCollection}.\n     *\n     * @param coll  decorated {@link Collection}\n     * @param keyTransformer  {@link Transformer} for generating index keys\n     * @param map  map to use as index\n     * @param uniqueIndex  if the index shall enforce uniqueness of index keys\n     */\n    public IndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer,\n                             final MultiMap<K, C> map, final boolean uniqueIndex) {\n        super(coll);\n        this.keyTransformer = keyTransformer;\n        this.index = map;\n        this.uniqueIndex = uniqueIndex;\n        reindex();\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @throws IllegalArgumentException if the object maps to an existing key and the index\n     *   enforces a uniqueness constraint\n     */\n    @Override\n    public boolean add(final C object) {\n        final boolean added = super.add(object);\n        if (added) {\n            addToIndex(object);\n        }\n        return added;\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends C> coll) {\n        boolean changed = false;\n        for (final C c: coll) {\n            changed |= add(c);\n        }\n        return changed;\n    }\n\n    @Override\n    public void clear() {\n        super.clear();\n        index.clear();\n    }\n\n    /**\n     * {@inheritDoc}\n     * <p>\n     * Note: uses the index for fast lookup\n     */\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public boolean contains(final Object object) {\n        return index.containsKey(keyTransformer.transform((C) object));\n    }\n\n    /**\n     * {@inheritDoc}\n     * <p>\n     * Note: uses the index for fast lookup\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        for (final Object o : coll) {\n            if (!contains(o)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Get the element associated with the given key.\n     * <p>\n     * In case of a non-unique index, this method will return the first\n     * value associated with the given key. To retrieve all elements associated\n     * with a key, use {@link #values(Object)}.\n     *\n     * @param key  key to look up\n     * @return element found\n     * @see #values(Object)\n     */\n    public C get(final K key) {\n        @SuppressWarnings(\"unchecked\") // index is a MultiMap which returns a Collection\n        final Collection<C> coll = (Collection<C>) index.get(key);\n        return coll == null ? null : coll.iterator().next();\n    }\n\n    /**\n     * Get all elements associated with the given key.\n     *\n     * @param key  key to look up\n     * @return a collection of elements found, or null if {@code contains(key) == false}\n     */\n    @SuppressWarnings(\"unchecked\") // index is a MultiMap which returns a Collection\n    public Collection<C> values(final K key) {\n        return (Collection<C>) index.get(key);\n    }\n\n    /**\n     * Clears the index and re-indexes the entire decorated {@link Collection}.\n     */\n    public void reindex() {\n        index.clear();\n        for (final C c : decorated()) {\n            addToIndex(c);\n        }\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public boolean remove(final Object object) {\n        final boolean removed = super.remove(object);\n        if (removed) {\n            removeFromIndex((C) object);\n        }\n        return removed;\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean changed = false;\n        for (final Object o : coll) {\n            changed |= remove(o);\n        }\n        return changed;\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        final boolean changed = super.retainAll(coll);\n        if (changed) {\n            reindex();\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Provides checking for adding the index.\n     *\n     * @param object the object to index\n     * @throws IllegalArgumentException if the object maps to an existing key and the index\n     *   enforces a uniqueness constraint\n     */\n    private void addToIndex(final C object) {\n        final K key = keyTransformer.transform(object);\n        if (uniqueIndex && index.containsKey(key)) {\n            throw new IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n        }\n        index.put(key, object);\n    }\n\n    /**\n     * Removes an object from the index.\n     *\n     * @param object the object to remove\n     */\n    private void removeFromIndex(final C object) {\n        index.remove(keyTransformer.transform(object));\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "coll", "java.util.Collection", "Collection<C>" ], [ "keyTransformer", "org.apache.commons.collections4.Transformer", "Transformer<C, K>" ], [ "map", "org.apache.commons.collections4.MultiMap", "MultiMap<K, C>" ], [ "uniqueIndex", "", "boolean" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "removeAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean removeAll(final Collection<?> coll)" ], [ "addAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean addAll(final Collection<? extends C> coll)" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "values", "org.apache.commons.collections4.collection", "IndexedCollection", "public Collection<C> values(final K key)" ], [ "containsAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean containsAll(final Collection<?> coll)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "remove", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean remove(final Object object)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "add", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean add(final C object)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "retainAll", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean retainAll(final Collection<?> coll)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "get", "org.apache.commons.collections4.collection", "IndexedCollection", "public C get(final K key)" ], [ "contains", "org.apache.commons.collections4.collection", "IndexedCollection", "public boolean contains(final Object object)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "transform", "org.apache.commons.collections4", "Transformer", "public abstract O transform(I arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "remove", "org.apache.commons.collections4", "MultiMap", "public abstract Object remove(Object arg0)" ], [ "removeMapping", "org.apache.commons.collections4", "MultiMap", "public abstract boolean removeMapping(K arg0, V arg1)" ], [ "size", "org.apache.commons.collections4", "MultiMap", "public abstract int size()" ], [ "values", "org.apache.commons.collections4", "MultiMap", "public abstract Collection<Object> values()" ], [ "get", "org.apache.commons.collections4", "MultiMap", "public abstract Object get(Object arg0)" ], [ "containsValue", "org.apache.commons.collections4", "MultiMap", "public abstract boolean containsValue(Object arg0)" ], [ "put", "org.apache.commons.collections4", "MultiMap", "public abstract Object put(K arg0, Object arg1)" ], [ "size", "java.util", "Map", "public abstract int size()" ], [ "getOrDefault", "java.util", "Map", "public default V getOrDefault(Object arg0, V arg1)" ], [ "get", "java.util", "Map", "public abstract V get(Object arg0)" ], [ "computeIfPresent", "java.util", "Map", "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "replace", "java.util", "Map", "public default V replace(K arg0, V arg1)" ], [ "replace", "java.util", "Map", "public default boolean replace(K arg0, V arg1, V arg2)" ], [ "remove", "java.util", "Map", "public default boolean remove(Object arg0, Object arg1)" ], [ "put", "java.util", "Map", "public abstract V put(K arg0, V arg1)" ], [ "containsKey", "java.util", "Map", "public abstract boolean containsKey(Object arg0)" ], [ "hashCode", "java.util", "Map", "public abstract int hashCode()" ], [ "putIfAbsent", "java.util", "Map", "public default V putIfAbsent(K arg0, V arg1)" ], [ "values", "java.util", "Map", "public abstract Collection<V> values()" ], [ "remove", "java.util", "Map", "public abstract V remove(Object arg0)" ], [ "merge", "java.util", "Map", "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)" ], [ "computeIfAbsent", "java.util", "Map", "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)" ], [ "containsValue", "java.util", "Map", "public abstract boolean containsValue(Object arg0)" ], [ "isEmpty", "java.util", "Map", "public abstract boolean isEmpty()" ], [ "entrySet", "java.util", "Map", "public abstract Set<Map.Entry<K, V>> entrySet()" ], [ "keySet", "java.util", "Map", "public abstract Set<K> keySet()" ], [ "equals", "java.util", "Map", "public abstract boolean equals(Object arg0)" ], [ "compute", "java.util", "Map", "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "put", "org.apache.commons.collections4", "Put", "public abstract Object put(K arg0, V arg1)" ], [ "mapIterator", "org.apache.commons.collections4", "IterableGet", "public abstract MapIterator<K, V> mapIterator()" ], [ "get", "org.apache.commons.collections4", "Get", "public abstract V get(Object arg0)" ], [ "entrySet", "org.apache.commons.collections4", "Get", "public abstract Set<Map.Entry<K, V>> entrySet()" ], [ "size", "org.apache.commons.collections4", "Get", "public abstract int size()" ], [ "containsKey", "org.apache.commons.collections4", "Get", "public abstract boolean containsKey(Object arg0)" ], [ "keySet", "org.apache.commons.collections4", "Get", "public abstract Set<K> keySet()" ], [ "isEmpty", "org.apache.commons.collections4", "Get", "public abstract boolean isEmpty()" ], [ "remove", "org.apache.commons.collections4", "Get", "public abstract V remove(Object arg0)" ], [ "containsValue", "org.apache.commons.collections4", "Get", "public abstract boolean containsValue(Object arg0)" ], [ "values", "org.apache.commons.collections4", "Get", "public abstract Collection<V> values()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 6369,
  "oracle" : "coll == null;",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.collection",
  "className" : "UnmodifiableCollection",
  "javadocTag" : "@throws NullPointerException if collection is null",
  "methodJavadoc" : "    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param coll  the collection to decorate, must not be null\n     * @throws NullPointerException if collection is null\n     */",
  "methodSourceCode" : "private UnmodifiableCollection(final Collection<? extends E> coll){\n    super((Collection<E>) coll);\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Collection} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @param <E> the type of the elements in the collection\n * @since 3.0\n * @version $Id: UnmodifiableCollection.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.collection;\n\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.apache.commons.collections4.iterators.UnmodifiableIterator;\n\n/**\n * Decorates another {@link Collection} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @param <E> the type of the elements in the collection\n * @since 3.0\n * @version $Id: UnmodifiableCollection.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class UnmodifiableCollection<E>\n        extends AbstractCollectionDecorator<E>\n        implements Unmodifiable {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -239892006883819945L;\n\n    /**\n     * Factory method to create an unmodifiable collection.\n     * <p>\n     * If the collection passed in is already unmodifiable, it is returned.\n     *\n     * @param <T> the type of the elements in the collection\n     * @param coll  the collection to decorate, must not be null\n     * @return an unmodifiable collection\n     * @throws NullPointerException if collection is null\n     * @since 4.0\n     */\n    public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll) {\n        if (coll instanceof Unmodifiable) {\n            @SuppressWarnings(\"unchecked\") // safe to upcast\n            final Collection<T> tmpColl = (Collection<T>) coll;\n            return tmpColl;\n        }\n        return new UnmodifiableCollection<T>(coll);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param coll  the collection to decorate, must not be null\n     * @throws NullPointerException if collection is null\n     */\n    @SuppressWarnings(\"unchecked\") // safe to upcast\n    private UnmodifiableCollection(final Collection<? extends E> coll) {\n        super((Collection<E>) coll);\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public Iterator<E> iterator() {\n        return UnmodifiableIterator.unmodifiableIterator(decorated().iterator());\n    }\n\n    @Override\n    public boolean add(final E object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void clear() {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "coll", "java.util.Collection", "Collection<? extends E>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "iterator", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public Iterator<E> iterator()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "removeAll", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public boolean removeAll(final Collection<?> coll)" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "remove", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public boolean remove(final Object object)" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "retainAll", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public boolean retainAll(final Collection<?> coll)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "addAll", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public boolean addAll(final Collection<? extends E> coll)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "add", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public boolean add(final E object)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 6392,
  "oracle" : "(paramTypes == null && args != null) || (paramTypes != null && args == null) || (paramTypes != null && args != null && paramTypes.length != args.length);",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4",
  "className" : "FactoryUtils",
  "javadocTag" : "@throws IllegalArgumentException if the paramTypes and args don't match",
  "methodJavadoc" : "    /**\n     * Creates a Factory that can create objects of a specific type using\n     * the arguments specified to this method.\n     *\n     * @see org.apache.commons.collections4.functors.InstantiateFactory\n     *\n     * @param <T> the type that the factory creates\n     * @param classToInstantiate  the Class to instantiate each time in the factory\n     * @param paramTypes  parameter types for the constructor, can be null\n     * @param args  the arguments to pass to the constructor, can be null\n     * @return the <code>reflection</code> factory\n     * @throws NullPointerException if the classToInstantiate is null\n     * @throws IllegalArgumentException if the paramTypes and args don't match\n     * @throws IllegalArgumentException if the constructor doesn't exist\n     */",
  "methodSourceCode" : "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args){\n    return InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n}",
  "classJavadoc" : "/**\n * <code>FactoryUtils</code> provides reference implementations and utilities\n * for the Factory functor interface. The supplied factories are:\n * <ul>\n * <li>Prototype - clones a specified object\n * <li>Instantiate - creates objects using reflection\n * <li>Constant - always returns the same object\n * <li>Null - always returns null\n * <li>Exception - always throws an exception\n * </ul>\n * <p>\n * Since v4.1 only factories which are considered to be unsafe are\n * Serializable. Factories considered to be unsafe for serialization are:\n * <ul>\n * <li>Prototype\n * <li>Instantiate\n * </ul>\n *\n * @since 3.0\n * @version $Id: FactoryUtils.java 1714362 2015-11-14 20:38:02Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport org.apache.commons.collections4.functors.ConstantFactory;\nimport org.apache.commons.collections4.functors.ExceptionFactory;\nimport org.apache.commons.collections4.functors.InstantiateFactory;\nimport org.apache.commons.collections4.functors.PrototypeFactory;\n\n/**\n * <code>FactoryUtils</code> provides reference implementations and utilities\n * for the Factory functor interface. The supplied factories are:\n * <ul>\n * <li>Prototype - clones a specified object\n * <li>Instantiate - creates objects using reflection\n * <li>Constant - always returns the same object\n * <li>Null - always returns null\n * <li>Exception - always throws an exception\n * </ul>\n * <p>\n * Since v4.1 only factories which are considered to be unsafe are\n * Serializable. Factories considered to be unsafe for serialization are:\n * <ul>\n * <li>Prototype\n * <li>Instantiate\n * </ul>\n *\n * @since 3.0\n * @version $Id: FactoryUtils.java 1714362 2015-11-14 20:38:02Z tn $\n */\npublic class FactoryUtils {\n\n    /**\n     * This class is not normally instantiated.\n     */\n    private FactoryUtils() {}\n\n    /**\n     * Gets a Factory that always throws an exception.\n     * This could be useful during testing as a placeholder.\n     *\n     * @see org.apache.commons.collections4.functors.ExceptionFactory\n     *\n     * @param <T> the type that the factory creates\n     * @return the factory\n     */\n    public static <T> Factory<T> exceptionFactory() {\n        return ExceptionFactory.<T>exceptionFactory();\n    }\n\n    /**\n     * Gets a Factory that will return null each time the factory is used.\n     * This could be useful during testing as a placeholder.\n     *\n     * @see org.apache.commons.collections4.functors.ConstantFactory\n     * @param <T> the \"type\" of null object the factory should return.\n     * @return the factory\n     */\n    public static <T> Factory<T> nullFactory() {\n        return ConstantFactory.<T>constantFactory(null);\n    }\n\n    /**\n     * Creates a Factory that will return the same object each time the factory\n     * is used. No check is made that the object is immutable. In general, only\n     * immutable objects should use the constant factory. Mutable objects should\n     * use the prototype factory.\n     *\n     * @see org.apache.commons.collections4.functors.ConstantFactory\n     *\n     * @param <T> the type that the factory creates\n     * @param constantToReturn  the constant object to return each time in the factory\n     * @return the <code>constant</code> factory.\n     */\n    public static <T> Factory<T> constantFactory(final T constantToReturn) {\n        return ConstantFactory.constantFactory(constantToReturn);\n    }\n\n    /**\n     * Creates a Factory that will return a clone of the same prototype object\n     * each time the factory is used. The prototype will be cloned using one of these\n     * techniques (in order):\n     * <ul>\n     * <li>public clone method\n     * <li>public copy constructor\n     * <li>serialization clone\n     * <ul>\n     *\n     * @see org.apache.commons.collections4.functors.PrototypeFactory\n     *\n     * @param <T> the type that the factory creates\n     * @param prototype  the object to clone each time in the factory\n     * @return the <code>prototype</code> factory, or a {@link ConstantFactory#NULL_INSTANCE} if\n     * the {@code prototype} is {@code null}\n     * @throws IllegalArgumentException if the prototype cannot be cloned\n     */\n    public static <T> Factory<T> prototypeFactory(final T prototype) {\n        return PrototypeFactory.<T>prototypeFactory(prototype);\n    }\n\n    /**\n     * Creates a Factory that can create objects of a specific type using\n     * a no-args constructor.\n     *\n     * @see org.apache.commons.collections4.functors.InstantiateFactory\n     *\n     * @param <T> the type that the factory creates\n     * @param classToInstantiate  the Class to instantiate each time in the factory\n     * @return the <code>reflection</code> factory\n     * @throws NullPointerException if the classToInstantiate is null\n     */\n    public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate) {\n        return InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n    }\n\n    /**\n     * Creates a Factory that can create objects of a specific type using\n     * the arguments specified to this method.\n     *\n     * @see org.apache.commons.collections4.functors.InstantiateFactory\n     *\n     * @param <T> the type that the factory creates\n     * @param classToInstantiate  the Class to instantiate each time in the factory\n     * @param paramTypes  parameter types for the constructor, can be null\n     * @param args  the arguments to pass to the constructor, can be null\n     * @return the <code>reflection</code> factory\n     * @throws NullPointerException if the classToInstantiate is null\n     * @throws IllegalArgumentException if the paramTypes and args don't match\n     * @throws IllegalArgumentException if the constructor doesn't exist\n     */\n    public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes,\n                                                    final Object[] args) {\n        return InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ [ "4", "int" ] ],
  "tokensMethodArguments" : [ [ "classToInstantiate", "java.lang.Class", "Class<T>" ], [ "paramTypes", "", "Class<?>[]" ], [ "args", "", "Object[]" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "getClassLoader", "java.lang", "Class", "public ClassLoader getClassLoader()" ], [ "getConstructor", "java.lang", "Class", "public Constructor<T> getConstructor(Class<? extends Object>[] arg0) throws NoSuchMethodException, SecurityException" ], [ "getMethod", "java.lang", "Class", "public Method getMethod(String arg0, Class<? extends Object>[] arg1) throws NoSuchMethodException, SecurityException" ], [ "toGenericString", "java.lang", "Class", "public String toGenericString()" ], [ "isRecord", "java.lang", "Class", "public boolean isRecord()" ], [ "getModule", "java.lang", "Class", "public Module getModule()" ], [ "getInterfaces", "java.lang", "Class", "public Class<? extends Object>[] getInterfaces()" ], [ "getDeclaredMethod", "java.lang", "Class", "public Method getDeclaredMethod(String arg0, Class<? extends Object>[] arg1) throws NoSuchMethodException, SecurityException" ], [ "getModifiers", "java.lang", "Class", "public native int getModifiers()" ], [ "getAnnotationsByType", "java.lang", "Class", "public <A> A[] getAnnotationsByType(Class<A> arg0)" ], [ "isInterface", "java.lang", "Class", "public native boolean isInterface()" ], [ "getEnumConstantsShared", "java.lang", "Class", "T[] getEnumConstantsShared()" ], [ "getClasses", "java.lang", "Class", "public Class<? extends Object>[] getClasses()" ], [ "getEnumConstants", "java.lang", "Class", "public T[] getEnumConstants()" ], [ "getSimpleName", "java.lang", "Class", "public String getSimpleName()" ], [ "getSigners", "java.lang", "Class", "public native Object[] getSigners()" ], [ "isInstance", "java.lang", "Class", "public native boolean isInstance(Object arg0)" ], [ "getDeclaredClasses", "java.lang", "Class", "public Class<? extends Object>[] getDeclaredClasses() throws SecurityException" ], [ "getClassLoader0", "java.lang", "Class", "ClassLoader getClassLoader0()" ], [ "getDeclaredAnnotations", "java.lang", "Class", "public Annotation[] getDeclaredAnnotations()" ], [ "getGenericSuperclass", "java.lang", "Class", "public Type getGenericSuperclass()" ], [ "getEnclosingConstructor", "java.lang", "Class", "public Constructor<? extends Object> getEnclosingConstructor() throws SecurityException" ], [ "getRecordComponents", "java.lang", "Class", "public RecordComponent[] getRecordComponents()" ], [ "isAnnotation", "java.lang", "Class", "public boolean isAnnotation()" ], [ "isMemberClass", "java.lang", "Class", "public boolean isMemberClass()" ], [ "getSuperclass", "java.lang", "Class", "public native Class<? super T> getSuperclass()" ], [ "protectionDomain", "java.lang", "Class", "ProtectionDomain protectionDomain()" ], [ "toString", "java.lang", "Class", "public String toString()" ], [ "enumConstantDirectory", "java.lang", "Class", "Map<String, T> enumConstantDirectory()" ], [ "getRawAnnotations", "java.lang", "Class", "native byte[] getRawAnnotations()" ], [ "getResourceAsStream", "java.lang", "Class", "public InputStream getResourceAsStream(String arg0)" ], [ "isPrimitive", "java.lang", "Class", "public native boolean isPrimitive()" ], [ "getAnnotatedSuperclass", "java.lang", "Class", "public AnnotatedType getAnnotatedSuperclass()" ], [ "getPackageName", "java.lang", "Class", "public String getPackageName()" ], [ "isSealed", "java.lang", "Class", "public boolean isSealed()" ], [ "getClassData", "java.lang", "Class", "Object getClassData()" ], [ "getNestMembers", "java.lang", "Class", "public Class<? extends Object>[] getNestMembers()" ], [ "isArray", "java.lang", "Class", "public native boolean isArray()" ], [ "isHidden", "java.lang", "Class", "public native boolean isHidden()" ], [ "isAnonymousClass", "java.lang", "Class", "public boolean isAnonymousClass()" ], [ "getProtectionDomain", "java.lang", "Class", "public ProtectionDomain getProtectionDomain()" ], [ "getMethods", "java.lang", "Class", "public Method[] getMethods() throws SecurityException" ], [ "getAnnotation", "java.lang", "Class", "public <A> A getAnnotation(Class<A> arg0)" ], [ "getTypeParameters", "java.lang", "Class", "public TypeVariable<Class<T>>[] getTypeParameters()" ], [ "getComponentType", "java.lang", "Class", "public Class<? extends Object> getComponentType()" ], [ "getDeclaredField", "java.lang", "Class", "public Field getDeclaredField(String arg0) throws NoSuchFieldException, SecurityException" ], [ "getPermittedSubclasses", "java.lang", "Class", "public Class<? extends Object>[] getPermittedSubclasses()" ], [ "getName", "java.lang", "Class", "public String getName()" ], [ "getEnclosingClass", "java.lang", "Class", "public Class<? extends Object> getEnclosingClass() throws SecurityException" ], [ "arrayType", "java.lang", "Class", "public Class<? extends Object> arrayType()" ], [ "getEnclosingMethod", "java.lang", "Class", "public Method getEnclosingMethod() throws SecurityException" ], [ "getDeclaredPublicMethods", "java.lang", "Class", "List<Method> getDeclaredPublicMethods(String arg0, Class<? extends Object>[] arg1)" ], [ "asSubclass", "java.lang", "Class", "public <U> Class<? extends U> asSubclass(Class<U> arg0)" ], [ "isAssignableFrom", "java.lang", "Class", "public native boolean isAssignableFrom(Class<? extends Object> arg0)" ], [ "isSynthetic", "java.lang", "Class", "public boolean isSynthetic()" ], [ "getConstantPool", "java.lang", "Class", "native ConstantPool getConstantPool()" ], [ "describeConstable", "java.lang", "Class", "public Optional<ClassDesc> describeConstable()" ], [ "getFields", "java.lang", "Class", "public Field[] getFields() throws SecurityException" ], [ "isAnnotationPresent", "java.lang", "Class", "public boolean isAnnotationPresent(Class<? extends Annotation> arg0)" ], [ "isEnum", "java.lang", "Class", "public boolean isEnum()" ], [ "isLocalClass", "java.lang", "Class", "public boolean isLocalClass()" ], [ "getDeclaredFields", "java.lang", "Class", "public Field[] getDeclaredFields() throws SecurityException" ], [ "getDeclaredAnnotation", "java.lang", "Class", "public <A> A getDeclaredAnnotation(Class<A> arg0)" ], [ "componentType", "java.lang", "Class", "public Class<? extends Object> componentType()" ], [ "getAnnotatedInterfaces", "java.lang", "Class", "public AnnotatedType[] getAnnotatedInterfaces()" ], [ "getCanonicalName", "java.lang", "Class", "public String getCanonicalName()" ], [ "getDeclaringClass", "java.lang", "Class", "public Class<? extends Object> getDeclaringClass() throws SecurityException" ], [ "getDeclaredAnnotationsByType", "java.lang", "Class", "public <A> A[] getDeclaredAnnotationsByType(Class<A> arg0)" ], [ "getDeclaredMethods", "java.lang", "Class", "public Method[] getDeclaredMethods() throws SecurityException" ], [ "casAnnotationType", "java.lang", "Class", "boolean casAnnotationType(AnnotationType arg0, AnnotationType arg1)" ], [ "getRawTypeAnnotations", "java.lang", "Class", "native byte[] getRawTypeAnnotations()" ], [ "getNestHost", "java.lang", "Class", "public Class<? extends Object> getNestHost()" ], [ "getAnnotations", "java.lang", "Class", "public Annotation[] getAnnotations()" ], [ "getResource", "java.lang", "Class", "public URL getResource(String arg0)" ], [ "desiredAssertionStatus", "java.lang", "Class", "public boolean desiredAssertionStatus()" ], [ "getDeclaredConstructor", "java.lang", "Class", "public Constructor<T> getDeclaredConstructor(Class<? extends Object>[] arg0) throws NoSuchMethodException, SecurityException" ], [ "getTypeName", "java.lang", "Class", "public String getTypeName()" ], [ "getConstructors", "java.lang", "Class", "public Constructor<? extends Object>[] getConstructors() throws SecurityException" ], [ "getField", "java.lang", "Class", "public Field getField(String arg0) throws NoSuchFieldException, SecurityException" ], [ "newInstance", "java.lang", "Class", "public T newInstance() throws InstantiationException, IllegalAccessException" ], [ "getDeclaredAnnotationMap", "java.lang", "Class", "Map<Class<? extends Annotation>, Annotation> getDeclaredAnnotationMap()" ], [ "cast", "java.lang", "Class", "public T cast(Object arg0)" ], [ "getPackage", "java.lang", "Class", "public Package getPackage()" ], [ "getGenericInterfaces", "java.lang", "Class", "public Type[] getGenericInterfaces()" ], [ "getDeclaredConstructors", "java.lang", "Class", "public Constructor<? extends Object>[] getDeclaredConstructors() throws SecurityException" ], [ "descriptorString", "java.lang", "Class", "public String descriptorString()" ], [ "isNestmateOf", "java.lang", "Class", "public boolean isNestmateOf(Class<? extends Object> arg0)" ], [ "getAnnotationType", "java.lang", "Class", "AnnotationType getAnnotationType()" ], [ "getTypeParameters", "java.lang.reflect", "GenericDeclaration", "public abstract TypeVariable<? extends Object>[] getTypeParameters()" ], [ "getDeclaredAnnotation", "java.lang.reflect", "AnnotatedElement", "public default <T> T getDeclaredAnnotation(Class<T> arg0)" ], [ "getDeclaredAnnotations", "java.lang.reflect", "AnnotatedElement", "public abstract Annotation[] getDeclaredAnnotations()" ], [ "isAnnotationPresent", "java.lang.reflect", "AnnotatedElement", "public default boolean isAnnotationPresent(Class<? extends Annotation> arg0)" ], [ "getAnnotation", "java.lang.reflect", "AnnotatedElement", "public abstract <T> T getAnnotation(Class<T> arg0)" ], [ "getAnnotations", "java.lang.reflect", "AnnotatedElement", "public abstract Annotation[] getAnnotations()" ], [ "getAnnotationsByType", "java.lang.reflect", "AnnotatedElement", "public default <T> T[] getAnnotationsByType(Class<T> arg0)" ], [ "getDeclaredAnnotationsByType", "java.lang.reflect", "AnnotatedElement", "public default <T> T[] getDeclaredAnnotationsByType(Class<T> arg0)" ], [ "getTypeName", "java.lang.reflect", "Type", "public default String getTypeName()" ], [ "isPrimitive", "java.lang.invoke", "TypeDescriptor.OfField", "public abstract boolean isPrimitive()" ], [ "isArray", "java.lang.invoke", "TypeDescriptor.OfField", "public abstract boolean isArray()" ], [ "componentType", "java.lang.invoke", "TypeDescriptor.OfField", "public abstract F componentType()" ], [ "arrayType", "java.lang.invoke", "TypeDescriptor.OfField", "public abstract F arrayType()" ], [ "descriptorString", "java.lang.invoke", "TypeDescriptor", "public abstract String descriptorString()" ], [ "describeConstable", "java.lang.constant", "Constable", "public abstract Optional<? extends ConstantDesc> describeConstable()" ], [ "equals", "", "java.lang.Class<?>[]", "public boolean equals(Object);" ], [ "toString", "", "java.lang.Class<?>[]", "public String toString()" ], [ "hashCode", "", "java.lang.Class<?>[]", "public native int hashCode()" ], [ "getClass", "", "java.lang.Class<?>[]", "public final native Class getClass();" ], [ "clone", "", "java.lang.Class<?>[]", "public T[] clone();" ], [ "equals", "", "java.lang.Object[]", "public boolean equals(Object);" ], [ "toString", "", "java.lang.Object[]", "public String toString()" ], [ "hashCode", "", "java.lang.Object[]", "public native int hashCode()" ], [ "getClass", "", "java.lang.Object[]", "public final native Class getClass();" ], [ "clone", "", "java.lang.Object[]", "public T[] clone();" ], [ "create", "org.apache.commons.collections4", "Factory", "public abstract T create()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "classValueMap", "java.lang", "Class", "transient ClassValue.ClassValueMap classValueMap;" ], [ "length", "java.lang", "Class[]", "public final int length;" ], [ "length", "java.lang", "Object[]", "public final int length;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 6398,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4",
  "className" : "ListUtils",
  "javadocTag" : "@param <T> the element type",
  "methodJavadoc" : "    /**\n     * Returns either the passed in list, or if the list is {@code null},\n     * the value of {@code defaultList}.\n     *\n     * @param <T> the element type\n     * @param list  the list, possibly {@code null}\n     * @param defaultList  the returned values if list is {@code null}\n     * @return an empty list if the argument is <code>null</code>\n     * @since 4.0\n     */",
  "methodSourceCode" : "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList){\n    return list == null ? defaultList : list;\n}",
  "classJavadoc" : "/**\n * Provides utility methods and decorators for {@link List} instances.\n *\n * @since 1.0\n * @version $Id: ListUtils.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport java.util.AbstractList;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.apache.commons.collections4.functors.DefaultEquator;\nimport org.apache.commons.collections4.list.FixedSizeList;\nimport org.apache.commons.collections4.list.LazyList;\nimport org.apache.commons.collections4.list.PredicatedList;\nimport org.apache.commons.collections4.list.TransformedList;\nimport org.apache.commons.collections4.list.UnmodifiableList;\nimport org.apache.commons.collections4.sequence.CommandVisitor;\nimport org.apache.commons.collections4.sequence.EditScript;\nimport org.apache.commons.collections4.sequence.SequencesComparator;\n\n/**\n * Provides utility methods and decorators for {@link List} instances.\n *\n * @since 1.0\n * @version $Id: ListUtils.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic class ListUtils {\n\n    /**\n     * <code>ListUtils</code> should not normally be instantiated.\n     */\n    private ListUtils() {}\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns an immutable empty list if the argument is <code>null</code>,\n     * or the argument itself otherwise.\n     *\n     * @param <T> the element type\n     * @param list the list, possibly <code>null</code>\n     * @return an empty list if the argument is <code>null</code>\n     */\n    public static <T> List<T> emptyIfNull(final List<T> list) {\n        return list == null ? Collections.<T>emptyList() : list;\n    }\n\n    /**\n     * Returns either the passed in list, or if the list is {@code null},\n     * the value of {@code defaultList}.\n     *\n     * @param <T> the element type\n     * @param list  the list, possibly {@code null}\n     * @param defaultList  the returned values if list is {@code null}\n     * @return an empty list if the argument is <code>null</code>\n     * @since 4.0\n     */\n    public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList) {\n        return list == null ? defaultList : list;\n    }\n\n    /**\n     * Returns a new list containing all elements that are contained in\n     * both given lists.\n     *\n     * @param <E> the element type\n     * @param list1  the first list\n     * @param list2  the second list\n     * @return  the intersection of those two lists\n     * @throws NullPointerException if either list is null\n     */\n    public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2) {\n        final List<E> result = new ArrayList<E>();\n\n        List<? extends E> smaller = list1;\n        List<? extends E> larger = list2;\n        if (list1.size() > list2.size()) {\n            smaller = list2;\n            larger = list1;\n        }\n\n        final HashSet<E> hashSet = new HashSet<E>(smaller);\n\n        for (final E e : larger) {\n            if (hashSet.contains(e)) {\n                result.add(e);\n                hashSet.remove(e);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Subtracts all elements in the second list from the first list,\n     * placing the results in a new list.\n     * <p>\n     * This differs from {@link List#removeAll(Collection)} in that\n     * cardinality is respected; if <Code>list1</Code> contains two\n     * occurrences of <Code>null</Code> and <Code>list2</Code> only\n     * contains one occurrence, then the returned list will still contain\n     * one occurrence.\n     *\n     * @param <E> the element type\n     * @param list1  the list to subtract from\n     * @param list2  the list to subtract\n     * @return a new list containing the results\n     * @throws NullPointerException if either list is null\n     */\n    public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2) {\n        final ArrayList<E> result = new ArrayList<E>();\n        final HashBag<E> bag = new HashBag<E>(list2);\n        for (final E e : list1) {\n            if (!bag.remove(e, 1)) {\n                result.add(e);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns the sum of the given lists.  This is their intersection\n     * subtracted from their union.\n     *\n     * @param <E> the element type\n     * @param list1  the first list\n     * @param list2  the second list\n     * @return  a new list containing the sum of those lists\n     * @throws NullPointerException if either list is null\n     */\n    public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2) {\n        return subtract(union(list1, list2), intersection(list1, list2));\n    }\n\n    /**\n     * Returns a new list containing the second list appended to the\n     * first list.  The {@link List#addAll(Collection)} operation is\n     * used to append the two given lists into a new list.\n     *\n     * @param <E> the element type\n     * @param list1  the first list\n     * @param list2  the second list\n     * @return a new list containing the union of those lists\n     * @throws NullPointerException if either list is null\n     */\n    public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2) {\n        final ArrayList<E> result = new ArrayList<E>(list1);\n        result.addAll(list2);\n        return result;\n    }\n\n    /**\n     * Selects all elements from input collection which match the given\n     * predicate into an output list.\n     * <p>\n     * A <code>null</code> predicate matches no elements.\n     *\n     * @param <E> the element type\n     * @param inputCollection  the collection to get the input from, may not be null\n     * @param predicate  the predicate to use, may be null\n     * @return the elements matching the predicate (new list)\n     * @throws NullPointerException if the input list is null\n     *\n     * @since 4.0\n     * @see CollectionUtils#select(Iterable, Predicate)\n     */\n    public static <E> List<E> select(final Collection<? extends E> inputCollection,\n            final Predicate<? super E> predicate) {\n        return CollectionUtils.select(inputCollection, predicate, new ArrayList<E>(inputCollection.size()));\n    }\n\n    /**\n     * Selects all elements from inputCollection which don't match the given\n     * predicate into an output collection.\n     * <p>\n     * If the input predicate is <code>null</code>, the result is an empty list.\n     *\n     * @param <E> the element type\n     * @param inputCollection the collection to get the input from, may not be null\n     * @param predicate the predicate to use, may be null\n     * @return the elements <b>not</b> matching the predicate (new list)\n     * @throws NullPointerException if the input collection is null\n     *\n     * @since 4.0\n     * @see CollectionUtils#selectRejected(Iterable, Predicate)\n     */\n    public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection,\n            final Predicate<? super E> predicate) {\n        return CollectionUtils.selectRejected(inputCollection, predicate, new ArrayList<E>(inputCollection.size()));\n    }\n\n    /**\n     * Tests two lists for value-equality as per the equality contract in\n     * {@link java.util.List#equals(java.lang.Object)}.\n     * <p>\n     * This method is useful for implementing <code>List</code> when you cannot\n     * extend AbstractList. The method takes Collection instances to enable other\n     * collection types to use the List implementation algorithm.\n     * <p>\n     * The relevant text (slightly paraphrased as this is a static method) is:\n     * <blockquote>\n     * Compares the two list objects for equality.  Returns\n     * {@code true} if and only if both\n     * lists have the same size, and all corresponding pairs of elements in\n     * the two lists are <i>equal</i>.  (Two elements {@code e1} and\n     * {@code e2} are <i>equal</i> if <tt>(e1==null ? e2==null :\n     * e1.equals(e2))</tt>.)  In other words, two lists are defined to be\n     * equal if they contain the same elements in the same order.  This\n     * definition ensures that the equals method works properly across\n     * different implementations of the {@code List} interface.\n     * </blockquote>\n     *\n     * <b>Note:</b> The behaviour of this method is undefined if the lists are\n     * modified during the equals comparison.\n     *\n     * @see java.util.List\n     * @param list1  the first list, may be null\n     * @param list2  the second list, may be null\n     * @return whether the lists are equal by value comparison\n     */\n    public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2) {\n        if (list1 == list2) {\n            return true;\n        }\n        if (list1 == null || list2 == null || list1.size() != list2.size()) {\n            return false;\n        }\n\n        final Iterator<?> it1 = list1.iterator();\n        final Iterator<?> it2 = list2.iterator();\n        Object obj1 = null;\n        Object obj2 = null;\n\n        while (it1.hasNext() && it2.hasNext()) {\n            obj1 = it1.next();\n            obj2 = it2.next();\n\n            if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                return false;\n            }\n        }\n\n        return !(it1.hasNext() || it2.hasNext());\n    }\n\n    /**\n     * Generates a hash code using the algorithm specified in\n     * {@link java.util.List#hashCode()}.\n     * <p>\n     * This method is useful for implementing <code>List</code> when you cannot\n     * extend AbstractList. The method takes Collection instances to enable other\n     * collection types to use the List implementation algorithm.\n     *\n     * @see java.util.List#hashCode()\n     * @param list  the list to generate the hashCode for, may be null\n     * @return the hash code\n     */\n    public static int hashCodeForList(final Collection<?> list) {\n        if (list == null) {\n            return 0;\n        }\n        int hashCode = 1;\n        final Iterator<?> it = list.iterator();\n\n        while (it.hasNext()) {\n            final Object obj = it.next();\n            hashCode = 31 * hashCode + (obj == null ? 0 : obj.hashCode());\n        }\n        return hashCode;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a List containing all the elements in <code>collection</code>\n     * that are also in <code>retain</code>. The cardinality of an element <code>e</code>\n     * in the returned list is the same as the cardinality of <code>e</code>\n     * in <code>collection</code> unless <code>retain</code> does not contain <code>e</code>, in which\n     * case the cardinality is zero. This method is useful if you do not wish to modify\n     * the collection <code>c</code> and thus cannot call <code>collection.retainAll(retain);</code>.\n     * <p>\n     * This implementation iterates over <code>collection</code>, checking each element in\n     * turn to see if it's contained in <code>retain</code>. If it's contained, it's added\n     * to the returned list. As a consequence, it is advised to use a collection type for\n     * <code>retain</code> that provides a fast (e.g. O(1)) implementation of\n     * {@link Collection#contains(Object)}.\n     *\n     * @param <E>  the element type\n     * @param collection  the collection whose contents are the target of the #retailAll operation\n     * @param retain  the collection containing the elements to be retained in the returned collection\n     * @return a <code>List</code> containing all the elements of <code>c</code>\n     * that occur at least once in <code>retain</code>.\n     * @throws NullPointerException if either parameter is null\n     * @since 3.2\n     */\n    public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain) {\n        final List<E> list = new ArrayList<E>(Math.min(collection.size(), retain.size()));\n\n        for (final E obj : collection) {\n            if (retain.contains(obj)) {\n                list.add(obj);\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Removes the elements in <code>remove</code> from <code>collection</code>. That is, this\n     * method returns a list containing all the elements in <code>collection</code>\n     * that are not in <code>remove</code>. The cardinality of an element <code>e</code>\n     * in the returned collection is the same as the cardinality of <code>e</code>\n     * in <code>collection</code> unless <code>remove</code> contains <code>e</code>, in which\n     * case the cardinality is zero. This method is useful if you do not wish to modify\n     * <code>collection</code> and thus cannot call <code>collection.removeAll(remove);</code>.\n     * <p>\n     * This implementation iterates over <code>collection</code>, checking each element in\n     * turn to see if it's contained in <code>remove</code>. If it's not contained, it's added\n     * to the returned list. As a consequence, it is advised to use a collection type for\n     * <code>remove</code> that provides a fast (e.g. O(1)) implementation of\n     * {@link Collection#contains(Object)}.\n     *\n     * @param <E>  the element type\n     * @param collection  the collection from which items are removed (in the returned collection)\n     * @param remove  the items to be removed from the returned <code>collection</code>\n     * @return a <code>List</code> containing all the elements of <code>c</code> except\n     * any elements that also occur in <code>remove</code>.\n     * @throws NullPointerException if either parameter is null\n     * @since 3.2\n     */\n    public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove) {\n        final List<E> list = new ArrayList<E>();\n        for (final E obj : collection) {\n            if (!remove.contains(obj)) {\n                list.add(obj);\n            }\n        }\n        return list;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a synchronized list backed by the given list.\n     * <p>\n     * You must manually synchronize on the returned list's iterator to\n     * avoid non-deterministic behavior:\n     *\n     * <pre>\n     * List list = ListUtils.synchronizedList(myList);\n     * synchronized (list) {\n     *     Iterator i = list.iterator();\n     *     while (i.hasNext()) {\n     *         process (i.next());\n     *     }\n     * }\n     * </pre>\n     *\n     * This method is just a wrapper for {@link Collections#synchronizedList(List)}.\n     *\n     * @param <E> the element type\n     * @param list  the list to synchronize, must not be null\n     * @return a synchronized list backed by the given list\n     * @throws NullPointerException if the list is null\n     */\n    public static <E> List<E> synchronizedList(final List<E> list) {\n        return Collections.synchronizedList(list);\n    }\n\n    /**\n     * Returns an unmodifiable list backed by the given list.\n     * <p>\n     * This method uses the implementation in the decorators subpackage.\n     *\n     * @param <E>  the element type\n     * @param list  the list to make unmodifiable, must not be null\n     * @return an unmodifiable list backed by the given list\n     * @throws NullPointerException if the list is null\n     */\n    public static <E> List<E> unmodifiableList(final List<? extends E> list) {\n        return UnmodifiableList.unmodifiableList(list);\n    }\n\n    /**\n     * Returns a predicated (validating) list backed by the given list.\n     * <p>\n     * Only objects that pass the test in the given predicate can be added to the list.\n     * Trying to add an invalid object results in an IllegalArgumentException.\n     * It is important not to use the original list after invoking this method,\n     * as it is a backdoor for adding invalid objects.\n     *\n     * @param <E> the element type\n     * @param list  the list to predicate, must not be null\n     * @param predicate  the predicate for the list, must not be null\n     * @return a predicated list backed by the given list\n     * @throws NullPointerException if the List or Predicate is null\n     */\n    public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate) {\n        return PredicatedList.predicatedList(list, predicate);\n    }\n\n    /**\n     * Returns a transformed list backed by the given list.\n     * <p>\n     * This method returns a new list (decorating the specified list) that\n     * will transform any new entries added to it.\n     * Existing entries in the specified list will not be transformed.\n     * <p>\n     * Each object is passed through the transformer as it is added to the\n     * List. It is important not to use the original list after invoking this\n     * method, as it is a backdoor for adding untransformed objects.\n     * <p>\n     * Existing entries in the specified list will not be transformed.\n     * If you want that behaviour, see {@link TransformedList#transformedList}.\n     *\n     * @param <E> the element type\n     * @param list  the list to predicate, must not be null\n     * @param transformer  the transformer for the list, must not be null\n     * @return a transformed list backed by the given list\n     * @throws NullPointerException if the List or Transformer is null\n     */\n    public static <E> List<E> transformedList(final List<E> list,\n                                              final Transformer<? super E, ? extends E> transformer) {\n        return TransformedList.transformingList(list, transformer);\n    }\n\n    /**\n     * Returns a \"lazy\" list whose elements will be created on demand.\n     * <p>\n     * When the index passed to the returned list's {@link List#get(int) get}\n     * method is greater than the list's size, then the factory will be used\n     * to create a new object and that object will be inserted at that index.\n     * <p>\n     * For instance:\n     *\n     * <pre>\n     * Factory&lt;Date&gt; factory = new Factory&lt;Date&gt;() {\n     *     public Date create() {\n     *         return new Date();\n     *     }\n     * }\n     * List&lt;Date&gt; lazy = ListUtils.lazyList(new ArrayList&lt;Date&gt;(), factory);\n     * Date date = lazy.get(3);\n     * </pre>\n     *\n     * After the above code is executed, <code>date</code> will refer to\n     * a new <code>Date</code> instance.  Furthermore, that <code>Date</code>\n     * instance is the fourth element in the list.  The first, second,\n     * and third element are all set to <code>null</code>.\n     *\n     * @param <E> the element type\n     * @param list  the list to make lazy, must not be null\n     * @param factory  the factory for creating new objects, must not be null\n     * @return a lazy list backed by the given list\n     * @throws NullPointerException if the List or Factory is null\n     */\n    public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory) {\n        return LazyList.lazyList(list, factory);\n    }\n\n    /**\n     * Returns a fixed-sized list backed by the given list.\n     * Elements may not be added or removed from the returned list, but\n     * existing elements can be changed (for instance, via the\n     * {@link List#set(int, Object)} method).\n     *\n     * @param <E>  the element type\n     * @param list  the list whose size to fix, must not be null\n     * @return a fixed-size list backed by that list\n     * @throws NullPointerException  if the List is null\n     */\n    public static <E> List<E> fixedSizeList(final List<E> list) {\n        return FixedSizeList.fixedSizeList(list);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Finds the first index in the given List which matches the given predicate.\n     * <p>\n     * If the input List or predicate is null, or no element of the List\n     * matches the predicate, -1 is returned.\n     *\n     * @param <E>  the element type\n     * @param list the List to search, may be null\n     * @param predicate  the predicate to use, may be null\n     * @return the first index of an Object in the List which matches the predicate or -1 if none could be found\n     */\n    public static <E> int indexOf(final List<E> list, final Predicate<E> predicate) {\n        if (list != null && predicate != null) {\n            for (int i = 0; i < list.size(); i++) {\n                final E item = list.get(i);\n                if (predicate.evaluate(item)) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the longest common subsequence (LCS) of two sequences (lists).\n     *\n     * @param <E>  the element type\n     * @param a  the first list\n     * @param b  the second list\n     * @return the longest common subsequence\n     * @throws NullPointerException if either list is {@code null}\n     * @since 4.0\n     */\n    public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b) {\n      return longestCommonSubsequence( a, b, DefaultEquator.defaultEquator() );\n    }\n\n    /**\n     * Returns the longest common subsequence (LCS) of two sequences (lists).\n     *\n     * @param <E>  the element type\n     * @param a  the first list\n     * @param b  the second list\n     * @param equator  the equator used to test object equality\n     * @return the longest common subsequence\n     * @throws NullPointerException if either list or the equator is {@code null}\n     * @since 4.0\n     */\n    public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b,\n                                                       final Equator<? super E> equator) {\n        if (a == null || b == null) {\n            throw new NullPointerException(\"List must not be null\");\n        }\n        if (equator == null) {\n          throw new NullPointerException(\"Equator must not be null\");\n        }\n\n        final SequencesComparator<E> comparator = new SequencesComparator<E>(a, b, equator);\n        final EditScript<E> script = comparator.getScript();\n        final LcsVisitor<E> visitor = new LcsVisitor<E>();\n        script.visit(visitor);\n        return visitor.getSubSequence();\n    }\n\n    /**\n     * Returns the longest common subsequence (LCS) of two {@link CharSequence} objects.\n     * <p>\n     * This is a convenience method for using {@link #longestCommonSubsequence(List, List)}\n     * with {@link CharSequence} instances.\n     *\n     * @param a  the first sequence\n     * @param b  the second sequence\n     * @return the longest common subsequence as {@link String}\n     * @throws NullPointerException if either sequence is {@code null}\n     * @since 4.0\n     */\n    public static String longestCommonSubsequence(final CharSequence a, final CharSequence b) {\n        if (a == null || b == null) {\n            throw new NullPointerException(\"CharSequence must not be null\");\n        }\n        final List<Character> lcs = longestCommonSubsequence(new CharSequenceAsList( a ), new CharSequenceAsList( b ));\n        final StringBuilder sb = new StringBuilder();\n        for ( Character ch : lcs ) {\n          sb.append(ch);\n        }\n        return sb.toString();\n    }\n\n    /**\n     * A helper class used to construct the longest common subsequence.\n     */\n    private static final class LcsVisitor<E> implements CommandVisitor<E> {\n        private ArrayList<E> sequence;\n\n        public LcsVisitor() {\n            sequence = new ArrayList<E>();\n        }\n\n        public void visitInsertCommand(final E object) {}\n\n        public void visitDeleteCommand(final E object) {}\n\n        public void visitKeepCommand(final E object) {\n            sequence.add(object);\n        }\n\n        public List<E> getSubSequence() {\n            return sequence;\n        }\n    }\n\n    /**\n     * A simple wrapper to use a CharSequence as List.\n     */\n    private static final class CharSequenceAsList extends AbstractList<Character> {\n\n      private final CharSequence sequence;\n\n      public CharSequenceAsList(final CharSequence sequence) {\n        this.sequence = sequence;\n      }\n\n      @Override\n      public Character get( int index ) {\n        return Character.valueOf(sequence.charAt( index ));\n      }\n\n      @Override\n      public int size() {\n        return sequence.length();\n      }\n\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns consecutive {@link List#subList(int, int) sublists} of a\n     * list, each of the same size (the final list may be smaller). For example,\n     * partitioning a list containing {@code [a, b, c, d, e]} with a partition\n     * size of 3 yields {@code [[a, b, c], [d, e]]} -- an outer list containing\n     * two inner lists of three and two elements, all in the original order.\n     * <p>\n     * The outer list is unmodifiable, but reflects the latest state of the\n     * source list. The inner lists are sublist views of the original list,\n     * produced on demand using {@link List#subList(int, int)}, and are subject\n     * to all the usual caveats about modification as explained in that API.\n     * <p>\n     * Adapted from http://code.google.com/p/guava-libraries/\n     *\n     * @param <T> the element type\n     * @param list  the list to return consecutive sublists of\n     * @param size  the desired size of each sublist (the last may be smaller)\n     * @return a list of consecutive sublists\n     * @throws NullPointerException if list is null\n     * @throws IllegalArgumentException if size is not strictly positive\n     * @since 4.0\n     */\n    public static <T> List<List<T>> partition(final List<T> list, final int size) {\n        if (list == null) {\n            throw new NullPointerException(\"List must not be null\");\n        }\n        if (size <= 0) {\n            throw new IllegalArgumentException(\"Size must be greater than 0\");\n        }\n        return new Partition<T>(list, size);\n    }\n\n    /**\n     * Provides a partition view on a {@link List}.\n     * @since 4.0\n     */\n    private static class Partition<T> extends AbstractList<List<T>> {\n        private final List<T> list;\n        private final int size;\n\n        private Partition(final List<T> list, final int size) {\n            this.list = list;\n            this.size = size;\n        }\n\n        @Override\n        public List<T> get(final int index) {\n            final int listSize = size();\n            if (listSize < 0) {\n                throw new IllegalArgumentException(\"negative size: \" + listSize);\n            }\n            if (index < 0) {\n                throw new IndexOutOfBoundsException(\"Index \" + index + \" must not be negative\");\n            }\n            if (index >= listSize) {\n                throw new IndexOutOfBoundsException(\"Index \" + index + \" must be less than size \" +\n                                                    listSize);\n            }\n            final int start = index * size;\n            final int end = Math.min(start + size, list.size());\n            return list.subList(start, end);\n        }\n\n        @Override\n        public int size() {\n            return (list.size() + size - 1) / size;\n        }\n\n        @Override\n        public boolean isEmpty() {\n            return list.isEmpty();\n        }\n    }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ [ "4.0", "double" ] ],
  "tokensMethodArguments" : [ [ "list", "java.util.List", "List<T>" ], [ "defaultList", "java.util.List", "List<T>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toArray", "java.util", "List", "public abstract Object[] toArray()" ], [ "isEmpty", "java.util", "List", "public abstract boolean isEmpty()" ], [ "iterator", "java.util", "List", "public abstract Iterator<E> iterator()" ], [ "remove", "java.util", "List", "public abstract E remove(int arg0)" ], [ "addAll", "java.util", "List", "public abstract boolean addAll(int arg0, Collection<? extends E> arg1)" ], [ "indexOf", "java.util", "List", "public abstract int indexOf(Object arg0)" ], [ "addAll", "java.util", "List", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "set", "java.util", "List", "public abstract E set(int arg0, E arg1)" ], [ "equals", "java.util", "List", "public abstract boolean equals(Object arg0)" ], [ "contains", "java.util", "List", "public abstract boolean contains(Object arg0)" ], [ "retainAll", "java.util", "List", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "get", "java.util", "List", "public abstract E get(int arg0)" ], [ "size", "java.util", "List", "public abstract int size()" ], [ "subList", "java.util", "List", "public abstract List<E> subList(int arg0, int arg1)" ], [ "removeAll", "java.util", "List", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "java.util", "List", "public abstract <T> T[] toArray(T[] arg0)" ], [ "spliterator", "java.util", "List", "public default Spliterator<E> spliterator()" ], [ "remove", "java.util", "List", "public abstract boolean remove(Object arg0)" ], [ "add", "java.util", "List", "public abstract boolean add(E arg0)" ], [ "listIterator", "java.util", "List", "public abstract ListIterator<E> listIterator(int arg0)" ], [ "lastIndexOf", "java.util", "List", "public abstract int lastIndexOf(Object arg0)" ], [ "containsAll", "java.util", "List", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "hashCode", "java.util", "List", "public abstract int hashCode()" ], [ "listIterator", "java.util", "List", "public abstract ListIterator<E> listIterator()" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
} ]