[ {
  "id" : 9346,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4",
  "className" : "QueueUtils",
  "javadocTag" : "@param <E> the type of the elements in the queue",
  "methodJavadoc" : "    /**\n     * Returns a predicated (validating) queue backed by the given queue.\n     * <p>\n     * Only objects that pass the test in the given predicate can be added to the queue.\n     * Trying to add an invalid object results in an IllegalArgumentException.\n     * It is important not to use the original queue after invoking this method,\n     * as it is a backdoor for adding invalid objects.\n     *\n     * @param <E> the type of the elements in the queue\n     * @param queue  the queue to predicate, must not be null\n     * @param predicate  the predicate used to evaluate new elements, must not be null\n     * @return a predicated queue\n     * @throws NullPointerException if the queue or predicate is null\n     */",
  "methodSourceCode" : "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate){\n    return PredicatedQueue.predicatedQueue(queue, predicate);\n}",
  "classJavadoc" : "/**\n * Provides utility methods and decorators for {@link Queue} instances.\n *\n * @since 4.0\n * @version $Id: QueueUtils.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nimport org.apache.commons.collections4.queue.PredicatedQueue;\nimport org.apache.commons.collections4.queue.TransformedQueue;\nimport org.apache.commons.collections4.queue.UnmodifiableQueue;\n\n/**\n * Provides utility methods and decorators for {@link Queue} instances.\n *\n * @since 4.0\n * @version $Id: QueueUtils.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic class QueueUtils {\n\n    /**\n     * An empty unmodifiable queue.\n     */\n    @SuppressWarnings(\"rawtypes\") // OK, empty queue is compatible with any type\n    public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());\n\n    /**\n     * <code>QueueUtils</code> should not normally be instantiated.\n     */\n    private QueueUtils() {}\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns an unmodifiable queue backed by the given queue.\n     *\n     * @param <E> the type of the elements in the queue\n     * @param queue  the queue to make unmodifiable, must not be null\n     * @return an unmodifiable queue backed by that queue\n     * @throws NullPointerException if the queue is null\n     */\n    public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue) {\n        return UnmodifiableQueue.unmodifiableQueue(queue);\n    }\n\n    /**\n     * Returns a predicated (validating) queue backed by the given queue.\n     * <p>\n     * Only objects that pass the test in the given predicate can be added to the queue.\n     * Trying to add an invalid object results in an IllegalArgumentException.\n     * It is important not to use the original queue after invoking this method,\n     * as it is a backdoor for adding invalid objects.\n     *\n     * @param <E> the type of the elements in the queue\n     * @param queue  the queue to predicate, must not be null\n     * @param predicate  the predicate used to evaluate new elements, must not be null\n     * @return a predicated queue\n     * @throws NullPointerException if the queue or predicate is null\n     */\n    public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate) {\n        return PredicatedQueue.predicatedQueue(queue, predicate);\n    }\n\n    /**\n     * Returns a transformed queue backed by the given queue.\n     * <p>\n     * Each object is passed through the transformer as it is added to the\n     * Queue. It is important not to use the original queue after invoking this\n     * method, as it is a backdoor for adding untransformed objects.\n     * <p>\n     * Existing entries in the specified queue will not be transformed.\n     * If you want that behaviour, see {@link TransformedQueue#transformedQueue}.\n     *\n     * @param <E> the type of the elements in the queue\n     * @param queue  the queue to predicate, must not be null\n     * @param transformer  the transformer for the queue, must not be null\n     * @return a transformed queue backed by the given queue\n     * @throws NullPointerException if the queue or transformer is null\n     */\n    public static <E> Queue<E> transformingQueue(final Queue<E> queue,\n                                                 final Transformer<? super E, ? extends E> transformer) {\n        return TransformedQueue.transformingQueue(queue, transformer);\n    }\n\n    /**\n     * Get an empty <code>Queue</code>.\n     *\n     * @param <E> the type of the elements in the queue\n     * @return an empty {@link Queue}\n     */\n    @SuppressWarnings(\"unchecked\") // OK, empty queue is compatible with any type\n    public static <E> Queue<E> emptyQueue() {\n        return (Queue<E>) EMPTY_QUEUE;\n    }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "queue", "java.util.Queue", "Queue<E>" ], [ "predicate", "org.apache.commons.collections4.Predicate", "Predicate<? super E>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "element", "java.util", "Queue", "public abstract E element()" ], [ "offer", "java.util", "Queue", "public abstract boolean offer(E arg0)" ], [ "add", "java.util", "Queue", "public abstract boolean add(E arg0)" ], [ "poll", "java.util", "Queue", "public abstract E poll()" ], [ "peek", "java.util", "Queue", "public abstract E peek()" ], [ "remove", "java.util", "Queue", "public abstract E remove()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "evaluate", "org.apache.commons.collections4", "Predicate", "public abstract boolean evaluate(T arg0)" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9354,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4",
  "className" : "SetValuedMap",
  "javadocTag" : "@throws UnsupportedOperationException if the map is unmodifiable",
  "methodJavadoc" : "    /**\n     * Removes all values associated with the specified key.\n     * <p>\n     * The returned set <i>may</i> be modifiable, but updates will not be\n     * propagated to this set-valued map. In case no mapping was stored for the\n     * specified key, an empty, unmodifiable set will be returned.\n     *\n     * @param key  the key to remove values from\n     * @return the {@code Set} of values removed, implementations should\n     *   return null for no mapping found, but may return an empty collection\n     * @throws UnsupportedOperationException if the map is unmodifiable\n     * @throws NullPointerException if the key is null and null keys are invalid\n     */",
  "methodSourceCode" : "Set<V> remove(Object key);",
  "classJavadoc" : "/**\n * Defines a map that holds a set of values against each key.\n * <p>\n * A {@code SetValuedMap} is a Map with slightly different semantics:\n * <ul>\n *   <li>Putting a value into the map will add the value to a {@link Set} at that key.</li>\n *   <li>Getting a value will return a {@link Set}, holding all the values put to that key.</li>\n * </ul>\n *\n * @since 4.1\n * @version $Id: SetValuedMap.java 1685299 2015-06-13 18:27:11Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4;\n\nimport java.util.Set;\n\n/**\n * Defines a map that holds a set of values against each key.\n * <p>\n * A {@code SetValuedMap} is a Map with slightly different semantics:\n * <ul>\n *   <li>Putting a value into the map will add the value to a {@link Set} at that key.</li>\n *   <li>Getting a value will return a {@link Set}, holding all the values put to that key.</li>\n * </ul>\n *\n * @since 4.1\n * @version $Id: SetValuedMap.java 1685299 2015-06-13 18:27:11Z tn $\n */\npublic interface SetValuedMap<K, V> extends MultiValuedMap<K, V> {\n\n    /**\n     * Gets the set of values associated with the specified key.\n     * <p>\n     * Implementations typically return an empty {@code Set} if no values\n     * have been mapped to the key.\n     * <p>\n     *\n     * @param key  the key to retrieve\n     * @return the {@code Set} of values, implementations should return an\n     *   empty {@code Set} for no mapping\n     * @throws NullPointerException if the key is null and null keys are invalid\n     */\n    @Override\n    Set<V> get(K key);\n\n    /**\n     * Removes all values associated with the specified key.\n     * <p>\n     * The returned set <i>may</i> be modifiable, but updates will not be\n     * propagated to this set-valued map. In case no mapping was stored for the\n     * specified key, an empty, unmodifiable set will be returned.\n     *\n     * @param key  the key to remove values from\n     * @return the {@code Set} of values removed, implementations should\n     *   return null for no mapping found, but may return an empty collection\n     * @throws UnsupportedOperationException if the map is unmodifiable\n     * @throws NullPointerException if the key is null and null keys are invalid\n     */\n    @Override\n    Set<V> remove(Object key);\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "key", "java.lang", "Object" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "get", "org.apache.commons.collections4", "SetValuedMap", "Set<V> get(K key)" ], [ "remove", "org.apache.commons.collections4", "SetValuedMap", "Set<V> remove(Object key)" ], [ "mapIterator", "org.apache.commons.collections4", "MultiValuedMap", "public abstract MapIterator<K, V> mapIterator()" ], [ "keys", "org.apache.commons.collections4", "MultiValuedMap", "public abstract MultiSet<K> keys()" ], [ "keySet", "org.apache.commons.collections4", "MultiValuedMap", "public abstract Set<K> keySet()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "putAll", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean putAll(K arg0, Iterable<? extends V> arg1)" ], [ "get", "org.apache.commons.collections4", "MultiValuedMap", "public abstract Collection<V> get(K arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "asMap", "org.apache.commons.collections4", "MultiValuedMap", "public abstract Map<K, Collection<V>> asMap()" ], [ "containsKey", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean containsKey(Object arg0)" ], [ "entries", "org.apache.commons.collections4", "MultiValuedMap", "public abstract Collection<Map.Entry<K, V>> entries()" ], [ "size", "org.apache.commons.collections4", "MultiValuedMap", "public abstract int size()" ], [ "containsValue", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean containsValue(Object arg0)" ], [ "containsMapping", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean containsMapping(Object arg0, Object arg1)" ], [ "put", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean put(K arg0, V arg1)" ], [ "putAll", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean putAll(MultiValuedMap<? extends K, ? extends V> arg0)" ], [ "values", "org.apache.commons.collections4", "MultiValuedMap", "public abstract Collection<V> values()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "remove", "org.apache.commons.collections4", "MultiValuedMap", "public abstract Collection<V> remove(Object arg0)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean isEmpty()" ], [ "putAll", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean putAll(Map<? extends K, ? extends V> arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "removeMapping", "org.apache.commons.collections4", "MultiValuedMap", "public abstract boolean removeMapping(Object arg0, Object arg1)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "add", "java.util", "Set", "public abstract boolean add(E arg0)" ], [ "spliterator", "java.util", "Set", "public default Spliterator<E> spliterator()" ], [ "isEmpty", "java.util", "Set", "public abstract boolean isEmpty()" ], [ "contains", "java.util", "Set", "public abstract boolean contains(Object arg0)" ], [ "containsAll", "java.util", "Set", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "removeAll", "java.util", "Set", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "hashCode", "java.util", "Set", "public abstract int hashCode()" ], [ "iterator", "java.util", "Set", "public abstract Iterator<E> iterator()" ], [ "equals", "java.util", "Set", "public abstract boolean equals(Object arg0)" ], [ "toArray", "java.util", "Set", "public abstract Object[] toArray()" ], [ "remove", "java.util", "Set", "public abstract boolean remove(Object arg0)" ], [ "retainAll", "java.util", "Set", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "addAll", "java.util", "Set", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "toArray", "java.util", "Set", "public abstract <T> T[] toArray(T[] arg0)" ], [ "size", "java.util", "Set", "public abstract int size()" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9360,
  "oracle" : "true ? methodResultID == this.getMap().isEmpty() : true;",
  "oracleType" : "NORMAL_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@return true if bag is empty",
  "methodJavadoc" : "    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */",
  "methodSourceCode" : "public boolean isEmpty(){\n    return map.isEmpty();\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9373,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@param nCopies the number of copies to add",
  "methodJavadoc" : "    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */",
  "methodSourceCode" : "public boolean add(final E object, final int nCopies){\n    modCount++;\n    if (nCopies > 0) {\n        final MutableInteger mut = map.get(object);\n        size += nCopies;\n        if (mut == null) {\n            map.put(object, new MutableInteger(nCopies));\n            return true;\n        }\n        mut.value += nCopies;\n        return false;\n    }\n    return false;\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "object", "", "E" ], [ "nCopies", "", "int" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9381,
  "oracle" : ";",
  "oracleType" : "NORMAL_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@return true if the bag changed",
  "methodJavadoc" : "    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */",
  "methodSourceCode" : "public boolean remove(final Object object, final int nCopies){\n    final MutableInteger mut = map.get(object);\n    if (mut == null) {\n        return false;\n    }\n    if (nCopies <= 0) {\n        return false;\n    }\n    modCount++;\n    if (nCopies < mut.value) {\n        mut.value -= nCopies;\n        size -= nCopies;\n    } else {\n        map.remove(object);\n        size -= mut.value;\n    }\n    return true;\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "object", "java.lang", "Object" ], [ "nCopies", "", "int" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9392,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@throws ArrayStoreException if the runtime type of the specified array is not\n  a supertype of the runtime type of the elements in this list",
  "methodJavadoc" : "    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */",
  "methodSourceCode" : "public <T> T[] toArray(T[] array){\n    final int size = size();\n    if (array.length < size) {\n        // safe as both are of type T\n        @SuppressWarnings(\"unchecked\")\n        final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n        array = unchecked;\n    }\n    int i = 0;\n    final Iterator<E> it = map.keySet().iterator();\n    while (it.hasNext()) {\n        final E current = it.next();\n        for (int index = getCount(current); index > 0; index--) {\n            // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n            @SuppressWarnings(\"unchecked\")\n            final T unchecked = (T) current;\n            array[i++] = unchecked;\n        }\n    }\n    while (i < array.length) {\n        array[i++] = null;\n    }\n    return array;\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "array", "", "T[]" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "equals", "", "T[]", "public boolean equals(Object);" ], [ "toString", "", "T[]", "public String toString()" ], [ "hashCode", "", "T[]", "public native int hashCode()" ], [ "getClass", "", "T[]", "public final native Class getClass();" ], [ "clone", "", "T[]", "public T[] clone();" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "length", "", "T[]", "public final int length;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9399,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@throws ClassNotFoundException if the stream contains an object which class can not be loaded",
  "methodJavadoc" : "    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */",
  "methodSourceCode" : "protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    this.map = map;\n    final int entrySize = in.readInt();\n    for (int i = 0; i < entrySize; i++) {\n        // This will fail at runtime if the stream is incorrect\n        @SuppressWarnings(\"unchecked\")\n        final E obj = (E) in.readObject();\n        final int count = in.readInt();\n        map.put(obj, new MutableInteger(count));\n        size += count;\n    }\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "map", "java.util.Map", "Map<E, AbstractMapBag.MutableInteger>" ], [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "get", "java.util", "Map", "public abstract V get(Object arg0)" ], [ "replace", "java.util", "Map", "public default V replace(K arg0, V arg1)" ], [ "entrySet", "java.util", "Map", "public abstract Set<Map.Entry<K, V>> entrySet()" ], [ "remove", "java.util", "Map", "public default boolean remove(Object arg0, Object arg1)" ], [ "merge", "java.util", "Map", "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)" ], [ "values", "java.util", "Map", "public abstract Collection<V> values()" ], [ "containsValue", "java.util", "Map", "public abstract boolean containsValue(Object arg0)" ], [ "getOrDefault", "java.util", "Map", "public default V getOrDefault(Object arg0, V arg1)" ], [ "containsKey", "java.util", "Map", "public abstract boolean containsKey(Object arg0)" ], [ "compute", "java.util", "Map", "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "equals", "java.util", "Map", "public abstract boolean equals(Object arg0)" ], [ "remove", "java.util", "Map", "public abstract V remove(Object arg0)" ], [ "replace", "java.util", "Map", "public default boolean replace(K arg0, V arg1, V arg2)" ], [ "keySet", "java.util", "Map", "public abstract Set<K> keySet()" ], [ "putIfAbsent", "java.util", "Map", "public default V putIfAbsent(K arg0, V arg1)" ], [ "put", "java.util", "Map", "public abstract V put(K arg0, V arg1)" ], [ "isEmpty", "java.util", "Map", "public abstract boolean isEmpty()" ], [ "hashCode", "java.util", "Map", "public abstract int hashCode()" ], [ "computeIfAbsent", "java.util", "Map", "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)" ], [ "computeIfPresent", "java.util", "Map", "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "size", "java.util", "Map", "public abstract int size()" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9400,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@throws ClassCastException if the stream does not contain the correct objects",
  "methodJavadoc" : "    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */",
  "methodSourceCode" : "protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    this.map = map;\n    final int entrySize = in.readInt();\n    for (int i = 0; i < entrySize; i++) {\n        // This will fail at runtime if the stream is incorrect\n        @SuppressWarnings(\"unchecked\")\n        final E obj = (E) in.readObject();\n        final int count = in.readInt();\n        map.put(obj, new MutableInteger(count));\n        size += count;\n    }\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "map", "java.util.Map", "Map<E, AbstractMapBag.MutableInteger>" ], [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "getOrDefault", "java.util", "Map", "public default V getOrDefault(Object arg0, V arg1)" ], [ "isEmpty", "java.util", "Map", "public abstract boolean isEmpty()" ], [ "hashCode", "java.util", "Map", "public abstract int hashCode()" ], [ "put", "java.util", "Map", "public abstract V put(K arg0, V arg1)" ], [ "size", "java.util", "Map", "public abstract int size()" ], [ "entrySet", "java.util", "Map", "public abstract Set<Map.Entry<K, V>> entrySet()" ], [ "replace", "java.util", "Map", "public default V replace(K arg0, V arg1)" ], [ "computeIfAbsent", "java.util", "Map", "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)" ], [ "remove", "java.util", "Map", "public default boolean remove(Object arg0, Object arg1)" ], [ "merge", "java.util", "Map", "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)" ], [ "putIfAbsent", "java.util", "Map", "public default V putIfAbsent(K arg0, V arg1)" ], [ "keySet", "java.util", "Map", "public abstract Set<K> keySet()" ], [ "remove", "java.util", "Map", "public abstract V remove(Object arg0)" ], [ "get", "java.util", "Map", "public abstract V get(Object arg0)" ], [ "replace", "java.util", "Map", "public default boolean replace(K arg0, V arg1, V arg2)" ], [ "containsValue", "java.util", "Map", "public abstract boolean containsValue(Object arg0)" ], [ "containsKey", "java.util", "Map", "public abstract boolean containsKey(Object arg0)" ], [ "compute", "java.util", "Map", "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "values", "java.util", "Map", "public abstract Collection<V> values()" ], [ "computeIfPresent", "java.util", "Map", "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "equals", "java.util", "Map", "public abstract boolean equals(Object arg0)" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9405,
  "oracle" : "map != null && map.isEmpty();",
  "oracleType" : "PRE",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "AbstractMapBag",
  "javadocTag" : "@param map the map to assign",
  "methodJavadoc" : "    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */",
  "methodSourceCode" : "protected AbstractMapBag(final Map<E, MutableInteger> map){\n    super();\n    this.map = map;\n}",
  "classJavadoc" : "/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Array;\nimport java.util.Collection;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Abstract implementation of the {@link Bag} interface to simplify the creation\n * of subclass implementations.\n * <p>\n * Subclasses specify a Map implementation to use as the internal storage. The\n * map will be used to map bag elements to a number; the number represents the\n * number of occurrences of that element in the bag.\n *\n * @since 3.0 (previously DefaultMapBag v2.0)\n * @version $Id: AbstractMapBag.java 1684859 2015-06-11 11:57:24Z tn $\n */\npublic abstract class AbstractMapBag<E> implements Bag<E> {\n\n    /** The map to use to store the data */\n    private transient Map<E, MutableInteger> map;\n    /** The current total size of the bag */\n    private int size;\n    /** The modification count for fail fast iterators */\n    private transient int modCount;\n    /** Unique view of the elements */\n    private transient Set<E> uniqueSet;\n\n    /**\n     * Constructor needed for subclass serialisation.\n     */\n    protected AbstractMapBag() {\n        super();\n    }\n\n    /**\n     * Constructor that assigns the specified Map as the backing store. The map\n     * must be empty and non-null.\n     *\n     * @param map the map to assign\n     */\n    protected AbstractMapBag(final Map<E, MutableInteger> map) {\n        super();\n        this.map = map;\n    }\n\n    /**\n     * Utility method for implementations to access the map that backs this bag.\n     * Not intended for interactive use outside of subclasses.\n     *\n     * @return the map being used by the Bag\n     */\n    protected Map<E, MutableInteger> getMap() {\n        return map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the number of elements in this bag.\n     *\n     * @return current size of the bag\n     */\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * Returns true if the underlying map is empty.\n     *\n     * @return true if bag is empty\n     */\n    @Override\n    public boolean isEmpty() {\n        return map.isEmpty();\n    }\n\n    /**\n     * Returns the number of occurrence of the given element in this bag by\n     * looking up its count in the underlying map.\n     *\n     * @param object the object to search for\n     * @return the number of occurrences of the object, zero if not found\n     */\n    @Override\n    public int getCount(final Object object) {\n        final MutableInteger count = map.get(object);\n        if (count != null) {\n            return count.value;\n        }\n        return 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Determines if the bag contains the given element by checking if the\n     * underlying map contains the element as a key.\n     *\n     * @param object the object to search for\n     * @return true if the bag contains the given element\n     */\n    @Override\n    public boolean contains(final Object object) {\n        return map.containsKey(object);\n    }\n\n    /**\n     * Determines if the bag contains the given elements.\n     *\n     * @param coll the collection to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return containsAll((Bag<?>) coll);\n        }\n        return containsAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Returns <code>true</code> if the bag contains all elements in the given\n     * collection, respecting cardinality.\n     *\n     * @param other the bag to check against\n     * @return <code>true</code> if the Bag contains all the collection\n     */\n    boolean containsAll(final Bag<?> other) {\n        final Iterator<?> it = other.uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            if (getCount(current) < other.getCount(current)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets an iterator over the bag elements. Elements present in the Bag more\n     * than once will be returned repeatedly.\n     *\n     * @return the iterator\n     */\n    @Override\n    public Iterator<E> iterator() {\n        return new BagIterator<E>(this);\n    }\n\n    /**\n     * Inner class iterator for the Bag.\n     */\n    static class BagIterator<E> implements Iterator<E> {\n        private final AbstractMapBag<E> parent;\n        private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;\n        private Map.Entry<E, MutableInteger> current;\n        private int itemCount;\n        private final int mods;\n        private boolean canRemove;\n\n        /**\n         * Constructor.\n         *\n         * @param parent the parent bag\n         */\n        public BagIterator(final AbstractMapBag<E> parent) {\n            this.parent = parent;\n            this.entryIterator = parent.map.entrySet().iterator();\n            this.current = null;\n            this.mods = parent.modCount;\n            this.canRemove = false;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public boolean hasNext() {\n            return itemCount > 0 || entryIterator.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public E next() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (itemCount == 0) {\n                current = entryIterator.next();\n                itemCount = current.getValue().value;\n            }\n            canRemove = true;\n            itemCount--;\n            return current.getKey();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void remove() {\n            if (parent.modCount != mods) {\n                throw new ConcurrentModificationException();\n            }\n            if (canRemove == false) {\n                throw new IllegalStateException();\n            }\n            final MutableInteger mut = current.getValue();\n            if (mut.value > 1) {\n                mut.value--;\n            } else {\n                entryIterator.remove();\n            }\n            parent.size--;\n            canRemove = false;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Adds a new element to the bag, incrementing its count in the underlying map.\n     *\n     * @param object the object to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    /**\n     * Adds a new element to the bag, incrementing its count in the map.\n     *\n     * @param object the object to search for\n     * @param nCopies the number of copies to add\n     * @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n     */\n    @Override\n    public boolean add(final E object, final int nCopies) {\n        modCount++;\n        if (nCopies > 0) {\n            final MutableInteger mut = map.get(object);\n            size += nCopies;\n            if (mut == null) {\n                map.put(object, new MutableInteger(nCopies));\n                return true;\n            }\n            mut.value += nCopies;\n            return false;\n        }\n        return false;\n    }\n\n    /**\n     * Invokes {@link #add(Object)} for each element in the given collection.\n     *\n     * @param coll the collection to add\n     * @return <code>true</code> if this call changed the bag\n     */\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next());\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears the bag by clearing the underlying map.\n     */\n    @Override\n    public void clear() {\n        modCount++;\n        map.clear();\n        size = 0;\n    }\n\n    /**\n     * Removes all copies of the specified object from the bag.\n     *\n     * @param object the object to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        modCount++;\n        map.remove(object);\n        size -= mut.value;\n        return true;\n    }\n\n    /**\n     * Removes a specified number of copies of an object from the bag.\n     *\n     * @param object the object to remove\n     * @param nCopies the number of copies to remove\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean remove(final Object object, final int nCopies) {\n        final MutableInteger mut = map.get(object);\n        if (mut == null) {\n            return false;\n        }\n        if (nCopies <= 0) {\n            return false;\n        }\n        modCount++;\n        if (nCopies < mut.value) {\n            mut.value -= nCopies;\n            size -= nCopies;\n        } else {\n            map.remove(object);\n            size -= mut.value;\n        }\n        return true;\n    }\n\n    /**\n     * Removes objects from the bag according to their count in the specified\n     * collection.\n     *\n     * @param coll the collection to use\n     * @return true if the bag changed\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        boolean result = false;\n        if (coll != null) {\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final boolean changed = remove(i.next(), 1);\n                result = result || changed;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     *\n     * @param coll the collection to retain\n     * @return true if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll instanceof Bag) {\n            return retainAll((Bag<?>) coll);\n        }\n        return retainAll(new HashBag<Object>(coll));\n    }\n\n    /**\n     * Remove any members of the bag that are not in the given bag, respecting\n     * cardinality.\n     * @see #retainAll(Collection)\n     *\n     * @param other the bag to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    boolean retainAll(final Bag<?> other) {\n        boolean result = false;\n        final Bag<E> excess = new HashBag<E>();\n        final Iterator<E> i = uniqueSet().iterator();\n        while (i.hasNext()) {\n            final E current = i.next();\n            final int myCount = getCount(current);\n            final int otherCount = other.getCount(current);\n            if (1 <= otherCount && otherCount <= myCount) {\n                excess.add(current, myCount - otherCount);\n            } else {\n                excess.add(current, myCount);\n            }\n        }\n        if (!excess.isEmpty()) {\n            result = removeAll(excess);\n        }\n        return result;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mutable integer class for storing the data.\n     */\n    protected static class MutableInteger {\n        /** The value of this mutable. */\n        protected int value;\n\n        /**\n         * Constructor.\n         * @param value the initial value\n         */\n        MutableInteger(final int value) {\n            this.value = value;\n        }\n\n        @Override\n        public boolean equals(final Object obj) {\n            if (obj instanceof MutableInteger == false) {\n                return false;\n            }\n            return ((MutableInteger) obj).value == value;\n        }\n\n        @Override\n        public int hashCode() {\n            return value;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns an array of all of this bag's elements.\n     *\n     * @return an array of all of this bag's elements\n     */\n    @Override\n    public Object[] toArray() {\n        final Object[] result = new Object[size()];\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                result[i++] = current;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Returns an array of all of this bag's elements.\n     * If the input array has more elements than are in the bag,\n     * trailing elements will be set to null.\n     *\n     * @param <T> the type of the array elements\n     * @param array the array to populate\n     * @return an array of all of this bag's elements\n     * @throws ArrayStoreException if the runtime type of the specified array is not\n     *   a supertype of the runtime type of the elements in this list\n     * @throws NullPointerException if the specified array is null\n     */\n    @Override\n    public <T> T[] toArray(T[] array) {\n        final int size = size();\n        if (array.length < size) {\n            @SuppressWarnings(\"unchecked\") // safe as both are of type T\n            final T[] unchecked = (T[]) Array.newInstance(array.getClass().getComponentType(), size);\n            array = unchecked;\n        }\n\n        int i = 0;\n        final Iterator<E> it = map.keySet().iterator();\n        while (it.hasNext()) {\n            final E current = it.next();\n            for (int index = getCount(current); index > 0; index--) {\n                // unsafe, will throw ArrayStoreException if types are not compatible, see javadoc\n                @SuppressWarnings(\"unchecked\")\n                final T unchecked = (T) current;\n                array[i++] = unchecked;\n            }\n        }\n        while (i < array.length) {\n            array[i++] = null;\n        }\n        return array;\n    }\n\n    /**\n     * Returns an unmodifiable view of the underlying map's key set.\n     *\n     * @return the set of unique elements in this bag\n     */\n    @Override\n    public Set<E> uniqueSet() {\n        if (uniqueSet == null) {\n            uniqueSet = UnmodifiableSet.<E> unmodifiableSet(map.keySet());\n        }\n        return uniqueSet;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the map out using a custom routine.\n     * @param out the output stream\n     * @throws IOException any of the usual I/O related exceptions\n     */\n    protected void doWriteObject(final ObjectOutputStream out) throws IOException {\n        out.writeInt(map.size());\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            out.writeObject(entry.getKey());\n            out.writeInt(entry.getValue().value);\n        }\n    }\n\n    /**\n     * Read the map in using a custom routine.\n     * @param map the map to use\n     * @param in the input stream\n     * @throws IOException any of the usual I/O related exceptions\n     * @throws ClassNotFoundException if the stream contains an object which class can not be loaded\n     * @throws ClassCastException if the stream does not contain the correct objects\n     */\n    protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in)\n            throws IOException, ClassNotFoundException {\n        this.map = map;\n        final int entrySize = in.readInt();\n        for (int i = 0; i < entrySize; i++) {\n            @SuppressWarnings(\"unchecked\") // This will fail at runtime if the stream is incorrect\n            final E obj = (E) in.readObject();\n            final int count = in.readInt();\n            map.put(obj, new MutableInteger(count));\n            size += count;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this Bag to another. This Bag equals another Bag if it contains\n     * the same number of occurrences of the same elements.\n     *\n     * @param object the Bag to compare to\n     * @return true if equal\n     */\n    @Override\n    public boolean equals(final Object object) {\n        if (object == this) {\n            return true;\n        }\n        if (object instanceof Bag == false) {\n            return false;\n        }\n        final Bag<?> other = (Bag<?>) object;\n        if (other.size() != size()) {\n            return false;\n        }\n        for (final E element : map.keySet()) {\n            if (other.getCount(element) != getCount(element)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets a hash code for the Bag compatible with the definition of equals.\n     * The hash code is defined as the sum total of a hash code for each\n     * element. The per element hash code is defined as\n     * <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n     * is compatible with the Set interface.\n     *\n     * @return the hash code of the Bag\n     */\n    @Override\n    public int hashCode() {\n        int total = 0;\n        for (final Entry<E, MutableInteger> entry : map.entrySet()) {\n            final E element = entry.getKey();\n            final MutableInteger count = entry.getValue();\n            total += (element == null ? 0 : element.hashCode()) ^ count.value;\n        }\n        return total;\n    }\n\n    /**\n     * Implement a toString() method suitable for debugging.\n     *\n     * @return a debugging toString\n     */\n    @Override\n    public String toString() {\n        if (size() == 0) {\n            return \"[]\";\n        }\n        final StringBuilder buf = new StringBuilder();\n        buf.append('[');\n        final Iterator<E> it = uniqueSet().iterator();\n        while (it.hasNext()) {\n            final Object current = it.next();\n            final int count = getCount(current);\n            buf.append(count);\n            buf.append(':');\n            buf.append(current);\n            if (it.hasNext()) {\n                buf.append(',');\n            }\n        }\n        buf.append(']');\n        return buf.toString();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "map", "java.util.Map", "Map<E, AbstractMapBag.MutableInteger>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object, final int nCopies)" ], [ "iterator", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Iterator<E> iterator()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int getCount(final Object object)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean containsAll(final Collection<?> coll)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean retainAll(final Collection<?> coll)" ], [ "size", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int size()" ], [ "getMap", "org.apache.commons.collections4.bag", "AbstractMapBag", "protected Map<E, MutableInteger> getMap()" ], [ "contains", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean contains(final Object object)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "addAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "isEmpty", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean isEmpty()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractMapBag", "public int hashCode()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "removeAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean removeAll(final Collection<?> coll)" ], [ "add", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean add(final E object)" ], [ "retainAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean retainAll(final Bag<?> other)" ], [ "containsAll", "org.apache.commons.collections4.bag", "AbstractMapBag", "boolean containsAll(final Bag<?> other)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Set<E> uniqueSet()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public Object[] toArray()" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "toArray", "org.apache.commons.collections4.bag", "AbstractMapBag", "public <T> T[] toArray(T[] array)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object, final int nCopies)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean equals(final Object object)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "toString", "org.apache.commons.collections4.bag", "AbstractMapBag", "public String toString()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractMapBag", "public boolean remove(final Object object)" ], [ "replace", "java.util", "Map", "public default V replace(K arg0, V arg1)" ], [ "entrySet", "java.util", "Map", "public abstract Set<Map.Entry<K, V>> entrySet()" ], [ "hashCode", "java.util", "Map", "public abstract int hashCode()" ], [ "containsKey", "java.util", "Map", "public abstract boolean containsKey(Object arg0)" ], [ "keySet", "java.util", "Map", "public abstract Set<K> keySet()" ], [ "remove", "java.util", "Map", "public default boolean remove(Object arg0, Object arg1)" ], [ "merge", "java.util", "Map", "public default V merge(K arg0, V arg1, BiFunction<? super V, ? super V, ? extends V> arg2)" ], [ "getOrDefault", "java.util", "Map", "public default V getOrDefault(Object arg0, V arg1)" ], [ "containsValue", "java.util", "Map", "public abstract boolean containsValue(Object arg0)" ], [ "putIfAbsent", "java.util", "Map", "public default V putIfAbsent(K arg0, V arg1)" ], [ "computeIfPresent", "java.util", "Map", "public default V computeIfPresent(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "isEmpty", "java.util", "Map", "public abstract boolean isEmpty()" ], [ "size", "java.util", "Map", "public abstract int size()" ], [ "values", "java.util", "Map", "public abstract Collection<V> values()" ], [ "computeIfAbsent", "java.util", "Map", "public default V computeIfAbsent(K arg0, Function<? super K, ? extends V> arg1)" ], [ "replace", "java.util", "Map", "public default boolean replace(K arg0, V arg1, V arg2)" ], [ "put", "java.util", "Map", "public abstract V put(K arg0, V arg1)" ], [ "equals", "java.util", "Map", "public abstract boolean equals(Object arg0)" ], [ "get", "java.util", "Map", "public abstract V get(Object arg0)" ], [ "remove", "java.util", "Map", "public abstract V remove(Object arg0)" ], [ "compute", "java.util", "Map", "public default V compute(K arg0, BiFunction<? super K, ? super V, ? extends V> arg1)" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9409,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "CollectionBag",
  "javadocTag" : "@throws IOException",
  "methodJavadoc" : "    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */",
  "methodSourceCode" : "private void writeObject(final ObjectOutputStream out) throws IOException{\n    out.defaultWriteObject();\n    out.writeObject(decorated());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport org.apache.commons.collections4.Bag;\n\n/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class CollectionBag<E> extends AbstractBagDecorator<E> {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -2560033712679053143L;\n\n    /**\n     * Factory method to create a bag that complies to the Collection contract.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return a Bag that complies to the Collection contract\n     * @throws NullPointerException if bag is null\n     */\n    public static <E> Bag<E> collectionBag(final Bag<E> bag) {\n        return new CollectionBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    public CollectionBag(final Bag<E> bag) {\n        super(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    // Collection interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Returns <code>true</code> if the bag contains all elements in\n     * the given collection, <b>not</b> respecting cardinality. That is,\n     * if the given collection <code>coll</code> contains at least one of\n     * every object contained in this object.\n     *\n     * @param coll  the collection to check against\n     * @return <code>true</code> if the Bag contains at least one of every object in the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        final Iterator<?> e = coll.iterator();\n        while (e.hasNext()) {\n            if(!contains(e.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Adds one copy of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next(), 1);\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Removes the first occurrence of the given object from the bag.\n     * <p>\n     * This will also remove the object from the {@link #uniqueSet()} if the\n     * bag contains no occurrence anymore of the object after this operation.\n     *\n     * @param object  the object to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean remove(final Object object) {\n        return remove(object, 1);\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove all elements represented in the given collection,\n     * <b>not</b> respecting cardinality. That is, remove <i>all</i>\n     * occurrences of every object contained in the given collection.\n     *\n     * @param coll  the collection to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean result = false;\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final Object obj = i.next();\n                final boolean changed = remove(obj, getCount(obj));\n                result = result || changed;\n            }\n            return result;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().removeAll(null);\n        }\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove any members of the bag that are not in the given collection,\n     * <i>not</i> respecting cardinality. That is, any object in the given\n     * collection <code>coll</code> will be retained in the bag with the same\n     * number of copies prior to this operation. All other objects will be\n     * completely removed from this bag.\n     * <p>\n     * This implementation iterates over the elements of this bag, checking\n     * each element in turn to see if it's contained in <code>coll</code>.\n     * If it's not contained, it's removed from this bag. As a consequence,\n     * it is advised to use a collection type for <code>coll</code> that provides\n     * a fast (e.g. O(1)) implementation of {@link Collection#contains(Object)}.\n     *\n     * @param coll  the collection to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean modified = false;\n            final Iterator<E> e = iterator();\n            while (e.hasNext()) {\n                if (!coll.contains(e.next())) {\n                    e.remove();\n                    modified = true;\n                }\n            }\n            return modified;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().retainAll(null);\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    // Bag interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Adds <code>count</code> copies of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @param count  the number of copies to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object, final int count) {\n        decorated().add(object, count);\n        return true;\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "out", "java.io", "ObjectOutputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public Set<E> uniqueSet()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object, final int count)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean remove(Object arg0, int arg1)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "retainAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean retainAll(final Collection<?> coll)" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "removeAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean removeAll(final Collection<?> coll)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "addAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean remove(final Object object)" ], [ "containsAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean containsAll(final Collection<?> coll)" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "enableReplaceObject", "java.io", "ObjectOutputStream", "protected boolean enableReplaceObject(boolean arg0) throws SecurityException" ], [ "putFields", "java.io", "ObjectOutputStream", "public ObjectOutputStream.PutField putFields() throws IOException" ], [ "replaceObject", "java.io", "ObjectOutputStream", "protected Object replaceObject(Object arg0) throws IOException" ], [ "getProtocolVersion", "java.io", "ObjectOutputStream", "int getProtocolVersion()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9411,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "CollectionBag",
  "javadocTag" : "@throws IOException",
  "methodJavadoc" : "    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */",
  "methodSourceCode" : "private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    in.defaultReadObject();\n    setCollection((Collection<E>) in.readObject());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport org.apache.commons.collections4.Bag;\n\n/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class CollectionBag<E> extends AbstractBagDecorator<E> {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -2560033712679053143L;\n\n    /**\n     * Factory method to create a bag that complies to the Collection contract.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return a Bag that complies to the Collection contract\n     * @throws NullPointerException if bag is null\n     */\n    public static <E> Bag<E> collectionBag(final Bag<E> bag) {\n        return new CollectionBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    public CollectionBag(final Bag<E> bag) {\n        super(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    // Collection interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Returns <code>true</code> if the bag contains all elements in\n     * the given collection, <b>not</b> respecting cardinality. That is,\n     * if the given collection <code>coll</code> contains at least one of\n     * every object contained in this object.\n     *\n     * @param coll  the collection to check against\n     * @return <code>true</code> if the Bag contains at least one of every object in the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        final Iterator<?> e = coll.iterator();\n        while (e.hasNext()) {\n            if(!contains(e.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Adds one copy of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next(), 1);\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Removes the first occurrence of the given object from the bag.\n     * <p>\n     * This will also remove the object from the {@link #uniqueSet()} if the\n     * bag contains no occurrence anymore of the object after this operation.\n     *\n     * @param object  the object to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean remove(final Object object) {\n        return remove(object, 1);\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove all elements represented in the given collection,\n     * <b>not</b> respecting cardinality. That is, remove <i>all</i>\n     * occurrences of every object contained in the given collection.\n     *\n     * @param coll  the collection to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean result = false;\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final Object obj = i.next();\n                final boolean changed = remove(obj, getCount(obj));\n                result = result || changed;\n            }\n            return result;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().removeAll(null);\n        }\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove any members of the bag that are not in the given collection,\n     * <i>not</i> respecting cardinality. That is, any object in the given\n     * collection <code>coll</code> will be retained in the bag with the same\n     * number of copies prior to this operation. All other objects will be\n     * completely removed from this bag.\n     * <p>\n     * This implementation iterates over the elements of this bag, checking\n     * each element in turn to see if it's contained in <code>coll</code>.\n     * If it's not contained, it's removed from this bag. As a consequence,\n     * it is advised to use a collection type for <code>coll</code> that provides\n     * a fast (e.g. O(1)) implementation of {@link Collection#contains(Object)}.\n     *\n     * @param coll  the collection to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean modified = false;\n            final Iterator<E> e = iterator();\n            while (e.hasNext()) {\n                if (!coll.contains(e.next())) {\n                    e.remove();\n                    modified = true;\n                }\n            }\n            return modified;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().retainAll(null);\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    // Bag interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Adds <code>count</code> copies of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @param count  the number of copies to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object, final int count) {\n        decorated().add(object, count);\n        return true;\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object, final int count)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "addAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public Set<E> uniqueSet()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "retainAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean retainAll(final Collection<?> coll)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean remove(final Object object)" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean remove(Object arg0, int arg1)" ], [ "removeAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean removeAll(final Collection<?> coll)" ], [ "containsAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean containsAll(final Collection<?> coll)" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9412,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "CollectionBag",
  "javadocTag" : "@throws ClassNotFoundException",
  "methodJavadoc" : "    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */",
  "methodSourceCode" : "private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    in.defaultReadObject();\n    setCollection((Collection<E>) in.readObject());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport org.apache.commons.collections4.Bag;\n\n/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class CollectionBag<E> extends AbstractBagDecorator<E> {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -2560033712679053143L;\n\n    /**\n     * Factory method to create a bag that complies to the Collection contract.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return a Bag that complies to the Collection contract\n     * @throws NullPointerException if bag is null\n     */\n    public static <E> Bag<E> collectionBag(final Bag<E> bag) {\n        return new CollectionBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    public CollectionBag(final Bag<E> bag) {\n        super(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    // Collection interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Returns <code>true</code> if the bag contains all elements in\n     * the given collection, <b>not</b> respecting cardinality. That is,\n     * if the given collection <code>coll</code> contains at least one of\n     * every object contained in this object.\n     *\n     * @param coll  the collection to check against\n     * @return <code>true</code> if the Bag contains at least one of every object in the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        final Iterator<?> e = coll.iterator();\n        while (e.hasNext()) {\n            if(!contains(e.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Adds one copy of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next(), 1);\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Removes the first occurrence of the given object from the bag.\n     * <p>\n     * This will also remove the object from the {@link #uniqueSet()} if the\n     * bag contains no occurrence anymore of the object after this operation.\n     *\n     * @param object  the object to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean remove(final Object object) {\n        return remove(object, 1);\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove all elements represented in the given collection,\n     * <b>not</b> respecting cardinality. That is, remove <i>all</i>\n     * occurrences of every object contained in the given collection.\n     *\n     * @param coll  the collection to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean result = false;\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final Object obj = i.next();\n                final boolean changed = remove(obj, getCount(obj));\n                result = result || changed;\n            }\n            return result;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().removeAll(null);\n        }\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove any members of the bag that are not in the given collection,\n     * <i>not</i> respecting cardinality. That is, any object in the given\n     * collection <code>coll</code> will be retained in the bag with the same\n     * number of copies prior to this operation. All other objects will be\n     * completely removed from this bag.\n     * <p>\n     * This implementation iterates over the elements of this bag, checking\n     * each element in turn to see if it's contained in <code>coll</code>.\n     * If it's not contained, it's removed from this bag. As a consequence,\n     * it is advised to use a collection type for <code>coll</code> that provides\n     * a fast (e.g. O(1)) implementation of {@link Collection#contains(Object)}.\n     *\n     * @param coll  the collection to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean modified = false;\n            final Iterator<E> e = iterator();\n            while (e.hasNext()) {\n                if (!coll.contains(e.next())) {\n                    e.remove();\n                    modified = true;\n                }\n            }\n            return modified;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().retainAll(null);\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    // Bag interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Adds <code>count</code> copies of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @param count  the number of copies to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object, final int count) {\n        decorated().add(object, count);\n        return true;\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "addAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "remove", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean remove(final Object object)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "retainAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean retainAll(final Collection<?> coll)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean remove(Object arg0, int arg1)" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public Set<E> uniqueSet()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "containsAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean containsAll(final Collection<?> coll)" ], [ "removeAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean removeAll(final Collection<?> coll)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object, final int count)" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9413,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "CollectionBag",
  "javadocTag" : "@throws ClassCastException if deserialised object has wrong type",
  "methodJavadoc" : "    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */",
  "methodSourceCode" : "private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    in.defaultReadObject();\n    setCollection((Collection<E>) in.readObject());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport org.apache.commons.collections4.Bag;\n\n/**\n * Decorates another {@link Bag} to comply with the Collection contract.\n * <p>\n * By decorating an existing {@link Bag} instance with a {@link CollectionBag},\n * it can be safely passed on to methods that require Collection types that\n * are fully compliant with the Collection contract.\n * <p>\n * The method javadoc highlights the differences compared to the original Bag interface.\n *\n * @see Bag\n * @param <E> the type held in the bag\n * @since 4.0\n * @version $Id: CollectionBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class CollectionBag<E> extends AbstractBagDecorator<E> {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -2560033712679053143L;\n\n    /**\n     * Factory method to create a bag that complies to the Collection contract.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return a Bag that complies to the Collection contract\n     * @throws NullPointerException if bag is null\n     */\n    public static <E> Bag<E> collectionBag(final Bag<E> bag) {\n        return new CollectionBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    public CollectionBag(final Bag<E> bag) {\n        super(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    // Collection interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Returns <code>true</code> if the bag contains all elements in\n     * the given collection, <b>not</b> respecting cardinality. That is,\n     * if the given collection <code>coll</code> contains at least one of\n     * every object contained in this object.\n     *\n     * @param coll  the collection to check against\n     * @return <code>true</code> if the Bag contains at least one of every object in the collection\n     */\n    @Override\n    public boolean containsAll(final Collection<?> coll) {\n        final Iterator<?> e = coll.iterator();\n        while (e.hasNext()) {\n            if(!contains(e.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Adds one copy of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object) {\n        return add(object, 1);\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        boolean changed = false;\n        final Iterator<? extends E> i = coll.iterator();\n        while (i.hasNext()) {\n            final boolean added = add(i.next(), 1);\n            changed = changed || added;\n        }\n        return changed;\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Removes the first occurrence of the given object from the bag.\n     * <p>\n     * This will also remove the object from the {@link #uniqueSet()} if the\n     * bag contains no occurrence anymore of the object after this operation.\n     *\n     * @param object  the object to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean remove(final Object object) {\n        return remove(object, 1);\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove all elements represented in the given collection,\n     * <b>not</b> respecting cardinality. That is, remove <i>all</i>\n     * occurrences of every object contained in the given collection.\n     *\n     * @param coll  the collection to remove\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean result = false;\n            final Iterator<?> i = coll.iterator();\n            while (i.hasNext()) {\n                final Object obj = i.next();\n                final boolean changed = remove(obj, getCount(obj));\n                result = result || changed;\n            }\n            return result;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().removeAll(null);\n        }\n    }\n\n    /**\n     * <i>(Change)</i>\n     * Remove any members of the bag that are not in the given collection,\n     * <i>not</i> respecting cardinality. That is, any object in the given\n     * collection <code>coll</code> will be retained in the bag with the same\n     * number of copies prior to this operation. All other objects will be\n     * completely removed from this bag.\n     * <p>\n     * This implementation iterates over the elements of this bag, checking\n     * each element in turn to see if it's contained in <code>coll</code>.\n     * If it's not contained, it's removed from this bag. As a consequence,\n     * it is advised to use a collection type for <code>coll</code> that provides\n     * a fast (e.g. O(1)) implementation of {@link Collection#contains(Object)}.\n     *\n     * @param coll  the collection to retain\n     * @return <code>true</code> if this call changed the collection\n     */\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        if (coll != null) {\n            boolean modified = false;\n            final Iterator<E> e = iterator();\n            while (e.hasNext()) {\n                if (!coll.contains(e.next())) {\n                    e.remove();\n                    modified = true;\n                }\n            }\n            return modified;\n        } else {\n            // let the decorated bag handle the case of null argument\n            return decorated().retainAll(null);\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    // Bag interface\n    //-----------------------------------------------------------------------\n\n    /**\n     * <i>(Change)</i>\n     * Adds <code>count</code> copies of the specified object to the Bag.\n     * <p>\n     * Since this method always increases the size of the bag, it\n     * will always return <code>true</code>.\n     *\n     * @param object  the object to add\n     * @param count  the number of copies to add\n     * @return <code>true</code>, always\n     */\n    @Override\n    public boolean add(final E object, final int count) {\n        decorated().add(object, count);\n        return true;\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "removeAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean removeAll(final Collection<?> coll)" ], [ "retainAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean retainAll(final Collection<?> coll)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public Set<E> uniqueSet()" ], [ "remove", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean remove(Object arg0, int arg1)" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "containsAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean containsAll(final Collection<?> coll)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean remove(final Object object)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object)" ], [ "addAll", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "add", "org.apache.commons.collections4.bag", "CollectionBag", "public boolean add(final E object, final int count)" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9425,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "UnmodifiableBag",
  "javadocTag" : "@param <E> the type of the elements in the bag",
  "methodJavadoc" : "    /**\n     * Factory method to create an unmodifiable bag.\n     * <p>\n     * If the bag passed in is already unmodifiable, it is returned.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return an unmodifiable Bag\n     * @throws NullPointerException if bag is null\n     * @since 4.0\n     */",
  "methodSourceCode" : "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag){\n    if (bag instanceof Unmodifiable) {\n        // safe to upcast\n        @SuppressWarnings(\"unchecked\")\n        final Bag<E> tmpBag = (Bag<E>) bag;\n        return tmpBag;\n    }\n    return new UnmodifiableBag<E>(bag);\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.apache.commons.collections4.iterators.UnmodifiableIterator;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class UnmodifiableBag<E>\n        extends AbstractBagDecorator<E> implements Unmodifiable {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -1873799975157099624L;\n\n    /**\n     * Factory method to create an unmodifiable bag.\n     * <p>\n     * If the bag passed in is already unmodifiable, it is returned.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return an unmodifiable Bag\n     * @throws NullPointerException if bag is null\n     * @since 4.0\n     */\n    public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag) {\n        if (bag instanceof Unmodifiable) {\n            @SuppressWarnings(\"unchecked\") // safe to upcast\n            final Bag<E> tmpBag = (Bag<E>) bag;\n            return tmpBag;\n        }\n        return new UnmodifiableBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    @SuppressWarnings(\"unchecked\") // safe to upcast\n    private UnmodifiableBag(final Bag<? extends E> bag) {\n        super((Bag<E>) bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public Iterator<E> iterator() {\n        return UnmodifiableIterator.<E> unmodifiableIterator(decorated().iterator());\n    }\n\n    @Override\n    public boolean add(final E object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void clear() {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public boolean add(final E object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public Set<E> uniqueSet() {\n        final Set<E> set = decorated().uniqueSet();\n        return UnmodifiableSet.<E> unmodifiableSet(set);\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ [ "4.0", "double" ] ],
  "tokensMethodArguments" : [ [ "bag", "org.apache.commons.collections4.Bag", "Bag<? extends E>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object, final int count)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "addAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Set<E> uniqueSet()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "retainAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean retainAll(final Collection<?> coll)" ], [ "iterator", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Iterator<E> iterator()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object)" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object, final int count)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object)" ], [ "removeAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean removeAll(final Collection<?> coll)" ], [ "containsAll", "org.apache.commons.collections4", "Bag", "public abstract boolean containsAll(Collection<?> arg0)" ], [ "retainAll", "org.apache.commons.collections4", "Bag", "public abstract boolean retainAll(Collection<?> arg0)" ], [ "add", "org.apache.commons.collections4", "Bag", "public abstract boolean add(E arg0, int arg1)" ], [ "remove", "org.apache.commons.collections4", "Bag", "public abstract boolean remove(Object arg0)" ], [ "iterator", "org.apache.commons.collections4", "Bag", "public abstract Iterator<E> iterator()" ], [ "removeAll", "org.apache.commons.collections4", "Bag", "public abstract boolean removeAll(Collection<?> arg0)" ], [ "remove", "org.apache.commons.collections4", "Bag", "public abstract boolean remove(Object arg0, int arg1)" ], [ "uniqueSet", "org.apache.commons.collections4", "Bag", "public abstract Set<E> uniqueSet()" ], [ "add", "org.apache.commons.collections4", "Bag", "public abstract boolean add(E arg0)" ], [ "size", "org.apache.commons.collections4", "Bag", "public abstract int size()" ], [ "getCount", "org.apache.commons.collections4", "Bag", "public abstract int getCount(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9428,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "UnmodifiableBag",
  "javadocTag" : "@throws IOException",
  "methodJavadoc" : "    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */",
  "methodSourceCode" : "private void writeObject(final ObjectOutputStream out) throws IOException{\n    out.defaultWriteObject();\n    out.writeObject(decorated());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.apache.commons.collections4.iterators.UnmodifiableIterator;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class UnmodifiableBag<E>\n        extends AbstractBagDecorator<E> implements Unmodifiable {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -1873799975157099624L;\n\n    /**\n     * Factory method to create an unmodifiable bag.\n     * <p>\n     * If the bag passed in is already unmodifiable, it is returned.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return an unmodifiable Bag\n     * @throws NullPointerException if bag is null\n     * @since 4.0\n     */\n    public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag) {\n        if (bag instanceof Unmodifiable) {\n            @SuppressWarnings(\"unchecked\") // safe to upcast\n            final Bag<E> tmpBag = (Bag<E>) bag;\n            return tmpBag;\n        }\n        return new UnmodifiableBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    @SuppressWarnings(\"unchecked\") // safe to upcast\n    private UnmodifiableBag(final Bag<? extends E> bag) {\n        super((Bag<E>) bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public Iterator<E> iterator() {\n        return UnmodifiableIterator.<E> unmodifiableIterator(decorated().iterator());\n    }\n\n    @Override\n    public boolean add(final E object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void clear() {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public boolean add(final E object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public Set<E> uniqueSet() {\n        final Set<E> set = decorated().uniqueSet();\n        return UnmodifiableSet.<E> unmodifiableSet(set);\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "out", "java.io", "ObjectOutputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object, final int count)" ], [ "removeAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean removeAll(final Collection<?> coll)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Set<E> uniqueSet()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object)" ], [ "addAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "retainAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean retainAll(final Collection<?> coll)" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object, final int count)" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "iterator", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Iterator<E> iterator()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "getProtocolVersion", "java.io", "ObjectOutputStream", "int getProtocolVersion()" ], [ "replaceObject", "java.io", "ObjectOutputStream", "protected Object replaceObject(Object arg0) throws IOException" ], [ "putFields", "java.io", "ObjectOutputStream", "public ObjectOutputStream.PutField putFields() throws IOException" ], [ "enableReplaceObject", "java.io", "ObjectOutputStream", "protected boolean enableReplaceObject(boolean arg0) throws SecurityException" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9431,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "UnmodifiableBag",
  "javadocTag" : "@throws ClassNotFoundException",
  "methodJavadoc" : "    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */",
  "methodSourceCode" : "private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    in.defaultReadObject();\n    setCollection((Collection<E>) in.readObject());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.apache.commons.collections4.iterators.UnmodifiableIterator;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class UnmodifiableBag<E>\n        extends AbstractBagDecorator<E> implements Unmodifiable {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -1873799975157099624L;\n\n    /**\n     * Factory method to create an unmodifiable bag.\n     * <p>\n     * If the bag passed in is already unmodifiable, it is returned.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return an unmodifiable Bag\n     * @throws NullPointerException if bag is null\n     * @since 4.0\n     */\n    public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag) {\n        if (bag instanceof Unmodifiable) {\n            @SuppressWarnings(\"unchecked\") // safe to upcast\n            final Bag<E> tmpBag = (Bag<E>) bag;\n            return tmpBag;\n        }\n        return new UnmodifiableBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    @SuppressWarnings(\"unchecked\") // safe to upcast\n    private UnmodifiableBag(final Bag<? extends E> bag) {\n        super((Bag<E>) bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public Iterator<E> iterator() {\n        return UnmodifiableIterator.<E> unmodifiableIterator(decorated().iterator());\n    }\n\n    @Override\n    public boolean add(final E object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void clear() {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public boolean add(final E object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public Set<E> uniqueSet() {\n        final Set<E> set = decorated().uniqueSet();\n        return UnmodifiableSet.<E> unmodifiableSet(set);\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Set<E> uniqueSet()" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object, final int count)" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "iterator", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Iterator<E> iterator()" ], [ "removeAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean removeAll(final Collection<?> coll)" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object, final int count)" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "retainAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean retainAll(final Collection<?> coll)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "addAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9432,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "UnmodifiableBag",
  "javadocTag" : "@throws ClassCastException if deserialised object has wrong type",
  "methodJavadoc" : "    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */",
  "methodSourceCode" : "private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException{\n    in.defaultReadObject();\n    setCollection((Collection<E>) in.readObject());\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.apache.commons.collections4.iterators.UnmodifiableIterator;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class UnmodifiableBag<E>\n        extends AbstractBagDecorator<E> implements Unmodifiable {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -1873799975157099624L;\n\n    /**\n     * Factory method to create an unmodifiable bag.\n     * <p>\n     * If the bag passed in is already unmodifiable, it is returned.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return an unmodifiable Bag\n     * @throws NullPointerException if bag is null\n     * @since 4.0\n     */\n    public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag) {\n        if (bag instanceof Unmodifiable) {\n            @SuppressWarnings(\"unchecked\") // safe to upcast\n            final Bag<E> tmpBag = (Bag<E>) bag;\n            return tmpBag;\n        }\n        return new UnmodifiableBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    @SuppressWarnings(\"unchecked\") // safe to upcast\n    private UnmodifiableBag(final Bag<? extends E> bag) {\n        super((Bag<E>) bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public Iterator<E> iterator() {\n        return UnmodifiableIterator.<E> unmodifiableIterator(decorated().iterator());\n    }\n\n    @Override\n    public boolean add(final E object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void clear() {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public boolean add(final E object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public Set<E> uniqueSet() {\n        final Set<E> set = decorated().uniqueSet();\n        return UnmodifiableSet.<E> unmodifiableSet(set);\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "in", "java.io", "ObjectInputStream" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object, final int count)" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "removeAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean removeAll(final Collection<?> coll)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object, final int count)" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "iterator", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Iterator<E> iterator()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object)" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "addAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Set<E> uniqueSet()" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "retainAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean retainAll(final Collection<?> coll)" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "readBoolean", "java.io", "ObjectInputStream", "public boolean readBoolean() throws IOException" ], [ "resolveClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveClass(ObjectStreamClass arg0) throws IOException, ClassNotFoundException" ], [ "readFloat", "java.io", "ObjectInputStream", "public float readFloat() throws IOException" ], [ "readFields", "java.io", "ObjectInputStream", "public ObjectInputStream.GetField readFields() throws IOException, ClassNotFoundException" ], [ "readByte", "java.io", "ObjectInputStream", "public byte readByte() throws IOException" ], [ "readObjectOverride", "java.io", "ObjectInputStream", "protected Object readObjectOverride() throws IOException, ClassNotFoundException" ], [ "readUnsignedByte", "java.io", "ObjectInputStream", "public int readUnsignedByte() throws IOException" ], [ "readUnshared", "java.io", "ObjectInputStream", "public Object readUnshared() throws IOException, ClassNotFoundException" ], [ "readLong", "java.io", "ObjectInputStream", "public long readLong() throws IOException" ], [ "readDouble", "java.io", "ObjectInputStream", "public double readDouble() throws IOException" ], [ "readObject", "java.io", "ObjectInputStream", "public final Object readObject() throws IOException, ClassNotFoundException" ], [ "readShort", "java.io", "ObjectInputStream", "public short readShort() throws IOException" ], [ "getObjectInputFilter", "java.io", "ObjectInputStream", "public final ObjectInputFilter getObjectInputFilter()" ], [ "read", "java.io", "ObjectInputStream", "public int read() throws IOException" ], [ "read", "java.io", "ObjectInputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "readUTF", "java.io", "ObjectInputStream", "public String readUTF() throws IOException" ], [ "readLine", "java.io", "ObjectInputStream", "public String readLine() throws IOException" ], [ "resolveProxyClass", "java.io", "ObjectInputStream", "protected Class<? extends Object> resolveProxyClass(String[] arg0) throws IOException, ClassNotFoundException" ], [ "available", "java.io", "ObjectInputStream", "public int available() throws IOException" ], [ "readClassDescriptor", "java.io", "ObjectInputStream", "protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException" ], [ "readChar", "java.io", "ObjectInputStream", "public char readChar() throws IOException" ], [ "resolveObject", "java.io", "ObjectInputStream", "protected Object resolveObject(Object arg0) throws IOException" ], [ "skipBytes", "java.io", "ObjectInputStream", "public int skipBytes(int arg0) throws IOException" ], [ "readTypeString", "java.io", "ObjectInputStream", "String readTypeString() throws IOException" ], [ "readUnsignedShort", "java.io", "ObjectInputStream", "public int readUnsignedShort() throws IOException" ], [ "readInt", "java.io", "ObjectInputStream", "public int readInt() throws IOException" ], [ "enableResolveObject", "java.io", "ObjectInputStream", "protected boolean enableResolveObject(boolean arg0) throws SecurityException" ], [ "skip", "java.io", "InputStream", "public long skip(long arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public int readNBytes(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "InputStream", "public abstract int read() throws IOException" ], [ "readAllBytes", "java.io", "InputStream", "public byte[] readAllBytes() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "transferTo", "java.io", "InputStream", "public long transferTo(OutputStream arg0) throws IOException" ], [ "available", "java.io", "InputStream", "public int available() throws IOException" ], [ "read", "java.io", "InputStream", "public int read(byte[] arg0) throws IOException" ], [ "readNBytes", "java.io", "InputStream", "public byte[] readNBytes(int arg0) throws IOException" ], [ "markSupported", "java.io", "InputStream", "public boolean markSupported()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0, int arg1, int arg2) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read(byte[] arg0) throws IOException" ], [ "read", "java.io", "ObjectInput", "public abstract int read() throws IOException" ], [ "skip", "java.io", "ObjectInput", "public abstract long skip(long arg0) throws IOException" ], [ "readObject", "java.io", "ObjectInput", "public abstract Object readObject() throws ClassNotFoundException, IOException" ], [ "available", "java.io", "ObjectInput", "public abstract int available() throws IOException" ], [ "skipBytes", "java.io", "DataInput", "public abstract int skipBytes(int arg0) throws IOException" ], [ "readUTF", "java.io", "DataInput", "public abstract String readUTF() throws IOException" ], [ "readLine", "java.io", "DataInput", "public abstract String readLine() throws IOException" ], [ "readInt", "java.io", "DataInput", "public abstract int readInt() throws IOException" ], [ "readUnsignedShort", "java.io", "DataInput", "public abstract int readUnsignedShort() throws IOException" ], [ "readShort", "java.io", "DataInput", "public abstract short readShort() throws IOException" ], [ "readChar", "java.io", "DataInput", "public abstract char readChar() throws IOException" ], [ "readDouble", "java.io", "DataInput", "public abstract double readDouble() throws IOException" ], [ "readByte", "java.io", "DataInput", "public abstract byte readByte() throws IOException" ], [ "readBoolean", "java.io", "DataInput", "public abstract boolean readBoolean() throws IOException" ], [ "readUnsignedByte", "java.io", "DataInput", "public abstract int readUnsignedByte() throws IOException" ], [ "readFloat", "java.io", "DataInput", "public abstract float readFloat() throws IOException" ], [ "readLong", "java.io", "DataInput", "public abstract long readLong() throws IOException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9434,
  "oracle" : "bag == null;",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "UnmodifiableBag",
  "javadocTag" : "@throws NullPointerException if bag is null",
  "methodJavadoc" : "    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */",
  "methodSourceCode" : "private UnmodifiableBag(final Bag<? extends E> bag){\n    super((Bag<E>) bag);\n}",
  "classJavadoc" : "/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.apache.commons.collections4.iterators.UnmodifiableIterator;\nimport org.apache.commons.collections4.set.UnmodifiableSet;\n\n/**\n * Decorates another {@link Bag} to ensure it can't be altered.\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n * <p>\n * Attempts to modify it will result in an UnsupportedOperationException.\n *\n * @since 3.0\n * @version $Id: UnmodifiableBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic final class UnmodifiableBag<E>\n        extends AbstractBagDecorator<E> implements Unmodifiable {\n\n    /** Serialization version */\n    private static final long serialVersionUID = -1873799975157099624L;\n\n    /**\n     * Factory method to create an unmodifiable bag.\n     * <p>\n     * If the bag passed in is already unmodifiable, it is returned.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @return an unmodifiable Bag\n     * @throws NullPointerException if bag is null\n     * @since 4.0\n     */\n    public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag) {\n        if (bag instanceof Unmodifiable) {\n            @SuppressWarnings(\"unchecked\") // safe to upcast\n            final Bag<E> tmpBag = (Bag<E>) bag;\n            return tmpBag;\n        }\n        return new UnmodifiableBag<E>(bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @throws NullPointerException if bag is null\n     */\n    @SuppressWarnings(\"unchecked\") // safe to upcast\n    private UnmodifiableBag(final Bag<? extends E> bag) {\n        super((Bag<E>) bag);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Write the collection out using a custom routine.\n     *\n     * @param out  the output stream\n     * @throws IOException\n     */\n    private void writeObject(final ObjectOutputStream out) throws IOException {\n        out.defaultWriteObject();\n        out.writeObject(decorated());\n    }\n\n    /**\n     * Read the collection in using a custom routine.\n     *\n     * @param in  the input stream\n     * @throws IOException\n     * @throws ClassNotFoundException\n     * @throws ClassCastException if deserialised object has wrong type\n     */\n    @SuppressWarnings(\"unchecked\") // will throw CCE, see Javadoc\n    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        setCollection((Collection<E>) in.readObject());\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public Iterator<E> iterator() {\n        return UnmodifiableIterator.<E> unmodifiableIterator(decorated().iterator());\n    }\n\n    @Override\n    public boolean add(final E object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean addAll(final Collection<? extends E> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void clear() {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean removeAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean retainAll(final Collection<?> coll) {\n        throw new UnsupportedOperationException();\n    }\n\n    //-----------------------------------------------------------------------\n    @Override\n    public boolean add(final E object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean remove(final Object object, final int count) {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public Set<E> uniqueSet() {\n        final Set<E> set = decorated().uniqueSet();\n        return UnmodifiableSet.<E> unmodifiableSet(set);\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "bag", "org.apache.commons.collections4.Bag", "Bag<? extends E>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object)" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "hashCode", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int hashCode()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object, final int count)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "getCount", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public int getCount(Object arg0)" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "decorated", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "protected Bag<E> decorated()" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Set<E> uniqueSet()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "remove", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean remove(final Object object)" ], [ "addAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean addAll(final Collection<? extends E> coll)" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "equals", "org.apache.commons.collections4.bag", "AbstractBagDecorator", "public boolean equals(Object arg0)" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "removeAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean removeAll(final Collection<?> coll)" ], [ "retainAll", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean retainAll(final Collection<?> coll)" ], [ "iterator", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public Iterator<E> iterator()" ], [ "add", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public boolean add(final E object, final int count)" ], [ "add", "org.apache.commons.collections4", "Bag", "public abstract boolean add(E arg0, int arg1)" ], [ "containsAll", "org.apache.commons.collections4", "Bag", "public abstract boolean containsAll(Collection<?> arg0)" ], [ "size", "org.apache.commons.collections4", "Bag", "public abstract int size()" ], [ "remove", "org.apache.commons.collections4", "Bag", "public abstract boolean remove(Object arg0)" ], [ "iterator", "org.apache.commons.collections4", "Bag", "public abstract Iterator<E> iterator()" ], [ "getCount", "org.apache.commons.collections4", "Bag", "public abstract int getCount(Object arg0)" ], [ "add", "org.apache.commons.collections4", "Bag", "public abstract boolean add(E arg0)" ], [ "remove", "org.apache.commons.collections4", "Bag", "public abstract boolean remove(Object arg0, int arg1)" ], [ "uniqueSet", "org.apache.commons.collections4", "Bag", "public abstract Set<E> uniqueSet()" ], [ "removeAll", "org.apache.commons.collections4", "Bag", "public abstract boolean removeAll(Collection<?> arg0)" ], [ "retainAll", "org.apache.commons.collections4", "Bag", "public abstract boolean retainAll(Collection<?> arg0)" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 9437,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "commons-collections4-4.1",
  "packageName" : "org.apache.commons.collections4.bag",
  "className" : "PredicatedSortedBag",
  "javadocTag" : "@throws IllegalArgumentException if the bag contains invalid elements",
  "methodJavadoc" : "    /**\n     * Factory method to create a predicated (validating) bag.\n     * <p>\n     * If there are any elements already in the bag being decorated, they\n     * are validated.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @param predicate  the predicate to use for validation, must not be null\n     * @return a new predicated SortedBag\n     * @throws NullPointerException if bag or predicate is null\n     * @throws IllegalArgumentException if the bag contains invalid elements\n     * @since 4.0\n     */",
  "methodSourceCode" : "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate){\n    return new PredicatedSortedBag<E>(bag, predicate);\n}",
  "classJavadoc" : "/**\n * Decorates another {@link SortedBag} to validate that additions\n * match a specified predicate.\n * <p>\n * This bag exists to provide validation for the decorated bag.\n * It is normally created to decorate an empty bag.\n * If an object cannot be added to the bag, an {@link IllegalArgumentException} is thrown.\n * <p>\n * One usage would be to ensure that no null entries are added to the bag.\n * <pre>\n * SortedBag bag = PredicatedSortedBag.predicatedSortedBag(new TreeBag(), NotNullPredicate.INSTANCE);\n * </pre>\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n *\n * @since 3.0\n * @version $Id: PredicatedSortedBag.java 1686855 2015-06-22 13:00:27Z tn $\n */",
  "classSourceCode" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.collections4.bag;\n\nimport java.util.Comparator;\n\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.SortedBag;\n\n/**\n * Decorates another {@link SortedBag} to validate that additions\n * match a specified predicate.\n * <p>\n * This bag exists to provide validation for the decorated bag.\n * It is normally created to decorate an empty bag.\n * If an object cannot be added to the bag, an {@link IllegalArgumentException} is thrown.\n * <p>\n * One usage would be to ensure that no null entries are added to the bag.\n * <pre>\n * SortedBag bag = PredicatedSortedBag.predicatedSortedBag(new TreeBag(), NotNullPredicate.INSTANCE);\n * </pre>\n * <p>\n * This class is Serializable from Commons Collections 3.1.\n *\n * @since 3.0\n * @version $Id: PredicatedSortedBag.java 1686855 2015-06-22 13:00:27Z tn $\n */\npublic class PredicatedSortedBag<E> extends PredicatedBag<E> implements SortedBag<E> {\n\n    /** Serialization version */\n    private static final long serialVersionUID = 3448581314086406616L;\n\n    /**\n     * Factory method to create a predicated (validating) bag.\n     * <p>\n     * If there are any elements already in the bag being decorated, they\n     * are validated.\n     *\n     * @param <E> the type of the elements in the bag\n     * @param bag  the bag to decorate, must not be null\n     * @param predicate  the predicate to use for validation, must not be null\n     * @return a new predicated SortedBag\n     * @throws NullPointerException if bag or predicate is null\n     * @throws IllegalArgumentException if the bag contains invalid elements\n     * @since 4.0\n     */\n    public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag,\n                                                                 final Predicate<? super E> predicate) {\n        return new PredicatedSortedBag<E>(bag, predicate);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor that wraps (not copies).\n     * <p>If there are any elements already in the bag being decorated, they\n     * are validated.\n     *\n     * @param bag  the bag to decorate, must not be null\n     * @param predicate  the predicate to use for validation, must not be null\n     * @throws NullPointerException if bag or predicate is null\n     * @throws IllegalArgumentException if the bag contains invalid elements\n     */\n    protected PredicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate) {\n        super(bag, predicate);\n    }\n\n    /**\n     * Gets the decorated sorted bag.\n     *\n     * @return the decorated bag\n     */\n    @Override\n    protected SortedBag<E> decorated() {\n        return (SortedBag<E>) super.decorated();\n    }\n\n    //-----------------------------------------------------------------------\n\n    @Override\n    public E first() {\n        return decorated().first();\n    }\n\n    @Override\n    public E last() {\n        return decorated().last();\n    }\n\n    @Override\n    public Comparator<? super E> comparator() {\n        return decorated().comparator();\n    }\n\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "BidiMap", "org.apache.commons.collections4" ], [ "Equator", "org.apache.commons.collections4" ], [ "MultiSet", "org.apache.commons.collections4" ], [ "IteratorUtils", "org.apache.commons.collections4" ], [ "ComparatorUtils", "org.apache.commons.collections4" ], [ "FunctorException", "org.apache.commons.collections4" ], [ "AbstractDualBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractOrderedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualLinkedHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "UnmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap" ], [ "AbstractSortedBidiMapDecorator", "org.apache.commons.collections4.bidimap" ], [ "DualHashBidiMap", "org.apache.commons.collections4.bidimap" ], [ "DualTreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "TreeBidiMap", "org.apache.commons.collections4.bidimap" ], [ "MultiMapUtils", "org.apache.commons.collections4" ], [ "BoundedCollection", "org.apache.commons.collections4" ], [ "UnmodifiableBoundedCollection", "org.apache.commons.collections4.collection" ], [ "CompositeCollection", "org.apache.commons.collections4.collection" ], [ "TransformedCollection", "org.apache.commons.collections4.collection" ], [ "PredicatedCollection", "org.apache.commons.collections4.collection" ], [ "IndexedCollection", "org.apache.commons.collections4.collection" ], [ "SynchronizedCollection", "org.apache.commons.collections4.collection" ], [ "UnmodifiableCollection", "org.apache.commons.collections4.collection" ], [ "AbstractCollectionDecorator", "org.apache.commons.collections4.collection" ], [ "OrderedBidiMap", "org.apache.commons.collections4" ], [ "FactoryUtils", "org.apache.commons.collections4" ], [ "IterableGet", "org.apache.commons.collections4" ], [ "ListUtils", "org.apache.commons.collections4" ], [ "Closure", "org.apache.commons.collections4" ], [ "IterableSortedMap", "org.apache.commons.collections4" ], [ "MapUtils", "org.apache.commons.collections4" ], [ "Transformer", "org.apache.commons.collections4" ], [ "DefaultEquator", "org.apache.commons.collections4.functors" ], [ "StringValueTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateDecorator", "org.apache.commons.collections4.functors" ], [ "IfTransformer", "org.apache.commons.collections4.functors" ], [ "IdentityPredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionClosure", "org.apache.commons.collections4.functors" ], [ "NOPClosure", "org.apache.commons.collections4.functors" ], [ "ClosureTransformer", "org.apache.commons.collections4.functors" ], [ "FunctorUtils", "org.apache.commons.collections4.functors" ], [ "TransformerPredicate", "org.apache.commons.collections4.functors" ], [ "NullPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantTransformer", "org.apache.commons.collections4.functors" ], [ "PredicateTransformer", "org.apache.commons.collections4.functors" ], [ "WhileClosure", "org.apache.commons.collections4.functors" ], [ "ForClosure", "org.apache.commons.collections4.functors" ], [ "NullIsTruePredicate", "org.apache.commons.collections4.functors" ], [ "TransformedPredicate", "org.apache.commons.collections4.functors" ], [ "NonePredicate", "org.apache.commons.collections4.functors" ], [ "ExceptionTransformer", "org.apache.commons.collections4.functors" ], [ "SwitchTransformer", "org.apache.commons.collections4.functors" ], [ "TransformerClosure", "org.apache.commons.collections4.functors" ], [ "OrPredicate", "org.apache.commons.collections4.functors" ], [ "NOPTransformer", "org.apache.commons.collections4.functors" ], [ "MapTransformer", "org.apache.commons.collections4.functors" ], [ "ExceptionFactory", "org.apache.commons.collections4.functors" ], [ "ChainedClosure", "org.apache.commons.collections4.functors" ], [ "AndPredicate", "org.apache.commons.collections4.functors" ], [ "PrototypeFactory", "org.apache.commons.collections4.functors" ], [ "ExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AbstractQuantifierPredicate", "org.apache.commons.collections4.functors" ], [ "InstanceofPredicate", "org.apache.commons.collections4.functors" ], [ "InvokerTransformer", "org.apache.commons.collections4.functors" ], [ "FalsePredicate", "org.apache.commons.collections4.functors" ], [ "CloneTransformer", "org.apache.commons.collections4.functors" ], [ "NotPredicate", "org.apache.commons.collections4.functors" ], [ "ConstantFactory", "org.apache.commons.collections4.functors" ], [ "ChainedTransformer", "org.apache.commons.collections4.functors" ], [ "ComparatorPredicate", "org.apache.commons.collections4.functors" ], [ "CatchAndRethrowClosure", "org.apache.commons.collections4.functors" ], [ "AllPredicate", "org.apache.commons.collections4.functors" ], [ "NullIsFalsePredicate", "org.apache.commons.collections4.functors" ], [ "NullIsExceptionPredicate", "org.apache.commons.collections4.functors" ], [ "AnyPredicate", "org.apache.commons.collections4.functors" ], [ "TruePredicate", "org.apache.commons.collections4.functors" ], [ "FactoryTransformer", "org.apache.commons.collections4.functors" ], [ "NotNullPredicate", "org.apache.commons.collections4.functors" ], [ "SwitchClosure", "org.apache.commons.collections4.functors" ], [ "UniquePredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateTransformer", "org.apache.commons.collections4.functors" ], [ "OnePredicate", "org.apache.commons.collections4.functors" ], [ "EqualPredicate", "org.apache.commons.collections4.functors" ], [ "InstantiateFactory", "org.apache.commons.collections4.functors" ], [ "IfClosure", "org.apache.commons.collections4.functors" ], [ "ResettableListIterator", "org.apache.commons.collections4" ], [ "OrderedIterator", "org.apache.commons.collections4" ], [ "ComparatorChain", "org.apache.commons.collections4.comparators" ], [ "BooleanComparator", "org.apache.commons.collections4.comparators" ], [ "ReverseComparator", "org.apache.commons.collections4.comparators" ], [ "ComparableComparator", "org.apache.commons.collections4.comparators" ], [ "TransformingComparator", "org.apache.commons.collections4.comparators" ], [ "FixedOrderComparator", "org.apache.commons.collections4.comparators" ], [ "NullComparator", "org.apache.commons.collections4.comparators" ], [ "CollectionUtils", "org.apache.commons.collections4" ], [ "ListValuedMap", "org.apache.commons.collections4" ], [ "AbstractIterableGetMapDecorator", "org.apache.commons.collections4.splitmap" ], [ "TransformedSplitMap", "org.apache.commons.collections4.splitmap" ], [ "Factory", "org.apache.commons.collections4" ], [ "IterableUtils", "org.apache.commons.collections4" ], [ "Bag", "org.apache.commons.collections4" ], [ "Predicate", "org.apache.commons.collections4" ], [ "SortedBag", "org.apache.commons.collections4" ], [ "TrieUtils", "org.apache.commons.collections4" ], [ "ClosureUtils", "org.apache.commons.collections4" ], [ "PatriciaTrie", "org.apache.commons.collections4.trie" ], [ "UnmodifiableTrie", "org.apache.commons.collections4.trie" ], [ "KeyAnalyzer", "org.apache.commons.collections4.trie" ], [ "AbstractPatriciaTrie", "org.apache.commons.collections4.trie" ], [ "AbstractBitwiseTrie", "org.apache.commons.collections4.trie" ], [ "StringKeyAnalyzer", "org.apache.commons.collections4.trie.analyzer" ], [ "TransformedSortedMap", "org.apache.commons.collections4.map" ], [ "AbstractLinkedMap", "org.apache.commons.collections4.map" ], [ "Flat3Map", "org.apache.commons.collections4.map" ], [ "PredicatedMap", "org.apache.commons.collections4.map" ], [ "FixedSizeSortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableSortedMap", "org.apache.commons.collections4.map" ], [ "PredicatedSortedMap", "org.apache.commons.collections4.map" ], [ "DefaultedMap", "org.apache.commons.collections4.map" ], [ "ReferenceIdentityMap", "org.apache.commons.collections4.map" ], [ "AbstractSortedMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractInputCheckedMapDecorator", "org.apache.commons.collections4.map" ], [ "FixedSizeMap", "org.apache.commons.collections4.map" ], [ "LazySortedMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableOrderedMap", "org.apache.commons.collections4.map" ], [ "CaseInsensitiveMap", "org.apache.commons.collections4.map" ], [ "AbstractHashedMap", "org.apache.commons.collections4.map" ], [ "AbstractOrderedMapDecorator", "org.apache.commons.collections4.map" ], [ "UnmodifiableMap", "org.apache.commons.collections4.map" ], [ "EntrySetToMapIteratorAdapter", "org.apache.commons.collections4.map" ], [ "AbstractIterableMap", "org.apache.commons.collections4.map" ], [ "ListOrderedMap", "org.apache.commons.collections4.map" ], [ "LinkedMap", "org.apache.commons.collections4.map" ], [ "SingletonMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableEntrySet", "org.apache.commons.collections4.map" ], [ "StaticBucketMap", "org.apache.commons.collections4.map" ], [ "AbstractMapDecorator", "org.apache.commons.collections4.map" ], [ "AbstractReferenceMap", "org.apache.commons.collections4.map" ], [ "MultiKeyMap", "org.apache.commons.collections4.map" ], [ "HashedMap", "org.apache.commons.collections4.map" ], [ "LazyMap", "org.apache.commons.collections4.map" ], [ "PassiveExpiringMap", "org.apache.commons.collections4.map" ], [ "MultiValueMap", "org.apache.commons.collections4.map" ], [ "LRUMap", "org.apache.commons.collections4.map" ], [ "ReferenceMap", "org.apache.commons.collections4.map" ], [ "TransformedMap", "org.apache.commons.collections4.map" ], [ "CompositeMap", "org.apache.commons.collections4.map" ], [ "UnmodifiableMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiKey", "org.apache.commons.collections4.keyvalue" ], [ "DefaultMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "DefaultKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntryDecorator", "org.apache.commons.collections4.keyvalue" ], [ "AbstractKeyValue", "org.apache.commons.collections4.keyvalue" ], [ "TiedMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "AbstractMapEntry", "org.apache.commons.collections4.keyvalue" ], [ "MultiSetUtils", "org.apache.commons.collections4" ], [ "MapIterator", "org.apache.commons.collections4" ], [ "AbstractMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "UnmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "HashSetValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "TransformedMultiValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractSetValuedMap", "org.apache.commons.collections4.multimap" ], [ "AbstractListValuedMap", "org.apache.commons.collections4.multimap" ], [ "ArrayListValuedHashMap", "org.apache.commons.collections4.multimap" ], [ "AbstractMultiValuedMapDecorator", "org.apache.commons.collections4.multimap" ], [ "LazyList", "org.apache.commons.collections4.list" ], [ "AbstractSerializableListDecorator", "org.apache.commons.collections4.list" ], [ "TreeList", "org.apache.commons.collections4.list" ], [ "SetUniqueList", "org.apache.commons.collections4.list" ], [ "AbstractListDecorator", "org.apache.commons.collections4.list" ], [ "NodeCachingLinkedList", "org.apache.commons.collections4.list" ], [ "UnmodifiableList", "org.apache.commons.collections4.list" ], [ "FixedSizeList", "org.apache.commons.collections4.list" ], [ "TransformedList", "org.apache.commons.collections4.list" ], [ "GrowthList", "org.apache.commons.collections4.list" ], [ "AbstractLinkedList", "org.apache.commons.collections4.list" ], [ "CursorableLinkedList", "org.apache.commons.collections4.list" ], [ "PredicatedList", "org.apache.commons.collections4.list" ], [ "OrderedMap", "org.apache.commons.collections4" ], [ "AbstractQueueDecorator", "org.apache.commons.collections4.queue" ], [ "TransformedQueue", "org.apache.commons.collections4.queue" ], [ "UnmodifiableQueue", "org.apache.commons.collections4.queue" ], [ "CircularFifoQueue", "org.apache.commons.collections4.queue" ], [ "PredicatedQueue", "org.apache.commons.collections4.queue" ], [ "FluentIterable", "org.apache.commons.collections4" ], [ "TransformerUtils", "org.apache.commons.collections4" ], [ "PredicateUtils", "org.apache.commons.collections4" ], [ "ResettableIterator", "org.apache.commons.collections4" ], [ "MultiValuedMap", "org.apache.commons.collections4" ], [ "SetUtils", "org.apache.commons.collections4" ], [ "SortedBidiMap", "org.apache.commons.collections4" ], [ "ArrayStack", "org.apache.commons.collections4" ], [ "Put", "org.apache.commons.collections4" ], [ "OrderedMapIterator", "org.apache.commons.collections4" ], [ "TransformedSet", "org.apache.commons.collections4.set" ], [ "CompositeSet", "org.apache.commons.collections4.set" ], [ "TransformedNavigableSet", "org.apache.commons.collections4.set" ], [ "PredicatedNavigableSet", "org.apache.commons.collections4.set" ], [ "AbstractSetDecorator", "org.apache.commons.collections4.set" ], [ "ListOrderedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSet", "org.apache.commons.collections4.set" ], [ "AbstractSerializableSetDecorator", "org.apache.commons.collections4.set" ], [ "MapBackedSet", "org.apache.commons.collections4.set" ], [ "UnmodifiableSortedSet", "org.apache.commons.collections4.set" ], [ "PredicatedSortedSet", "org.apache.commons.collections4.set" ], [ "AbstractSortedSetDecorator", "org.apache.commons.collections4.set" ], [ "PredicatedSet", "org.apache.commons.collections4.set" ], [ "AbstractNavigableSetDecorator", "org.apache.commons.collections4.set" ], [ "UnmodifiableNavigableSet", "org.apache.commons.collections4.set" ], [ "TransformedSortedSet", "org.apache.commons.collections4.set" ], [ "IterableMap", "org.apache.commons.collections4" ], [ "EnumerationUtils", "org.apache.commons.collections4" ], [ "DeleteCommand", "org.apache.commons.collections4.sequence" ], [ "ReplacementsHandler", "org.apache.commons.collections4.sequence" ], [ "InsertCommand", "org.apache.commons.collections4.sequence" ], [ "SequencesComparator", "org.apache.commons.collections4.sequence" ], [ "ReplacementsFinder", "org.apache.commons.collections4.sequence" ], [ "KeepCommand", "org.apache.commons.collections4.sequence" ], [ "EditCommand", "org.apache.commons.collections4.sequence" ], [ "CommandVisitor", "org.apache.commons.collections4.sequence" ], [ "EditScript", "org.apache.commons.collections4.sequence" ], [ "QueueUtils", "org.apache.commons.collections4" ], [ "SetValuedMap", "org.apache.commons.collections4" ], [ "SynchronizedBag", "org.apache.commons.collections4.bag" ], [ "AbstractMapBag", "org.apache.commons.collections4.bag" ], [ "CollectionBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableBag", "org.apache.commons.collections4.bag" ], [ "PredicatedSortedBag", "org.apache.commons.collections4.bag" ], [ "UnmodifiableSortedBag", "org.apache.commons.collections4.bag" ], [ "HashBag", "org.apache.commons.collections4.bag" ], [ "AbstractBagDecorator", "org.apache.commons.collections4.bag" ], [ "TransformedSortedBag", "org.apache.commons.collections4.bag" ], [ "TreeBag", "org.apache.commons.collections4.bag" ], [ "PredicatedBag", "org.apache.commons.collections4.bag" ], [ "SynchronizedSortedBag", "org.apache.commons.collections4.bag" ], [ "CollectionSortedBag", "org.apache.commons.collections4.bag" ], [ "TransformedBag", "org.apache.commons.collections4.bag" ], [ "AbstractSortedBagDecorator", "org.apache.commons.collections4.bag" ], [ "HashMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSet", "org.apache.commons.collections4.multiset" ], [ "PredicatedMultiSet", "org.apache.commons.collections4.multiset" ], [ "AbstractMultiSetDecorator", "org.apache.commons.collections4.multiset" ], [ "AbstractMapMultiSet", "org.apache.commons.collections4.multiset" ], [ "UnmodifiableMultiSet", "org.apache.commons.collections4.multiset" ], [ "SynchronizedMultiSet", "org.apache.commons.collections4.multiset" ], [ "BagUtils", "org.apache.commons.collections4" ], [ "Unmodifiable", "org.apache.commons.collections4" ], [ "Get", "org.apache.commons.collections4" ], [ "Trie", "org.apache.commons.collections4" ], [ "MultiMap", "org.apache.commons.collections4" ], [ "KeyValue", "org.apache.commons.collections4" ], [ "IteratorChain", "org.apache.commons.collections4.iterators" ], [ "EmptyListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractListIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ZippingIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableIterator", "org.apache.commons.collections4.iterators" ], [ "CollatingIterator", "org.apache.commons.collections4.iterators" ], [ "UniqueFilterIterator", "org.apache.commons.collections4.iterators" ], [ "ReverseListIterator", "org.apache.commons.collections4.iterators" ], [ "BoundedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "TransformIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyIterator", "org.apache.commons.collections4.iterators" ], [ "NodeListIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "LazyIteratorChain", "org.apache.commons.collections4.iterators" ], [ "LoopingListIterator", "org.apache.commons.collections4.iterators" ], [ "PeekingIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectGraphIterator", "org.apache.commons.collections4.iterators" ], [ "ArrayIterator", "org.apache.commons.collections4.iterators" ], [ "PermutationIterator", "org.apache.commons.collections4.iterators" ], [ "SingletonListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayIterator", "org.apache.commons.collections4.iterators" ], [ "EnumerationIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorIterable", "org.apache.commons.collections4.iterators" ], [ "AbstractEmptyMapIterator", "org.apache.commons.collections4.iterators" ], [ "LoopingIterator", "org.apache.commons.collections4.iterators" ], [ "IteratorEnumeration", "org.apache.commons.collections4.iterators" ], [ "SingletonIterator", "org.apache.commons.collections4.iterators" ], [ "ListIteratorWrapper", "org.apache.commons.collections4.iterators" ], [ "SkippingIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "ObjectArrayListIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableListIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyOrderedMapIterator", "org.apache.commons.collections4.iterators" ], [ "UnmodifiableMapIterator", "org.apache.commons.collections4.iterators" ], [ "EmptyIterator", "org.apache.commons.collections4.iterators" ], [ "EntrySetMapIterator", "org.apache.commons.collections4.iterators" ], [ "PushbackIterator", "org.apache.commons.collections4.iterators" ], [ "FilterIterator", "org.apache.commons.collections4.iterators" ], [ "AbstractUntypedIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "AbstractOrderedMapIteratorDecorator", "org.apache.commons.collections4.iterators" ], [ "FilterListIterator", "org.apache.commons.collections4.iterators" ], [ "SplitMapUtils", "org.apache.commons.collections4" ], [ "BoundedMap", "org.apache.commons.collections4" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "emptyIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> emptyIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> emptyListIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "emptyMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "singletonIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> singletonIterator(final E object)" ], [ "singletonListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> singletonListIterator(final E object)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E... array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end)" ], [ "arrayIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> arrayIterator(final Object array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E... array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end)" ], [ "arrayListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long max)" ], [ "boundedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, long offset, long max)" ], [ "unmodifiableIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<E> iterator)" ], [ "unmodifiableListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator)" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Iterator<? extends E>... iterators)" ], [ "chainedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators)" ], [ "collatedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators)" ], [ "objectGraphIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <I, O> Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transform)" ], [ "filteredIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate)" ], [ "filteredListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate)" ], [ "loopingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableIterator<E> loopingIterator(final Collection<? extends E> coll)" ], [ "loopingListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ResettableListIterator<E> loopingListIterator(final List<E> list)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final NodeList nodeList)" ], [ "nodeListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static NodeListIterator nodeListIterator(final Node node)" ], [ "peekingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "pushbackIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "skippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> SkippingIterator<E> skippingIterator(final Iterator<E> iterator, long offset)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c)" ], [ "zippingIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration)" ], [ "asIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection)" ], [ "asEnumeration", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Enumeration<E> asEnumeration(final Iterator<? extends E> iterator)" ], [ "asIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asIterable(final Iterator<? extends E> iterator)" ], [ "asMultipleUseIterable", "org.apache.commons.collections4", "IteratorUtils", "public static <E> Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator)" ], [ "toListIterator", "org.apache.commons.collections4", "IteratorUtils", "public static <E> ListIterator<E> toListIterator(final Iterator<? extends E> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static Object[] toArray(final Iterator<?> iterator)" ], [ "toArray", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator)" ], [ "toList", "org.apache.commons.collections4", "IteratorUtils", "public static <E> List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize)" ], [ "getIterator", "org.apache.commons.collections4", "IteratorUtils", "public static Iterator<?> getIterator(final Object obj)" ], [ "forEachButLast", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E find(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IteratorUtils", "public static <E> int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IteratorUtils", "public static boolean isEmpty(final Iterator<?> iterator)" ], [ "contains", "org.apache.commons.collections4", "IteratorUtils", "public static <E> boolean contains(final Iterator<E> iterator, final Object object)" ], [ "get", "org.apache.commons.collections4", "IteratorUtils", "public static <E> E get(final Iterator<E> iterator, final int index)" ], [ "size", "org.apache.commons.collections4", "IteratorUtils", "public static int size(final Iterator<?> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IteratorUtils", "public static <E> String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "naturalComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E extends Comparable<? super E>> Comparator<E> naturalComparator()" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Comparator<E>... comparators)" ], [ "chainedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators)" ], [ "reversedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> reversedComparator(final Comparator<E> comparator)" ], [ "booleanComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static Comparator<Boolean> booleanComparator(final boolean trueFirst)" ], [ "nullLowComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator)" ], [ "nullHighComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator)" ], [ "transformedComparator", "org.apache.commons.collections4", "ComparatorUtils", "public static <I, O> Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer)" ], [ "min", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E min(final E o1, final E o2, Comparator<E> comparator)" ], [ "max", "org.apache.commons.collections4", "ComparatorUtils", "public static <E> E max(final E o1, final E o2, Comparator<E> comparator)" ], [ "unmodifiableBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableBidiMap", "public static <K, V> BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableOrderedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableOrderedBidiMap", "public static <K, V> OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map)" ], [ "unmodifiableSortedBidiMap", "org.apache.commons.collections4.bidimap", "UnmodifiableSortedBidiMap", "public static <K, V> SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map)" ], [ "emptyMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyMultiValuedMap()" ], [ "emptyIfNull", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MultiMapUtils", "public static boolean isEmpty(final MultiValuedMap<?, ?> map)" ], [ "getCollection", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsList", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsSet", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key)" ], [ "getValuesAsBag", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key)" ], [ "newListValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> ListValuedMap<K, V> newListValuedHashMap()" ], [ "newSetValuedHashMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> SetValuedMap<K, V> newSetValuedHashMap()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformedMultiValuedMap", "org.apache.commons.collections4", "MultiMapUtils", "public static <K, V> MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll)" ], [ "unmodifiableBoundedCollection", "org.apache.commons.collections4.collection", "UnmodifiableBoundedCollection", "public static <E> BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> coll)" ], [ "transformingCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedCollection", "org.apache.commons.collections4.collection", "TransformedCollection", "public static <E> TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "builder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> builder(final Predicate<? super E> predicate)" ], [ "notNullBuilder", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <E> Builder<E> notNullBuilder()" ], [ "predicatedCollection", "org.apache.commons.collections4.collection", "PredicatedCollection", "public static <T> PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate)" ], [ "uniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "nonUniqueIndexedCollection", "org.apache.commons.collections4.collection", "IndexedCollection", "public static <K, C> IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer)" ], [ "synchronizedCollection", "org.apache.commons.collections4.collection", "SynchronizedCollection", "public static <T> SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll)" ], [ "unmodifiableCollection", "org.apache.commons.collections4.collection", "UnmodifiableCollection", "public static <T> Collection<T> unmodifiableCollection(final Collection<? extends T> coll)" ], [ "exceptionFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> exceptionFactory()" ], [ "nullFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> nullFactory()" ], [ "constantFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "prototypeFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate)" ], [ "instantiateFactory", "org.apache.commons.collections4", "FactoryUtils", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "emptyIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> emptyIfNull(final List<T> list)" ], [ "defaultIfNull", "org.apache.commons.collections4", "ListUtils", "public static <T> List<T> defaultIfNull(final List<T> list, final List<T> defaultList)" ], [ "intersection", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> intersection(final List<? extends E> list1, final List<? extends E> list2)" ], [ "subtract", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> subtract(final List<E> list1, final List<? extends E> list2)" ], [ "sum", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> sum(final List<? extends E> list1, final List<? extends E> list2)" ], [ "union", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> union(final List<? extends E> list1, final List<? extends E> list2)" ], [ "select", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate)" ], [ "isEqualList", "org.apache.commons.collections4", "ListUtils", "public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2)" ], [ "hashCodeForList", "org.apache.commons.collections4", "ListUtils", "public static int hashCodeForList(final Collection<?> list)" ], [ "retainAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> retainAll(final Collection<E> collection, final Collection<?> retain)" ], [ "removeAll", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "synchronizedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> synchronizedList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "predicatedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> predicatedList(final List<E> list, final Predicate<E> predicate)" ], [ "transformedList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "lazyList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "fixedSizeList", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> fixedSizeList(final List<E> list)" ], [ "indexOf", "org.apache.commons.collections4", "ListUtils", "public static <E> int indexOf(final List<E> list, final Predicate<E> predicate)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static <E> List<E> longestCommonSubsequence(final List<E> a, final List<E> b, final Equator<? super E> equator)" ], [ "longestCommonSubsequence", "org.apache.commons.collections4", "ListUtils", "public static String longestCommonSubsequence(final CharSequence a, final CharSequence b)" ], [ "partition", "org.apache.commons.collections4", "ListUtils", "public static <T> List<List<T>> partition(final List<T> list, final int size)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<? super K, V> map, final K key)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key)" ], [ "getObject", "org.apache.commons.collections4", "MapUtils", "public static <K, V> V getObject(final Map<K, V> map, final K key, final V defaultValue)" ], [ "getString", "org.apache.commons.collections4", "MapUtils", "public static <K> String getString(final Map<? super K, ?> map, final K key, final String defaultValue)" ], [ "getBoolean", "org.apache.commons.collections4", "MapUtils", "public static <K> Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue)" ], [ "getNumber", "org.apache.commons.collections4", "MapUtils", "public static <K> Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue)" ], [ "getByte", "org.apache.commons.collections4", "MapUtils", "public static <K> Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue)" ], [ "getShort", "org.apache.commons.collections4", "MapUtils", "public static <K> Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue)" ], [ "getInteger", "org.apache.commons.collections4", "MapUtils", "public static <K> Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue)" ], [ "getLong", "org.apache.commons.collections4", "MapUtils", "public static <K> Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue)" ], [ "getFloat", "org.apache.commons.collections4", "MapUtils", "public static <K> Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue)" ], [ "getDouble", "org.apache.commons.collections4", "MapUtils", "public static <K> Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue)" ], [ "getMap", "org.apache.commons.collections4", "MapUtils", "public static <K> Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key)" ], [ "getBooleanValue", "org.apache.commons.collections4", "MapUtils", "public static <K> boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue)" ], [ "getByteValue", "org.apache.commons.collections4", "MapUtils", "public static <K> byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue)" ], [ "getShortValue", "org.apache.commons.collections4", "MapUtils", "public static <K> short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue)" ], [ "getIntValue", "org.apache.commons.collections4", "MapUtils", "public static <K> int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue)" ], [ "getLongValue", "org.apache.commons.collections4", "MapUtils", "public static <K> long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue)" ], [ "getFloatValue", "org.apache.commons.collections4", "MapUtils", "public static <K> float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue)" ], [ "getDoubleValue", "org.apache.commons.collections4", "MapUtils", "public static <K> double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue)" ], [ "toProperties", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Properties toProperties(final Map<K, V> map)" ], [ "toMap", "org.apache.commons.collections4", "MapUtils", "public static Map<String, Object> toMap(final ResourceBundle resourceBundle)" ], [ "invertMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<V, K> invertMap(final Map<K, V> map)" ], [ "putAll", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> putAll(final Map<K, V> map, final Object[] array)" ], [ "emptyIfNull", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> emptyIfNull(final Map<K, V> map)" ], [ "isEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isEmpty(final Map<?, ?> map)" ], [ "isNotEmpty", "org.apache.commons.collections4", "MapUtils", "public static boolean isNotEmpty(final Map<?, ?> map)" ], [ "synchronizedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> synchronizedMap(final Map<K, V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "predicatedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "orderedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> OrderedMap<K, V> orderedMap(final Map<K, V> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory)" ], [ "synchronizedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred)" ], [ "transformedSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory)" ], [ "iterableMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableMap<K, V> iterableMap(final Map<K, V> map)" ], [ "iterableSortedMap", "org.apache.commons.collections4", "MapUtils", "public static <K, V> IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap)" ], [ "defaultEquator", "org.apache.commons.collections4.functors", "DefaultEquator", "public static <T> DefaultEquator<T> defaultEquator()" ], [ "stringValueTransformer", "org.apache.commons.collections4.functors", "StringValueTransformer", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4.functors", "IfTransformer", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "identityPredicate", "org.apache.commons.collections4.functors", "IdentityPredicate", "public static <T> Predicate<T> identityPredicate(final T object)" ], [ "exceptionClosure", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4.functors", "NOPClosure", "public static <E> Closure<E> nopClosure()" ], [ "closureTransformer", "org.apache.commons.collections4.functors", "ClosureTransformer", "public static <T> Transformer<T, T> closureTransformer(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T>[] copy(final Predicate<? super T>... predicates)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<T> coerce(final Predicate<? super T> predicate)" ], [ "validate", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <E> Closure<E>[] copy(final Closure<? super E>... closures)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <T> Closure<T> coerce(final Closure<? super T> closure)" ], [ "copy", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers)" ], [ "coerce", "org.apache.commons.collections4.functors", "FunctorUtils", "static <I, O> Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer)" ], [ "transformerPredicate", "org.apache.commons.collections4.functors", "TransformerPredicate", "public static <T> Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullPredicate", "org.apache.commons.collections4.functors", "NullPredicate", "public static <T> Predicate<T> nullPredicate()" ], [ "nullTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "predicateTransformer", "org.apache.commons.collections4.functors", "PredicateTransformer", "public static <T> Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate)" ], [ "whileClosure", "org.apache.commons.collections4.functors", "WhileClosure", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop)" ], [ "forClosure", "org.apache.commons.collections4.functors", "ForClosure", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4.functors", "NullIsTruePredicate", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4.functors", "TransformedPredicate", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4.functors", "NonePredicate", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "exceptionTransformer", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4.functors", "SwitchTransformer", "public static <I, O> Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map)" ], [ "transformerClosure", "org.apache.commons.collections4.functors", "TransformerClosure", "public static <E> Closure<E> transformerClosure(final Transformer<? super E, ?> transformer)" ], [ "orPredicate", "org.apache.commons.collections4.functors", "OrPredicate", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nopTransformer", "org.apache.commons.collections4.functors", "NOPTransformer", "public static <T> Transformer<T, T> nopTransformer()" ], [ "mapTransformer", "org.apache.commons.collections4.functors", "MapTransformer", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "exceptionFactory", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static <T> Factory<T> exceptionFactory()" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4.functors", "ChainedClosure", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "andPredicate", "org.apache.commons.collections4.functors", "AndPredicate", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "prototypeFactory", "org.apache.commons.collections4.functors", "PrototypeFactory", "public static <T> Factory<T> prototypeFactory(final T prototype)" ], [ "exceptionPredicate", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static <T> Predicate<T> exceptionPredicate()" ], [ "instanceOfPredicate", "org.apache.commons.collections4.functors", "InstanceofPredicate", "public static Predicate<Object> instanceOfPredicate(final Class<?> type)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4.functors", "InvokerTransformer", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "falsePredicate", "org.apache.commons.collections4.functors", "FalsePredicate", "public static <T> Predicate<T> falsePredicate()" ], [ "cloneTransformer", "org.apache.commons.collections4.functors", "CloneTransformer", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "notPredicate", "org.apache.commons.collections4.functors", "NotPredicate", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "constantFactory", "org.apache.commons.collections4.functors", "ConstantFactory", "public static <T> Factory<T> constantFactory(final T constantToReturn)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4.functors", "ChainedTransformer", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator)" ], [ "comparatorPredicate", "org.apache.commons.collections4.functors", "ComparatorPredicate", "public static <T> Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4.functors", "AllPredicate", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4.functors", "NullIsFalsePredicate", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4.functors", "NullIsExceptionPredicate", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4.functors", "AnyPredicate", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "truePredicate", "org.apache.commons.collections4.functors", "TruePredicate", "public static <T> Predicate<T> truePredicate()" ], [ "factoryTransformer", "org.apache.commons.collections4.functors", "FactoryTransformer", "public static <I, O> Transformer<I, O> factoryTransformer(final Factory<? extends O> factory)" ], [ "notNullPredicate", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static <T> Predicate<T> notNullPredicate()" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4.functors", "SwitchClosure", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "uniquePredicate", "org.apache.commons.collections4.functors", "UniquePredicate", "public static <T> Predicate<T> uniquePredicate()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4.functors", "InstantiateTransformer", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4.functors", "OnePredicate", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object)" ], [ "equalPredicate", "org.apache.commons.collections4.functors", "EqualPredicate", "public static <T> Predicate<T> equalPredicate(final T object, final Equator<T> equator)" ], [ "instantiateFactory", "org.apache.commons.collections4.functors", "InstantiateFactory", "public static <T> Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4.functors", "IfClosure", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "getTrueFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getTrueFirstComparator()" ], [ "getFalseFirstComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator getFalseFirstComparator()" ], [ "booleanComparator", "org.apache.commons.collections4.comparators", "BooleanComparator", "public static BooleanComparator booleanComparator(final boolean trueFirst)" ], [ "comparableComparator", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static <E extends Comparable<? super E>> ComparableComparator<E> comparableComparator()" ], [ "emptyCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyCollection()" ], [ "emptyIfNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> Collection<T> emptyIfNull(final Collection<T> collection)" ], [ "union", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "intersection", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "disjunction", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b)" ], [ "subtract", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p)" ], [ "containsAll", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2)" ], [ "containsAny", "org.apache.commons.collections4", "CollectionUtils", "public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2)" ], [ "getCardinalityMap", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll)" ], [ "isSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isProperSubCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b)" ], [ "isEqualCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator)" ], [ "cardinality", "org.apache.commons.collections4", "CollectionUtils", "public static <O> int cardinality(final O obj, final Iterable<? super O> coll)" ], [ "find", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T find(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterable<T> collection, final C closure)" ], [ "forAllDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> C forAllDo(final Iterator<T> iterator, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterable<T> collection, final C closure)" ], [ "forAllButLastDo", "org.apache.commons.collections4", "CollectionUtils", "public static <T, C extends Closure<? super T>> T forAllButLastDo(final Iterator<T> iterator, final C closure)" ], [ "filter", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "filterInverse", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "CollectionUtils", "public static <C> int countMatches(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "exists", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean exists(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "select", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, R outputCollection, R rejectedCollection)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O> Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate)" ], [ "selectRejected", "org.apache.commons.collections4", "CollectionUtils", "public static <O, R extends Collection<? super O>> R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O> Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "collect", "org.apache.commons.collections4", "CollectionUtils", "public static <I, O, R extends Collection<? super O>> R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection)" ], [ "addIgnoreNull", "org.apache.commons.collections4", "CollectionUtils", "public static <T> boolean addIgnoreNull(final Collection<T> collection, final T object)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration)" ], [ "addAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> boolean addAll(final Collection<C> collection, final C[] elements)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterator<T> iterator, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static Object get(final Object object, final int index)" ], [ "get", "org.apache.commons.collections4", "CollectionUtils", "public static <K, V> Map.Entry<K, V> get(final Map<K, V> map, final int index)" ], [ "size", "org.apache.commons.collections4", "CollectionUtils", "public static int size(final Object object)" ], [ "sizeIsEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean sizeIsEmpty(final Object object)" ], [ "isEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isEmpty(final Collection<?> coll)" ], [ "isNotEmpty", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isNotEmpty(final Collection<?> coll)" ], [ "isFull", "org.apache.commons.collections4", "CollectionUtils", "public static boolean isFull(final Collection<? extends Object> coll)" ], [ "maxSize", "org.apache.commons.collections4", "CollectionUtils", "public static int maxSize(final Collection<? extends Object> coll)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(Iterable<? extends O> a, Iterable<? extends O> b)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O extends Comparable<? super O>> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c)" ], [ "collate", "org.apache.commons.collections4", "CollectionUtils", "public static <O> List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c, final boolean includeDuplicates)" ], [ "permutations", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<List<E>> permutations(final Collection<E> collection)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain)" ], [ "retainAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove)" ], [ "removeAll", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator)" ], [ "synchronizedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> synchronizedCollection(final Collection<C> collection)" ], [ "unmodifiableCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> unmodifiableCollection(final Collection<? extends C> collection)" ], [ "predicatedCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <C> Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate)" ], [ "transformingCollection", "org.apache.commons.collections4", "CollectionUtils", "public static <E> Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer)" ], [ "extractSingleton", "org.apache.commons.collections4", "CollectionUtils", "public static <E> E extractSingleton(final Collection<E> collection)" ], [ "transformingMap", "org.apache.commons.collections4.splitmap", "TransformedSplitMap", "public static <J, K, U, V> TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer)" ], [ "emptyIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIterable()" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d)" ], [ "chainedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> chainedIterable(final Iterable<? extends E>... iterables)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "collatedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "filteredIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "boundedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize)" ], [ "loopingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> loopingIterable(final Iterable<E> iterable)" ], [ "reversedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> reversedIterable(final Iterable<E> iterable)" ], [ "skippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip)" ], [ "transformedIterable", "org.apache.commons.collections4", "IterableUtils", "public static <I, O> Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer)" ], [ "uniqueIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> uniqueIterable(final Iterable<E> iterable)" ], [ "unmodifiableIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> unmodifiableIterable(final Iterable<E> iterable)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b)" ], [ "zippingIterable", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others)" ], [ "emptyIfNull", "org.apache.commons.collections4", "IterableUtils", "public static <E> Iterable<E> emptyIfNull(final Iterable<E> iterable)" ], [ "forEachButLast", "org.apache.commons.collections4", "IterableUtils", "public static <E> E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure)" ], [ "find", "org.apache.commons.collections4", "IterableUtils", "public static <E> E find(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "indexOf", "org.apache.commons.collections4", "IterableUtils", "public static <E> int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAll", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "matchesAny", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate)" ], [ "countMatches", "org.apache.commons.collections4", "IterableUtils", "public static <E> long countMatches(final Iterable<E> input, final Predicate<? super E> predicate)" ], [ "isEmpty", "org.apache.commons.collections4", "IterableUtils", "public static boolean isEmpty(final Iterable<?> iterable)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<E> iterable, final Object object)" ], [ "contains", "org.apache.commons.collections4", "IterableUtils", "public static <E> boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator)" ], [ "frequency", "org.apache.commons.collections4", "IterableUtils", "public static <E, T extends E> int frequency(final Iterable<E> iterable, final T obj)" ], [ "get", "org.apache.commons.collections4", "IterableUtils", "public static <T> T get(final Iterable<T> iterable, final int index)" ], [ "size", "org.apache.commons.collections4", "IterableUtils", "public static int size(final Iterable<?> iterable)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O> List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates)" ], [ "partition", "org.apache.commons.collections4", "IterableUtils", "public static <O, R extends Collection<O>> List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates)" ], [ "toList", "org.apache.commons.collections4", "IterableUtils", "public static <E> List<E> toList(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer)" ], [ "toString", "org.apache.commons.collections4", "IterableUtils", "public static <E> String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix)" ], [ "unmodifiableTrie", "org.apache.commons.collections4", "TrieUtils", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "exceptionClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> exceptionClosure()" ], [ "nopClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> nopClosure()" ], [ "asClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> asClosure(final Transformer<? super E, ?> transformer)" ], [ "forClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> forClosure(final int count, final Closure<? super E> closure)" ], [ "whileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure)" ], [ "doWhileClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName)" ], [ "invokerClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Closure<? super E>... closures)" ], [ "chainedClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure)" ], [ "ifClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure)" ], [ "switchClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures)" ], [ "switchMapClosure", "org.apache.commons.collections4", "ClosureUtils", "public static <E> Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures)" ], [ "unmodifiableTrie", "org.apache.commons.collections4.trie", "UnmodifiableTrie", "public static <K, V> Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie)" ], [ "isOutOfBoundsIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isOutOfBoundsIndex(final int bitIndex)" ], [ "isEqualBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isEqualBitKey(final int bitIndex)" ], [ "isNullBitKey", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isNullBitKey(final int bitIndex)" ], [ "isValidBitIndex", "org.apache.commons.collections4.trie", "KeyAnalyzer", "static boolean isValidBitIndex(final int bitIndex)" ], [ "isValidUplink", "org.apache.commons.collections4.trie", "AbstractPatriciaTrie", "static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from)" ], [ "compare", "org.apache.commons.collections4.trie", "AbstractBitwiseTrie", "static boolean compare(final Object a, final Object b)" ], [ "transformingSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedSortedMap", "org.apache.commons.collections4.map", "TransformedSortedMap", "public static <K, V> TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "predicatedMap", "org.apache.commons.collections4.map", "PredicatedMap", "public static <K, V> PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "fixedSizeSortedMap", "org.apache.commons.collections4.map", "FixedSizeSortedMap", "public static <K, V> FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map)" ], [ "unmodifiableSortedMap", "org.apache.commons.collections4.map", "UnmodifiableSortedMap", "public static <K, V> SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map)" ], [ "predicatedSortedMap", "org.apache.commons.collections4.map", "PredicatedSortedMap", "public static <K, V> PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "defaultedMap", "org.apache.commons.collections4.map", "DefaultedMap", "public static <K, V> Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer)" ], [ "fixedSizeMap", "org.apache.commons.collections4.map", "FixedSizeMap", "public static <K, V> FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory)" ], [ "lazySortedMap", "org.apache.commons.collections4.map", "LazySortedMap", "public static <K, V> LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "unmodifiableOrderedMap", "org.apache.commons.collections4.map", "UnmodifiableOrderedMap", "public static <K, V> OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map)" ], [ "unmodifiableMap", "org.apache.commons.collections4.map", "UnmodifiableMap", "public static <K, V> Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map)" ], [ "listOrderedMap", "org.apache.commons.collections4.map", "ListOrderedMap", "public static <K, V> ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map)" ], [ "unmodifiableEntrySet", "org.apache.commons.collections4.map", "UnmodifiableEntrySet", "public static <K, V> Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set)" ], [ "resolve", "org.apache.commons.collections4.map", "AbstractReferenceMap", "public static ReferenceStrength resolve(final int value)" ], [ "resolve", "org.apache.commons.collections4.map", "ReferenceStrength", "public static ReferenceStrength resolve(final int value)" ], [ "multiKeyMap", "org.apache.commons.collections4.map", "MultiKeyMap", "public static <K, V> MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <K, V> LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory)" ], [ "lazyMap", "org.apache.commons.collections4.map", "LazyMap", "public static <V, K> LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass)" ], [ "multiValueMap", "org.apache.commons.collections4.map", "MultiValueMap", "public static <K, V, C extends Collection<V>> MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory)" ], [ "transformingMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.map", "TransformedMap", "public static <K, V> TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "predicatedMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "emptyMultiSet", "org.apache.commons.collections4", "MultiSetUtils", "public static <E> MultiSet<E> emptyMultiSet()" ], [ "unmodifiableMultiValuedMap", "org.apache.commons.collections4.multimap", "UnmodifiableMultiValuedMap", "public static <K, V> UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V> map)" ], [ "transformingMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "transformedMap", "org.apache.commons.collections4.multimap", "TransformedMultiValuedMap", "public static <K, V> TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer)" ], [ "lazyList", "org.apache.commons.collections4.list", "LazyList", "public static <E> LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory)" ], [ "setUniqueList", "org.apache.commons.collections4.list", "SetUniqueList", "public static <E> SetUniqueList<E> setUniqueList(final List<E> list)" ], [ "unmodifiableList", "org.apache.commons.collections4.list", "UnmodifiableList", "public static <E> List<E> unmodifiableList(final List<? extends E> list)" ], [ "fixedSizeList", "org.apache.commons.collections4.list", "FixedSizeList", "public static <E> FixedSizeList<E> fixedSizeList(final List<E> list)" ], [ "transformingList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedList", "org.apache.commons.collections4.list", "TransformedList", "public static <E> TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer)" ], [ "growthList", "org.apache.commons.collections4.list", "GrowthList", "public static <E> GrowthList<E> growthList(final List<E> list)" ], [ "predicatedList", "org.apache.commons.collections4.list", "PredicatedList", "public static <T> PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedQueue", "org.apache.commons.collections4.queue", "TransformedQueue", "public static <E> TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4.queue", "UnmodifiableQueue", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4.queue", "PredicatedQueue", "public static <E> PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate)" ], [ "empty", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> empty()" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T singleton)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final T... elements)" ], [ "of", "org.apache.commons.collections4", "FluentIterable", "public static <T> FluentIterable<T> of(final Iterable<T> iterable)" ], [ "exceptionTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> exceptionTransformer()" ], [ "nullTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> nullTransformer()" ], [ "nopTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> nopTransformer()" ], [ "cloneTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> cloneTransformer()" ], [ "constantTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> constantTransformer(final O constantToReturn)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> asTransformer(final Closure<? super T> closure)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate)" ], [ "asTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> asTransformer(final Factory<? extends O> factory)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers)" ], [ "chainedTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer)" ], [ "ifTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer)" ], [ "switchTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers)" ], [ "switchMapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers)" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer()" ], [ "instantiateTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args)" ], [ "mapTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName)" ], [ "invokerTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <I, O> Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "stringValueTransformer", "org.apache.commons.collections4", "TransformerUtils", "public static <T> Transformer<T, String> stringValueTransformer()" ], [ "exceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> exceptionPredicate()" ], [ "truePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> truePredicate()" ], [ "falsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> falsePredicate()" ], [ "nullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullPredicate()" ], [ "notNullPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notNullPredicate()" ], [ "equalPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> equalPredicate(final T value)" ], [ "identityPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> identityPredicate(final T value)" ], [ "instanceofPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static Predicate<Object> instanceofPredicate(final Class<?> type)" ], [ "uniquePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> uniquePredicate()" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName)" ], [ "invokerPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args)" ], [ "andPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Predicate<? super T>... predicates)" ], [ "allPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "orPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Predicate<? super T>... predicates)" ], [ "anyPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "eitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Predicate<? super T>... predicates)" ], [ "onePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "neitherPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Predicate<? super T>... predicates)" ], [ "nonePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates)" ], [ "notPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> notPredicate(final Predicate<? super T> predicate)" ], [ "asPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer)" ], [ "nullIsExceptionPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate)" ], [ "nullIsFalsePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate)" ], [ "nullIsTruePredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate)" ], [ "transformedPredicate", "org.apache.commons.collections4", "PredicateUtils", "public static <T> Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate)" ], [ "emptySet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> emptySet()" ], [ "emptySortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> emptySortedSet()" ], [ "emptyIfNull", "org.apache.commons.collections4", "SetUtils", "public static <T> Set<T> emptyIfNull(final Set<T> set)" ], [ "isEqualSet", "org.apache.commons.collections4", "SetUtils", "public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2)" ], [ "hashCodeForSet", "org.apache.commons.collections4", "SetUtils", "public static <T> int hashCodeForSet(final Collection<T> set)" ], [ "newIdentityHashSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> newIdentityHashSet()" ], [ "synchronizedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> synchronizedSet(final Set<E> set)" ], [ "unmodifiableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "predicatedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "transformedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "orderedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> Set<E> orderedSet(final Set<E> set)" ], [ "synchronizedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> synchronizedSortedSet(final SortedSet<E> set)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedSortedSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "transformedNavigableSet", "org.apache.commons.collections4", "SetUtils", "public static <E> SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "union", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> union(final Set<? extends E> a, final Set<? extends E> b)" ], [ "difference", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> difference(final Set<? extends E> a, final Set<? extends E> b)" ], [ "intersection", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> intersection(final Set<? extends E> a, final Set<? extends E> b)" ], [ "disjunction", "org.apache.commons.collections4", "SetUtils", "public static <E> SetView<E> disjunction(final Set<? extends E> a, final Set<? extends E> b)" ], [ "transformingSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSet", "org.apache.commons.collections4.set", "TransformedSet", "public static <E> Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformingNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedNavigableSet", "org.apache.commons.collections4.set", "TransformedNavigableSet", "public static <E> TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedNavigableSet", "org.apache.commons.collections4.set", "PredicatedNavigableSet", "public static <E> PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final Set<E> set)" ], [ "listOrderedSet", "org.apache.commons.collections4.set", "ListOrderedSet", "public static <E> ListOrderedSet<E> listOrderedSet(final List<E> list)" ], [ "unmodifiableSet", "org.apache.commons.collections4.set", "UnmodifiableSet", "public static <E> Set<E> unmodifiableSet(final Set<? extends E> set)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map)" ], [ "mapBackedSet", "org.apache.commons.collections4.set", "MapBackedSet", "public static <E, V> MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue)" ], [ "unmodifiableSortedSet", "org.apache.commons.collections4.set", "UnmodifiableSortedSet", "public static <E> SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set)" ], [ "predicatedSortedSet", "org.apache.commons.collections4.set", "PredicatedSortedSet", "public static <E> PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate)" ], [ "predicatedSet", "org.apache.commons.collections4.set", "PredicatedSet", "public static <E> PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate)" ], [ "unmodifiableNavigableSet", "org.apache.commons.collections4.set", "UnmodifiableNavigableSet", "public static <E> NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set)" ], [ "transformingSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedSet", "org.apache.commons.collections4.set", "TransformedSortedSet", "public static <E> TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer)" ], [ "get", "org.apache.commons.collections4", "EnumerationUtils", "public static <T> T get(final Enumeration<T> e, final int index)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static <E> List<E> toList(final Enumeration<? extends E> enumeration)" ], [ "toList", "org.apache.commons.collections4", "EnumerationUtils", "public static List<String> toList(final StringTokenizer stringTokenizer)" ], [ "unmodifiableQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> unmodifiableQueue(final Queue<? extends E> queue)" ], [ "predicatedQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate)" ], [ "transformingQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyQueue", "org.apache.commons.collections4", "QueueUtils", "public static <E> Queue<E> emptyQueue()" ], [ "synchronizedBag", "org.apache.commons.collections4.bag", "SynchronizedBag", "public static <E> SynchronizedBag<E> synchronizedBag(final Bag<E> bag)" ], [ "collectionBag", "org.apache.commons.collections4.bag", "CollectionBag", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4.bag", "UnmodifiableBag", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public static <E> PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4.bag", "UnmodifiableSortedBag", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "transformingSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedSortedBag", "org.apache.commons.collections4.bag", "TransformedSortedBag", "public static <E> TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedBag", "org.apache.commons.collections4.bag", "PredicatedBag", "public static <E> PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4.bag", "SynchronizedSortedBag", "public static <E> SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "collectionSortedBag", "org.apache.commons.collections4.bag", "CollectionSortedBag", "public static <E> SortedBag<E> collectionSortedBag(final SortedBag<E> bag)" ], [ "transformingBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "transformedBag", "org.apache.commons.collections4.bag", "TransformedBag", "public static <E> Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "predicatedMultiSet", "org.apache.commons.collections4.multiset", "PredicatedMultiSet", "public static <E> PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate)" ], [ "unmodifiableMultiSet", "org.apache.commons.collections4.multiset", "UnmodifiableMultiSet", "public static <E> MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset)" ], [ "synchronizedMultiSet", "org.apache.commons.collections4.multiset", "SynchronizedMultiSet", "public static <E> SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset)" ], [ "synchronizedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> synchronizedBag(final Bag<E> bag)" ], [ "unmodifiableBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> unmodifiableBag(final Bag<? extends E> bag)" ], [ "predicatedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "collectionBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> collectionBag(final Bag<E> bag)" ], [ "synchronizedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag)" ], [ "unmodifiableSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag)" ], [ "predicatedSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate)" ], [ "transformingSortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer)" ], [ "emptyBag", "org.apache.commons.collections4", "BagUtils", "public static <E> Bag<E> emptyBag()" ], [ "emptySortedBag", "org.apache.commons.collections4", "BagUtils", "public static <E> SortedBag<E> emptySortedBag()" ], [ "resettableEmptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ResettableListIterator<E> resettableEmptyListIterator()" ], [ "emptyListIterator", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static <E> ListIterator<E> emptyListIterator()" ], [ "unmodifiableOrderedMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator)" ], [ "unmodifiableIterator", "org.apache.commons.collections4.iterators", "UnmodifiableIterator", "public static <E> Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator)" ], [ "peekingIterator", "org.apache.commons.collections4.iterators", "PeekingIterator", "public static <E> PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator)" ], [ "emptyMapIterator", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static <K, V> MapIterator<K, V> emptyMapIterator()" ], [ "emptyOrderedIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static <E> OrderedIterator<E> emptyOrderedIterator()" ], [ "umodifiableListIterator", "org.apache.commons.collections4.iterators", "UnmodifiableListIterator", "public static <E> ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator)" ], [ "emptyOrderedMapIterator", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static <K, V> OrderedMapIterator<K, V> emptyOrderedMapIterator()" ], [ "unmodifiableMapIterator", "org.apache.commons.collections4.iterators", "UnmodifiableMapIterator", "public static <K, V> MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator)" ], [ "resettableEmptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> ResettableIterator<E> resettableEmptyIterator()" ], [ "emptyIterator", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static <E> Iterator<E> emptyIterator()" ], [ "pushbackIterator", "org.apache.commons.collections4.iterators", "PushbackIterator", "public static <E> PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator)" ], [ "readableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> IterableMap<K, V> readableMap(final Get<K, V> get)" ], [ "writableMap", "org.apache.commons.collections4", "SplitMapUtils", "public static <K, V> Map<K, V> writableMap(final Put<K, V> put)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "EMPTY_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_LIST_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;" ], [ "EMPTY_ORDERED_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;" ], [ "EMPTY_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;" ], [ "EMPTY_ORDERED_MAP_ITERATOR", "org.apache.commons.collections4", "IteratorUtils", "public static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;" ], [ "NATURAL_COMPARATOR", "org.apache.commons.collections4", "ComparatorUtils", "public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();" ], [ "EMPTY_MULTI_VALUED_MAP", "org.apache.commons.collections4", "MultiMapUtils", "public static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));" ], [ "EMPTY_SORTED_MAP", "org.apache.commons.collections4", "MapUtils", "public static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<Object, Object>());" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final DefaultEquator INSTANCE = new DefaultEquator<Object>();" ], [ "HASHCODE_NULL", "org.apache.commons.collections4.functors", "DefaultEquator", "public static final int HASHCODE_NULL = -1;" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionClosure", "public static final Closure INSTANCE = new ExceptionClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPClosure", "public static final Closure INSTANCE = new NOPClosure<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NullPredicate", "public static final Predicate INSTANCE = new NullPredicate<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantTransformer", "public static final Transformer NULL_INSTANCE = new ConstantTransformer<Object, Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionTransformer", "public static final Transformer INSTANCE = new ExceptionTransformer<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NOPTransformer", "public static final Transformer INSTANCE = new NOPTransformer<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionFactory", "public static final Factory INSTANCE = new ExceptionFactory<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "ExceptionPredicate", "public static final Predicate INSTANCE = new ExceptionPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "FalsePredicate", "public static final Predicate INSTANCE = new FalsePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "CloneTransformer", "public static final Transformer INSTANCE = new CloneTransformer<Object>();" ], [ "NULL_INSTANCE", "org.apache.commons.collections4.functors", "ConstantFactory", "public static final Factory NULL_INSTANCE = new ConstantFactory<Object>(null);" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "TruePredicate", "public static final Predicate INSTANCE = new TruePredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.functors", "NotNullPredicate", "public static final Predicate INSTANCE = new NotNullPredicate<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.comparators", "ComparableComparator", "public static final ComparableComparator INSTANCE = new ComparableComparator();" ], [ "EMPTY_COLLECTION", "org.apache.commons.collections4", "CollectionUtils", "public static final Collection EMPTY_COLLECTION = UnmodifiableCollection.unmodifiableCollection(new ArrayList<Object>());" ], [ "EMPTY_ITERABLE", "org.apache.commons.collections4", "IterableUtils", "static final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};" ], [ "NULL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int NULL_BIT_KEY = -1;" ], [ "EQUAL_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int EQUAL_BIT_KEY = -2;" ], [ "OUT_OF_BOUNDS_BIT_KEY", "org.apache.commons.collections4.trie", "KeyAnalyzer", "public static final int OUT_OF_BOUNDS_BIT_KEY = -3;" ], [ "INSTANCE", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();" ], [ "LENGTH", "org.apache.commons.collections4.trie.analyzer", "StringKeyAnalyzer", "public static final int LENGTH = Character.SIZE;" ], [ "NO_NEXT_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_NEXT_ENTRY = \"No next() entry in the iteration\";" ], [ "NO_PREVIOUS_ENTRY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String NO_PREVIOUS_ENTRY = \"No previous() entry in the iteration\";" ], [ "REMOVE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String REMOVE_INVALID = \"remove() can only be called once after next()\";" ], [ "GETKEY_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETKEY_INVALID = \"getKey() can only be called after next() and before remove()\";" ], [ "GETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String GETVALUE_INVALID = \"getValue() can only be called after next() and before remove()\";" ], [ "SETVALUE_INVALID", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final String SETVALUE_INVALID = \"setValue() can only be called after next() and before remove()\";" ], [ "DEFAULT_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_CAPACITY = 16;" ], [ "DEFAULT_THRESHOLD", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int DEFAULT_THRESHOLD = 12;" ], [ "DEFAULT_LOAD_FACTOR", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final float DEFAULT_LOAD_FACTOR = 0.75f;" ], [ "MAXIMUM_CAPACITY", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "NULL", "org.apache.commons.collections4.map", "AbstractHashedMap", "protected static final Object NULL = new Object();" ], [ "DEFAULT_MAX_SIZE", "org.apache.commons.collections4.map", "LRUMap", "protected static final int DEFAULT_MAX_SIZE = 100;" ], [ "EMPTY_MULTISET", "org.apache.commons.collections4", "MultiSetUtils", "public static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<Object>());" ], [ "EMPTY_SORTED_SET", "org.apache.commons.collections4", "SetUtils", "public static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<Object>());" ], [ "EMPTY_QUEUE", "org.apache.commons.collections4", "QueueUtils", "public static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<Object>());" ], [ "EMPTY_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<Object>());" ], [ "EMPTY_SORTED_BAG", "org.apache.commons.collections4", "BagUtils", "public static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<Object>());" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyListIterator", "public static final ListIterator INSTANCE = RESETTABLE_INSTANCE;" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyMapIterator", "public static final MapIterator INSTANCE = new EmptyMapIterator<Object, Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedIterator", "public static final OrderedIterator INSTANCE = new EmptyOrderedIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyOrderedMapIterator", "public static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<Object, Object>();" ], [ "RESETTABLE_INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<Object>();" ], [ "INSTANCE", "org.apache.commons.collections4.iterators", "EmptyIterator", "public static final Iterator INSTANCE = RESETTABLE_INSTANCE;" ] ],
  "tokensMethodJavadocValues" : [ [ "4.0", "double" ] ],
  "tokensMethodArguments" : [ [ "bag", "org.apache.commons.collections4.SortedBag", "SortedBag<E>" ], [ "predicate", "org.apache.commons.collections4.Predicate", "Predicate<? super E>" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "hashCode", "org.apache.commons.collections4.bag", "PredicatedBag", "public int hashCode()" ], [ "stream", "java.util", "Collection", "public default Stream<E> stream()" ], [ "add", "org.apache.commons.collections4.bag", "PredicatedBag", "public boolean add(E arg0, int arg1)" ], [ "size", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public int size()" ], [ "isEmpty", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean isEmpty()" ], [ "decorated", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "protected Collection<E> decorated()" ], [ "remove", "org.apache.commons.collections4.bag", "PredicatedBag", "public boolean remove(Object arg0, int arg1)" ], [ "first", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public E first()" ], [ "spliterator", "java.util", "Collection", "public default Spliterator<E> spliterator()" ], [ "contains", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean contains(Object arg0)" ], [ "decorated", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "protected SortedBag<E> decorated()" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public <T> T[] toArray(T[] arg0)" ], [ "decorated", "org.apache.commons.collections4.bag", "PredicatedBag", "protected Bag<E> decorated()" ], [ "addAll", "org.apache.commons.collections4.collection", "PredicatedCollection", "public boolean addAll(Collection<? extends E> arg0)" ], [ "toArray", "java.util", "Collection", "public default <T> T[] toArray(IntFunction<T[]> arg0)" ], [ "remove", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean remove(Object arg0)" ], [ "removeAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeAll(Collection<?> arg0)" ], [ "retainAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean retainAll(Collection<?> arg0)" ], [ "comparator", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public Comparator<? super E> comparator()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "containsAll", "java.util", "Collection", "public abstract boolean containsAll(Collection<? extends Object> arg0)" ], [ "removeIf", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean removeIf(Predicate<? super E> arg0)" ], [ "uniqueSet", "org.apache.commons.collections4.bag", "PredicatedBag", "public Set<E> uniqueSet()" ], [ "iterator", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Iterator<E> iterator()" ], [ "equals", "org.apache.commons.collections4.bag", "PredicatedBag", "public boolean equals(Object arg0)" ], [ "removeAll", "java.util", "Collection", "public abstract boolean removeAll(Collection<? extends Object> arg0)" ], [ "iterator", "java.lang", "Iterable", "public abstract Iterator<T> iterator()" ], [ "getCount", "org.apache.commons.collections4.bag", "PredicatedBag", "public int getCount(Object arg0)" ], [ "toArray", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public Object[] toArray()" ], [ "add", "org.apache.commons.collections4.collection", "PredicatedCollection", "public boolean add(E arg0)" ], [ "last", "org.apache.commons.collections4.bag", "PredicatedSortedBag", "public E last()" ], [ "toString", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public String toString()" ], [ "spliterator", "java.lang", "Iterable", "public default Spliterator<T> spliterator()" ], [ "containsAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean containsAll(Collection<?> arg0)" ], [ "parallelStream", "java.util", "Collection", "public default Stream<E> parallelStream()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "retainAll", "java.util", "Collection", "public abstract boolean retainAll(Collection<? extends Object> arg0)" ], [ "first", "org.apache.commons.collections4", "SortedBag", "public abstract E first()" ], [ "last", "org.apache.commons.collections4", "SortedBag", "public abstract E last()" ], [ "comparator", "org.apache.commons.collections4", "SortedBag", "public abstract Comparator<? super E> comparator()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "getCount", "org.apache.commons.collections4", "Bag", "public abstract int getCount(Object arg0)" ], [ "containsAll", "org.apache.commons.collections4", "Bag", "public abstract boolean containsAll(Collection<?> arg0)" ], [ "retainAll", "org.apache.commons.collections4", "Bag", "public abstract boolean retainAll(Collection<?> arg0)" ], [ "remove", "org.apache.commons.collections4", "Bag", "public abstract boolean remove(Object arg0, int arg1)" ], [ "size", "org.apache.commons.collections4", "Bag", "public abstract int size()" ], [ "add", "org.apache.commons.collections4", "Bag", "public abstract boolean add(E arg0)" ], [ "removeAll", "org.apache.commons.collections4", "Bag", "public abstract boolean removeAll(Collection<?> arg0)" ], [ "add", "org.apache.commons.collections4", "Bag", "public abstract boolean add(E arg0, int arg1)" ], [ "iterator", "org.apache.commons.collections4", "Bag", "public abstract Iterator<E> iterator()" ], [ "remove", "org.apache.commons.collections4", "Bag", "public abstract boolean remove(Object arg0)" ], [ "uniqueSet", "org.apache.commons.collections4", "Bag", "public abstract Set<E> uniqueSet()" ], [ "contains", "java.util", "Collection", "public abstract boolean contains(Object arg0)" ], [ "removeIf", "java.util", "Collection", "public default boolean removeIf(Predicate<? super E> arg0)" ], [ "hashCode", "java.util", "Collection", "public abstract int hashCode()" ], [ "remove", "java.util", "Collection", "public abstract boolean remove(Object arg0)" ], [ "iterator", "java.util", "Collection", "public abstract Iterator<E> iterator()" ], [ "toArray", "java.util", "Collection", "public abstract <T> T[] toArray(T[] arg0)" ], [ "equals", "java.util", "Collection", "public abstract boolean equals(Object arg0)" ], [ "addAll", "java.util", "Collection", "public abstract boolean addAll(Collection<? extends E> arg0)" ], [ "add", "java.util", "Collection", "public abstract boolean add(E arg0)" ], [ "isEmpty", "java.util", "Collection", "public abstract boolean isEmpty()" ], [ "size", "java.util", "Collection", "public abstract int size()" ], [ "toArray", "java.util", "Collection", "public abstract Object[] toArray()" ], [ "evaluate", "org.apache.commons.collections4", "Predicate", "public abstract boolean evaluate(T arg0)" ], [ "add", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean add(E arg0)" ], [ "addAll", "org.apache.commons.collections4.collection", "AbstractCollectionDecorator", "public boolean addAll(Collection<? extends E> arg0)" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "predicate", "org.apache.commons.collections4.collection", "PredicatedCollection", "protected Predicate<? super E> predicate;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
} ]