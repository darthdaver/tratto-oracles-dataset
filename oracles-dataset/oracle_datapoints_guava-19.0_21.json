[ {
  "id" : 2112,
  "oracle" : "minLength >= 0;",
  "oracleType" : "PRE",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "Floats",
  "javadocTag" : "@param minLength the minimum length the returned array must guarantee",
  "methodJavadoc" : "    /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */",
  "methodSourceCode" : "public static float[] ensureCapacity(float[] array, int minLength, int padding){\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength) ? copyOf(array, minLength + padding) : array;\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code float} primitives, that are not\n * already found in either {@link Float} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2008 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkElementIndex;\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static com.google.common.base.Preconditions.checkPositionIndexes;\nimport static java.lang.Float.NEGATIVE_INFINITY;\nimport static java.lang.Float.POSITIVE_INFINITY;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\nimport com.google.common.annotations.GwtIncompatible;\nimport com.google.common.base.Converter;\n\nimport java.io.Serializable;\nimport java.util.AbstractList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.RandomAccess;\n\nimport javax.annotation.CheckForNull;\nimport javax.annotation.CheckReturnValue;\nimport javax.annotation.Nullable;\n\n/**\n * Static utility methods pertaining to {@code float} primitives, that are not\n * already found in either {@link Float} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */\n@CheckReturnValue\n@GwtCompatible(emulated = true)\npublic final class Floats {\n  private Floats() {}\n\n  /**\n   * The number of bytes required to represent a primitive {@code float}\n   * value.\n   *\n   * @since 10.0\n   */\n  public static final int BYTES = Float.SIZE / Byte.SIZE;\n\n  /**\n   * Returns a hash code for {@code value}; equal to the result of invoking\n   * {@code ((Float) value).hashCode()}.\n   *\n   * @param value a primitive {@code float} value\n   * @return a hash code for the value\n   */\n  public static int hashCode(float value) {\n    // TODO(kevinb): is there a better way, that's still gwt-safe?\n    return ((Float) value).hashCode();\n  }\n\n  /**\n   * Compares the two specified {@code float} values using {@link\n   * Float#compare(float, float)}. You may prefer to invoke that method\n   * directly; this method exists only for consistency with the other utilities\n   * in this package.\n   *\n   * <p><b>Note:</b> this method simply delegates to the JDK method {@link\n   * Float#compare}. It is provided for consistency with the other primitive\n   * types, whose compare methods were not added to the JDK until JDK 7.\n   *\n   * @param a the first {@code float} to compare\n   * @param b the second {@code float} to compare\n   * @return the result of invoking {@link Float#compare(float, float)}\n   */\n  public static int compare(float a, float b) {\n    return Float.compare(a, b);\n  }\n\n  /**\n   * Returns {@code true} if {@code value} represents a real number. This is\n   * equivalent to, but not necessarily implemented as,\n   * {@code !(Float.isInfinite(value) || Float.isNaN(value))}.\n   *\n   * @since 10.0\n   */\n  public static boolean isFinite(float value) {\n    return NEGATIVE_INFINITY < value & value < POSITIVE_INFINITY;\n  }\n\n  /**\n   * Returns {@code true} if {@code target} is present as an element anywhere in\n   * {@code array}. Note that this always returns {@code false} when {@code\n   * target} is {@code NaN}.\n   *\n   * @param array an array of {@code float} values, possibly empty\n   * @param target a primitive {@code float} value\n   * @return {@code true} if {@code array[i] == target} for some value of {@code\n   *     i}\n   */\n  public static boolean contains(float[] array, float target) {\n    for (float value : array) {\n      if (value == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the index of the first appearance of the value {@code target} in\n   * {@code array}. Note that this always returns {@code -1} when {@code target}\n   * is {@code NaN}.\n   *\n   * @param array an array of {@code float} values, possibly empty\n   * @param target a primitive {@code float} value\n   * @return the least index {@code i} for which {@code array[i] == target}, or\n   *     {@code -1} if no such index exists.\n   */\n  public static int indexOf(float[] array, float target) {\n    return indexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int indexOf(float[] array, float target, int start, int end) {\n    for (int i = start; i < end; i++) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the start position of the first occurrence of the specified {@code\n   * target} within {@code array}, or {@code -1} if there is no such occurrence.\n   *\n   * <p>More formally, returns the lowest index {@code i} such that {@code\n   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n   * the same elements as {@code target}.\n   *\n   * <p>Note that this always returns {@code -1} when {@code target} contains\n   * {@code NaN}.\n   *\n   * @param array the array to search for the sequence {@code target}\n   * @param target the array to search for as a sub-sequence of {@code array}\n   */\n  public static int indexOf(float[] array, float[] target) {\n    checkNotNull(array, \"array\");\n    checkNotNull(target, \"target\");\n    if (target.length == 0) {\n      return 0;\n    }\n\n    outer:\n    for (int i = 0; i < array.length - target.length + 1; i++) {\n      for (int j = 0; j < target.length; j++) {\n        if (array[i + j] != target[j]) {\n          continue outer;\n        }\n      }\n      return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the index of the last appearance of the value {@code target} in\n   * {@code array}. Note that this always returns {@code -1} when {@code target}\n   * is {@code NaN}.\n   *\n   * @param array an array of {@code float} values, possibly empty\n   * @param target a primitive {@code float} value\n   * @return the greatest index {@code i} for which {@code array[i] == target},\n   *     or {@code -1} if no such index exists.\n   */\n  public static int lastIndexOf(float[] array, float target) {\n    return lastIndexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int lastIndexOf(float[] array, float target, int start, int end) {\n    for (int i = end - 1; i >= start; i--) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the least value present in {@code array}, using the same rules of\n   * comparison as {@link Math#min(float, float)}.\n   *\n   * @param array a <i>nonempty</i> array of {@code float} values\n   * @return the value present in {@code array} that is less than or equal to\n   *     every other value in the array\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  public static float min(float... array) {\n    checkArgument(array.length > 0);\n    float min = array[0];\n    for (int i = 1; i < array.length; i++) {\n      min = Math.min(min, array[i]);\n    }\n    return min;\n  }\n\n  /**\n   * Returns the greatest value present in {@code array}, using the same rules\n   * of comparison as {@link Math#max(float, float)}.\n   *\n   * @param array a <i>nonempty</i> array of {@code float} values\n   * @return the value present in {@code array} that is greater than or equal to\n   *     every other value in the array\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  public static float max(float... array) {\n    checkArgument(array.length > 0);\n    float max = array[0];\n    for (int i = 1; i < array.length; i++) {\n      max = Math.max(max, array[i]);\n    }\n    return max;\n  }\n\n  /**\n   * Returns the values from each provided array combined into a single array.\n   * For example, {@code concat(new float[] {a, b}, new float[] {}, new\n   * float[] {c}} returns the array {@code {a, b, c}}.\n   *\n   * @param arrays zero or more {@code float} arrays\n   * @return a single array containing all the values from the source arrays, in\n   *     order\n   */\n  public static float[] concat(float[]... arrays) {\n    int length = 0;\n    for (float[] array : arrays) {\n      length += array.length;\n    }\n    float[] result = new float[length];\n    int pos = 0;\n    for (float[] array : arrays) {\n      System.arraycopy(array, 0, result, pos, array.length);\n      pos += array.length;\n    }\n    return result;\n  }\n\n  private static final class FloatConverter extends Converter<String, Float>\n      implements Serializable {\n    static final FloatConverter INSTANCE = new FloatConverter();\n\n    @Override\n    protected Float doForward(String value) {\n      return Float.valueOf(value);\n    }\n\n    @Override\n    protected String doBackward(Float value) {\n      return value.toString();\n    }\n\n    @Override\n    public String toString() {\n      return \"Floats.stringConverter()\";\n    }\n\n    private Object readResolve() {\n      return INSTANCE;\n    }\n\n    private static final long serialVersionUID = 1;\n  }\n\n  /**\n   * Returns a serializable converter object that converts between strings and\n   * floats using {@link Float#valueOf} and {@link Float#toString()}.\n   *\n   * @since 16.0\n   */\n  @Beta\n  public static Converter<String, Float> stringConverter() {\n    return FloatConverter.INSTANCE;\n  }\n\n  /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */\n  public static float[] ensureCapacity(float[] array, int minLength, int padding) {\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength)\n        ? copyOf(array, minLength + padding)\n        : array;\n  }\n\n  // Arrays.copyOf() requires Java 6\n  private static float[] copyOf(float[] original, int length) {\n    float[] copy = new float[length];\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, length));\n    return copy;\n  }\n\n  /**\n   * Returns a string containing the supplied {@code float} values, converted\n   * to strings as specified by {@link Float#toString(float)}, and separated by\n   * {@code separator}. For example, {@code join(\"-\", 1.0f, 2.0f, 3.0f)}\n   * returns the string {@code \"1.0-2.0-3.0\"}.\n   *\n   * <p>Note that {@link Float#toString(float)} formats {@code float}\n   * differently in GWT.  In the previous example, it returns the string {@code\n   * \"1-2-3\"}.\n   *\n   * @param separator the text that should appear between consecutive values in\n   *     the resulting string (but not at the start or end)\n   * @param array an array of {@code float} values, possibly empty\n   */\n  public static String join(String separator, float... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 12);\n    builder.append(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(array[i]);\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two {@code float} arrays\n   * lexicographically. That is, it compares, using {@link\n   * #compare(float, float)}), the first pair of values that follow any\n   * common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example, {@code [] < [1.0f] < [1.0f, 2.0f]\n   * < [2.0f]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link\n   * Object#equals(Object)} (since arrays support only identity equality), but\n   * it is consistent with {@link Arrays#equals(float[], float[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">\n   *     Lexicographical order article at Wikipedia</a>\n   * @since 2.0\n   */\n  public static Comparator<float[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  private enum LexicographicalComparator implements Comparator<float[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(float[] left, float[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        int result = Float.compare(left[i], right[i]);\n        if (result != 0) {\n          return result;\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Returns an array containing each value of {@code collection}, converted to\n   * a {@code float} value in the manner of {@link Number#floatValue}.\n   *\n   * <p>Elements are copied from the argument collection as if by {@code\n   * collection.toArray()}.  Calling this method is as thread-safe as calling\n   * that method.\n   *\n   * @param collection a collection of {@code Number} instances\n   * @return an array containing the same values as {@code collection}, in the\n   *     same order, converted to primitives\n   * @throws NullPointerException if {@code collection} or any of its elements\n   *     is null\n   * @since 1.0 (parameter was {@code Collection<Float>} before 12.0)\n   */\n  public static float[] toArray(Collection<? extends Number> collection) {\n    if (collection instanceof FloatArrayAsList) {\n      return ((FloatArrayAsList) collection).toFloatArray();\n    }\n\n    Object[] boxedArray = collection.toArray();\n    int len = boxedArray.length;\n    float[] array = new float[len];\n    for (int i = 0; i < len; i++) {\n      // checkNotNull for GWT (do not optimize)\n      array[i] = ((Number) checkNotNull(boxedArray[i])).floatValue();\n    }\n    return array;\n  }\n\n  /**\n   * Returns a fixed-size list backed by the specified array, similar to {@link\n   * Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)},\n   * but any attempt to set a value to {@code null} will result in a {@link\n   * NullPointerException}.\n   *\n   * <p>The returned list maintains the values, but not the identities, of\n   * {@code Float} objects written to or read from it.  For example, whether\n   * {@code list.get(0) == list.get(0)} is true for the returned list is\n   * unspecified.\n   *\n   * <p>The returned list may have unexpected behavior if it contains {@code\n   * NaN}, or if {@code NaN} is used as a parameter to any of its methods.\n   *\n   * @param backingArray the array to back the list\n   * @return a list view of the array\n   */\n  public static List<Float> asList(float... backingArray) {\n    if (backingArray.length == 0) {\n      return Collections.emptyList();\n    }\n    return new FloatArrayAsList(backingArray);\n  }\n\n  @GwtCompatible\n  private static class FloatArrayAsList extends AbstractList<Float>\n      implements RandomAccess, Serializable {\n    final float[] array;\n    final int start;\n    final int end;\n\n    FloatArrayAsList(float[] array) {\n      this(array, 0, array.length);\n    }\n\n    FloatArrayAsList(float[] array, int start, int end) {\n      this.array = array;\n      this.start = start;\n      this.end = end;\n    }\n\n    @Override\n    public int size() {\n      return end - start;\n    }\n\n    @Override\n    public boolean isEmpty() {\n      return false;\n    }\n\n    @Override\n    public Float get(int index) {\n      checkElementIndex(index, size());\n      return array[start + index];\n    }\n\n    @Override\n    public boolean contains(Object target) {\n      // Overridden to prevent a ton of boxing\n      return (target instanceof Float) && Floats.indexOf(array, (Float) target, start, end) != -1;\n    }\n\n    @Override\n    public int indexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Float) {\n        int i = Floats.indexOf(array, (Float) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public int lastIndexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Float) {\n        int i = Floats.lastIndexOf(array, (Float) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public Float set(int index, Float element) {\n      checkElementIndex(index, size());\n      float oldValue = array[start + index];\n      // checkNotNull for GWT (do not optimize)\n      array[start + index] = checkNotNull(element);\n      return oldValue;\n    }\n\n    @Override\n    public List<Float> subList(int fromIndex, int toIndex) {\n      int size = size();\n      checkPositionIndexes(fromIndex, toIndex, size);\n      if (fromIndex == toIndex) {\n        return Collections.emptyList();\n      }\n      return new FloatArrayAsList(array, start + fromIndex, start + toIndex);\n    }\n\n    @Override\n    public boolean equals(@Nullable Object object) {\n      if (object == this) {\n        return true;\n      }\n      if (object instanceof FloatArrayAsList) {\n        FloatArrayAsList that = (FloatArrayAsList) object;\n        int size = size();\n        if (that.size() != size) {\n          return false;\n        }\n        for (int i = 0; i < size; i++) {\n          if (array[start + i] != that.array[that.start + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return super.equals(object);\n    }\n\n    @Override\n    public int hashCode() {\n      int result = 1;\n      for (int i = start; i < end; i++) {\n        result = 31 * result + Floats.hashCode(array[i]);\n      }\n      return result;\n    }\n\n    @Override\n    public String toString() {\n      StringBuilder builder = new StringBuilder(size() * 12);\n      builder.append('[').append(array[start]);\n      for (int i = start + 1; i < end; i++) {\n        builder.append(\", \").append(array[i]);\n      }\n      return builder.append(']').toString();\n    }\n\n    float[] toFloatArray() {\n      // Arrays.copyOfRange() is not available under GWT\n      int size = size();\n      float[] result = new float[size];\n      System.arraycopy(array, start, result, 0, size);\n      return result;\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n\n  /**\n   * Parses the specified string as a single-precision floating point value.\n   * The ASCII character {@code '-'} (<code>'&#92;u002D'</code>) is recognized\n   * as the minus sign.\n   *\n   * <p>Unlike {@link Float#parseFloat(String)}, this method returns\n   * {@code null} instead of throwing an exception if parsing fails.\n   * Valid inputs are exactly those accepted by {@link Float#valueOf(String)},\n   * except that leading and trailing whitespace is not permitted.\n   *\n   * <p>This implementation is likely to be faster than {@code\n   * Float.parseFloat} if many failures are expected.\n   *\n   * @param string the string representation of a {@code float} value\n   * @return the floating point value represented by {@code string}, or\n   *     {@code null} if {@code string} has a length of zero or cannot be\n   *     parsed as a {@code float} value\n   * @since 14.0\n   */\n  @Beta\n  @Nullable\n  @CheckForNull\n  @GwtIncompatible(\"regular expressions\")\n  public static Float tryParse(String string) {\n    if (Doubles.FLOATING_POINT_PATTERN.matcher(string).matches()) {\n      // TODO(lowasser): could be potentially optimized, but only with\n      // extensive testing\n      try {\n        return Float.parseFloat(string);\n      } catch (NumberFormatException e) {\n        // Float.parseFloat has changed specs several times, so fall through\n        // gracefully\n      }\n    }\n    return null;\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ [ "\"grow\"", "String" ] ],
  "tokensMethodArguments" : [ [ "array", "", "float[]" ], [ "minLength", "", "int" ], [ "padding", "", "int" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "toString", "java.lang", "Object", "public String toString()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "equals", "", "float[]", "public boolean equals(Object);" ], [ "toString", "", "float[]", "public String toString()" ], [ "hashCode", "", "float[]", "public native int hashCode()" ], [ "getClass", "", "float[]", "public final native Class getClass();" ], [ "clone", "", "float[]", "public T[] clone();" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "length", "", "float[]", "public final int length;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 2121,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "Floats",
  "javadocTag" : "@param string the string representation of a {@code float} value",
  "methodJavadoc" : "    /**\n   * Parses the specified string as a single-precision floating point value.\n   * The ASCII character {@code '-'} (<code>'&#92;u002D'</code>) is recognized\n   * as the minus sign.\n   *\n   * <p>Unlike {@link Float#parseFloat(String)}, this method returns\n   * {@code null} instead of throwing an exception if parsing fails.\n   * Valid inputs are exactly those accepted by {@link Float#valueOf(String)},\n   * except that leading and trailing whitespace is not permitted.\n   *\n   * <p>This implementation is likely to be faster than {@code\n   * Float.parseFloat} if many failures are expected.\n   *\n   * @param string the string representation of a {@code float} value\n   * @return the floating point value represented by {@code string}, or\n   *     {@code null} if {@code string} has a length of zero or cannot be\n   *     parsed as a {@code float} value\n   * @since 14.0\n   */",
  "methodSourceCode" : "public static Float tryParse(String string){\n    if (Doubles.FLOATING_POINT_PATTERN.matcher(string).matches()) {\n        // TODO(lowasser): could be potentially optimized, but only with\n        // extensive testing\n        try {\n            return Float.parseFloat(string);\n        } catch (NumberFormatException e) {\n            // Float.parseFloat has changed specs several times, so fall through\n            // gracefully\n        }\n    }\n    return null;\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code float} primitives, that are not\n * already found in either {@link Float} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2008 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkElementIndex;\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static com.google.common.base.Preconditions.checkPositionIndexes;\nimport static java.lang.Float.NEGATIVE_INFINITY;\nimport static java.lang.Float.POSITIVE_INFINITY;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\nimport com.google.common.annotations.GwtIncompatible;\nimport com.google.common.base.Converter;\n\nimport java.io.Serializable;\nimport java.util.AbstractList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.RandomAccess;\n\nimport javax.annotation.CheckForNull;\nimport javax.annotation.CheckReturnValue;\nimport javax.annotation.Nullable;\n\n/**\n * Static utility methods pertaining to {@code float} primitives, that are not\n * already found in either {@link Float} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */\n@CheckReturnValue\n@GwtCompatible(emulated = true)\npublic final class Floats {\n  private Floats() {}\n\n  /**\n   * The number of bytes required to represent a primitive {@code float}\n   * value.\n   *\n   * @since 10.0\n   */\n  public static final int BYTES = Float.SIZE / Byte.SIZE;\n\n  /**\n   * Returns a hash code for {@code value}; equal to the result of invoking\n   * {@code ((Float) value).hashCode()}.\n   *\n   * @param value a primitive {@code float} value\n   * @return a hash code for the value\n   */\n  public static int hashCode(float value) {\n    // TODO(kevinb): is there a better way, that's still gwt-safe?\n    return ((Float) value).hashCode();\n  }\n\n  /**\n   * Compares the two specified {@code float} values using {@link\n   * Float#compare(float, float)}. You may prefer to invoke that method\n   * directly; this method exists only for consistency with the other utilities\n   * in this package.\n   *\n   * <p><b>Note:</b> this method simply delegates to the JDK method {@link\n   * Float#compare}. It is provided for consistency with the other primitive\n   * types, whose compare methods were not added to the JDK until JDK 7.\n   *\n   * @param a the first {@code float} to compare\n   * @param b the second {@code float} to compare\n   * @return the result of invoking {@link Float#compare(float, float)}\n   */\n  public static int compare(float a, float b) {\n    return Float.compare(a, b);\n  }\n\n  /**\n   * Returns {@code true} if {@code value} represents a real number. This is\n   * equivalent to, but not necessarily implemented as,\n   * {@code !(Float.isInfinite(value) || Float.isNaN(value))}.\n   *\n   * @since 10.0\n   */\n  public static boolean isFinite(float value) {\n    return NEGATIVE_INFINITY < value & value < POSITIVE_INFINITY;\n  }\n\n  /**\n   * Returns {@code true} if {@code target} is present as an element anywhere in\n   * {@code array}. Note that this always returns {@code false} when {@code\n   * target} is {@code NaN}.\n   *\n   * @param array an array of {@code float} values, possibly empty\n   * @param target a primitive {@code float} value\n   * @return {@code true} if {@code array[i] == target} for some value of {@code\n   *     i}\n   */\n  public static boolean contains(float[] array, float target) {\n    for (float value : array) {\n      if (value == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the index of the first appearance of the value {@code target} in\n   * {@code array}. Note that this always returns {@code -1} when {@code target}\n   * is {@code NaN}.\n   *\n   * @param array an array of {@code float} values, possibly empty\n   * @param target a primitive {@code float} value\n   * @return the least index {@code i} for which {@code array[i] == target}, or\n   *     {@code -1} if no such index exists.\n   */\n  public static int indexOf(float[] array, float target) {\n    return indexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int indexOf(float[] array, float target, int start, int end) {\n    for (int i = start; i < end; i++) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the start position of the first occurrence of the specified {@code\n   * target} within {@code array}, or {@code -1} if there is no such occurrence.\n   *\n   * <p>More formally, returns the lowest index {@code i} such that {@code\n   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n   * the same elements as {@code target}.\n   *\n   * <p>Note that this always returns {@code -1} when {@code target} contains\n   * {@code NaN}.\n   *\n   * @param array the array to search for the sequence {@code target}\n   * @param target the array to search for as a sub-sequence of {@code array}\n   */\n  public static int indexOf(float[] array, float[] target) {\n    checkNotNull(array, \"array\");\n    checkNotNull(target, \"target\");\n    if (target.length == 0) {\n      return 0;\n    }\n\n    outer:\n    for (int i = 0; i < array.length - target.length + 1; i++) {\n      for (int j = 0; j < target.length; j++) {\n        if (array[i + j] != target[j]) {\n          continue outer;\n        }\n      }\n      return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the index of the last appearance of the value {@code target} in\n   * {@code array}. Note that this always returns {@code -1} when {@code target}\n   * is {@code NaN}.\n   *\n   * @param array an array of {@code float} values, possibly empty\n   * @param target a primitive {@code float} value\n   * @return the greatest index {@code i} for which {@code array[i] == target},\n   *     or {@code -1} if no such index exists.\n   */\n  public static int lastIndexOf(float[] array, float target) {\n    return lastIndexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int lastIndexOf(float[] array, float target, int start, int end) {\n    for (int i = end - 1; i >= start; i--) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the least value present in {@code array}, using the same rules of\n   * comparison as {@link Math#min(float, float)}.\n   *\n   * @param array a <i>nonempty</i> array of {@code float} values\n   * @return the value present in {@code array} that is less than or equal to\n   *     every other value in the array\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  public static float min(float... array) {\n    checkArgument(array.length > 0);\n    float min = array[0];\n    for (int i = 1; i < array.length; i++) {\n      min = Math.min(min, array[i]);\n    }\n    return min;\n  }\n\n  /**\n   * Returns the greatest value present in {@code array}, using the same rules\n   * of comparison as {@link Math#max(float, float)}.\n   *\n   * @param array a <i>nonempty</i> array of {@code float} values\n   * @return the value present in {@code array} that is greater than or equal to\n   *     every other value in the array\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  public static float max(float... array) {\n    checkArgument(array.length > 0);\n    float max = array[0];\n    for (int i = 1; i < array.length; i++) {\n      max = Math.max(max, array[i]);\n    }\n    return max;\n  }\n\n  /**\n   * Returns the values from each provided array combined into a single array.\n   * For example, {@code concat(new float[] {a, b}, new float[] {}, new\n   * float[] {c}} returns the array {@code {a, b, c}}.\n   *\n   * @param arrays zero or more {@code float} arrays\n   * @return a single array containing all the values from the source arrays, in\n   *     order\n   */\n  public static float[] concat(float[]... arrays) {\n    int length = 0;\n    for (float[] array : arrays) {\n      length += array.length;\n    }\n    float[] result = new float[length];\n    int pos = 0;\n    for (float[] array : arrays) {\n      System.arraycopy(array, 0, result, pos, array.length);\n      pos += array.length;\n    }\n    return result;\n  }\n\n  private static final class FloatConverter extends Converter<String, Float>\n      implements Serializable {\n    static final FloatConverter INSTANCE = new FloatConverter();\n\n    @Override\n    protected Float doForward(String value) {\n      return Float.valueOf(value);\n    }\n\n    @Override\n    protected String doBackward(Float value) {\n      return value.toString();\n    }\n\n    @Override\n    public String toString() {\n      return \"Floats.stringConverter()\";\n    }\n\n    private Object readResolve() {\n      return INSTANCE;\n    }\n\n    private static final long serialVersionUID = 1;\n  }\n\n  /**\n   * Returns a serializable converter object that converts between strings and\n   * floats using {@link Float#valueOf} and {@link Float#toString()}.\n   *\n   * @since 16.0\n   */\n  @Beta\n  public static Converter<String, Float> stringConverter() {\n    return FloatConverter.INSTANCE;\n  }\n\n  /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */\n  public static float[] ensureCapacity(float[] array, int minLength, int padding) {\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength)\n        ? copyOf(array, minLength + padding)\n        : array;\n  }\n\n  // Arrays.copyOf() requires Java 6\n  private static float[] copyOf(float[] original, int length) {\n    float[] copy = new float[length];\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, length));\n    return copy;\n  }\n\n  /**\n   * Returns a string containing the supplied {@code float} values, converted\n   * to strings as specified by {@link Float#toString(float)}, and separated by\n   * {@code separator}. For example, {@code join(\"-\", 1.0f, 2.0f, 3.0f)}\n   * returns the string {@code \"1.0-2.0-3.0\"}.\n   *\n   * <p>Note that {@link Float#toString(float)} formats {@code float}\n   * differently in GWT.  In the previous example, it returns the string {@code\n   * \"1-2-3\"}.\n   *\n   * @param separator the text that should appear between consecutive values in\n   *     the resulting string (but not at the start or end)\n   * @param array an array of {@code float} values, possibly empty\n   */\n  public static String join(String separator, float... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 12);\n    builder.append(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(array[i]);\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two {@code float} arrays\n   * lexicographically. That is, it compares, using {@link\n   * #compare(float, float)}), the first pair of values that follow any\n   * common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example, {@code [] < [1.0f] < [1.0f, 2.0f]\n   * < [2.0f]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link\n   * Object#equals(Object)} (since arrays support only identity equality), but\n   * it is consistent with {@link Arrays#equals(float[], float[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">\n   *     Lexicographical order article at Wikipedia</a>\n   * @since 2.0\n   */\n  public static Comparator<float[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  private enum LexicographicalComparator implements Comparator<float[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(float[] left, float[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        int result = Float.compare(left[i], right[i]);\n        if (result != 0) {\n          return result;\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Returns an array containing each value of {@code collection}, converted to\n   * a {@code float} value in the manner of {@link Number#floatValue}.\n   *\n   * <p>Elements are copied from the argument collection as if by {@code\n   * collection.toArray()}.  Calling this method is as thread-safe as calling\n   * that method.\n   *\n   * @param collection a collection of {@code Number} instances\n   * @return an array containing the same values as {@code collection}, in the\n   *     same order, converted to primitives\n   * @throws NullPointerException if {@code collection} or any of its elements\n   *     is null\n   * @since 1.0 (parameter was {@code Collection<Float>} before 12.0)\n   */\n  public static float[] toArray(Collection<? extends Number> collection) {\n    if (collection instanceof FloatArrayAsList) {\n      return ((FloatArrayAsList) collection).toFloatArray();\n    }\n\n    Object[] boxedArray = collection.toArray();\n    int len = boxedArray.length;\n    float[] array = new float[len];\n    for (int i = 0; i < len; i++) {\n      // checkNotNull for GWT (do not optimize)\n      array[i] = ((Number) checkNotNull(boxedArray[i])).floatValue();\n    }\n    return array;\n  }\n\n  /**\n   * Returns a fixed-size list backed by the specified array, similar to {@link\n   * Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)},\n   * but any attempt to set a value to {@code null} will result in a {@link\n   * NullPointerException}.\n   *\n   * <p>The returned list maintains the values, but not the identities, of\n   * {@code Float} objects written to or read from it.  For example, whether\n   * {@code list.get(0) == list.get(0)} is true for the returned list is\n   * unspecified.\n   *\n   * <p>The returned list may have unexpected behavior if it contains {@code\n   * NaN}, or if {@code NaN} is used as a parameter to any of its methods.\n   *\n   * @param backingArray the array to back the list\n   * @return a list view of the array\n   */\n  public static List<Float> asList(float... backingArray) {\n    if (backingArray.length == 0) {\n      return Collections.emptyList();\n    }\n    return new FloatArrayAsList(backingArray);\n  }\n\n  @GwtCompatible\n  private static class FloatArrayAsList extends AbstractList<Float>\n      implements RandomAccess, Serializable {\n    final float[] array;\n    final int start;\n    final int end;\n\n    FloatArrayAsList(float[] array) {\n      this(array, 0, array.length);\n    }\n\n    FloatArrayAsList(float[] array, int start, int end) {\n      this.array = array;\n      this.start = start;\n      this.end = end;\n    }\n\n    @Override\n    public int size() {\n      return end - start;\n    }\n\n    @Override\n    public boolean isEmpty() {\n      return false;\n    }\n\n    @Override\n    public Float get(int index) {\n      checkElementIndex(index, size());\n      return array[start + index];\n    }\n\n    @Override\n    public boolean contains(Object target) {\n      // Overridden to prevent a ton of boxing\n      return (target instanceof Float) && Floats.indexOf(array, (Float) target, start, end) != -1;\n    }\n\n    @Override\n    public int indexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Float) {\n        int i = Floats.indexOf(array, (Float) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public int lastIndexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Float) {\n        int i = Floats.lastIndexOf(array, (Float) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public Float set(int index, Float element) {\n      checkElementIndex(index, size());\n      float oldValue = array[start + index];\n      // checkNotNull for GWT (do not optimize)\n      array[start + index] = checkNotNull(element);\n      return oldValue;\n    }\n\n    @Override\n    public List<Float> subList(int fromIndex, int toIndex) {\n      int size = size();\n      checkPositionIndexes(fromIndex, toIndex, size);\n      if (fromIndex == toIndex) {\n        return Collections.emptyList();\n      }\n      return new FloatArrayAsList(array, start + fromIndex, start + toIndex);\n    }\n\n    @Override\n    public boolean equals(@Nullable Object object) {\n      if (object == this) {\n        return true;\n      }\n      if (object instanceof FloatArrayAsList) {\n        FloatArrayAsList that = (FloatArrayAsList) object;\n        int size = size();\n        if (that.size() != size) {\n          return false;\n        }\n        for (int i = 0; i < size; i++) {\n          if (array[start + i] != that.array[that.start + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return super.equals(object);\n    }\n\n    @Override\n    public int hashCode() {\n      int result = 1;\n      for (int i = start; i < end; i++) {\n        result = 31 * result + Floats.hashCode(array[i]);\n      }\n      return result;\n    }\n\n    @Override\n    public String toString() {\n      StringBuilder builder = new StringBuilder(size() * 12);\n      builder.append('[').append(array[start]);\n      for (int i = start + 1; i < end; i++) {\n        builder.append(\", \").append(array[i]);\n      }\n      return builder.append(']').toString();\n    }\n\n    float[] toFloatArray() {\n      // Arrays.copyOfRange() is not available under GWT\n      int size = size();\n      float[] result = new float[size];\n      System.arraycopy(array, start, result, 0, size);\n      return result;\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n\n  /**\n   * Parses the specified string as a single-precision floating point value.\n   * The ASCII character {@code '-'} (<code>'&#92;u002D'</code>) is recognized\n   * as the minus sign.\n   *\n   * <p>Unlike {@link Float#parseFloat(String)}, this method returns\n   * {@code null} instead of throwing an exception if parsing fails.\n   * Valid inputs are exactly those accepted by {@link Float#valueOf(String)},\n   * except that leading and trailing whitespace is not permitted.\n   *\n   * <p>This implementation is likely to be faster than {@code\n   * Float.parseFloat} if many failures are expected.\n   *\n   * @param string the string representation of a {@code float} value\n   * @return the floating point value represented by {@code string}, or\n   *     {@code null} if {@code string} has a length of zero or cannot be\n   *     parsed as a {@code float} value\n   * @since 14.0\n   */\n  @Beta\n  @Nullable\n  @CheckForNull\n  @GwtIncompatible(\"regular expressions\")\n  public static Float tryParse(String string) {\n    if (Doubles.FLOATING_POINT_PATTERN.matcher(string).matches()) {\n      // TODO(lowasser): could be potentially optimized, but only with\n      // extensive testing\n      try {\n        return Float.parseFloat(string);\n      } catch (NumberFormatException e) {\n        // Float.parseFloat has changed specs several times, so fall through\n        // gracefully\n      }\n    }\n    return null;\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ [ "92", "int" ], [ "2", "int" ], [ "14.0", "double" ], [ "\"-\"", "String" ], [ "\"&#92;u002D\"", "String" ] ],
  "tokensMethodArguments" : [ [ "string", "java.lang", "String" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "toString", "java.lang", "Object", "public String toString()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(int arg0, int arg1)" ], [ "startsWith", "java.lang", "String", "public boolean startsWith(String arg0)" ], [ "replace", "java.lang", "String", "public String replace(CharSequence arg0, CharSequence arg1)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes(Charset arg0)" ], [ "toCharArray", "java.lang", "String", "public char[] toCharArray()" ], [ "split", "java.lang", "String", "public String[] split(String arg0)" ], [ "isEmpty", "java.lang", "String", "public boolean isEmpty()" ], [ "stripIndent", "java.lang", "String", "public String stripIndent()" ], [ "codePointCount", "java.lang", "String", "public int codePointCount(int arg0, int arg1)" ], [ "regionMatches", "java.lang", "String", "public boolean regionMatches(int arg0, String arg1, int arg2, int arg3)" ], [ "concat", "java.lang", "String", "public String concat(String arg0)" ], [ "split", "java.lang", "String", "public String[] split(String arg0, int arg1)" ], [ "endsWith", "java.lang", "String", "public boolean endsWith(String arg0)" ], [ "isBlank", "java.lang", "String", "public boolean isBlank()" ], [ "substring", "java.lang", "String", "public String substring(int arg0)" ], [ "lines", "java.lang", "String", "public Stream<String> lines()" ], [ "codePointBefore", "java.lang", "String", "public int codePointBefore(int arg0)" ], [ "resolveConstantDesc", "java.lang", "String", "public String resolveConstantDesc(MethodHandles.Lookup arg0)" ], [ "matches", "java.lang", "String", "public boolean matches(String arg0)" ], [ "isLatin1", "java.lang", "String", "boolean isLatin1()" ], [ "describeConstable", "java.lang", "String", "public Optional<String> describeConstable()" ], [ "toUpperCase", "java.lang", "String", "public String toUpperCase(Locale arg0)" ], [ "offsetByCodePoints", "java.lang", "String", "public int offsetByCodePoints(int arg0, int arg1)" ], [ "toLowerCase", "java.lang", "String", "public String toLowerCase(Locale arg0)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(String arg0)" ], [ "length", "java.lang", "String", "public int length()" ], [ "chars", "java.lang", "String", "public IntStream chars()" ], [ "formatted", "java.lang", "String", "public String formatted(Object[] arg0)" ], [ "indexOf", "java.lang", "String", "public int indexOf(String arg0)" ], [ "equalsIgnoreCase", "java.lang", "String", "public boolean equalsIgnoreCase(String arg0)" ], [ "contains", "java.lang", "String", "public boolean contains(CharSequence arg0)" ], [ "equals", "java.lang", "String", "public boolean equals(Object arg0)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(String arg0, int arg1)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(int arg0)" ], [ "translateEscapes", "java.lang", "String", "public String translateEscapes()" ], [ "hashCode", "java.lang", "String", "public int hashCode()" ], [ "substring", "java.lang", "String", "public String substring(int arg0, int arg1)" ], [ "stripTrailing", "java.lang", "String", "public String stripTrailing()" ], [ "stripLeading", "java.lang", "String", "public String stripLeading()" ], [ "strip", "java.lang", "String", "public String strip()" ], [ "toUpperCase", "java.lang", "String", "public String toUpperCase()" ], [ "intern", "java.lang", "String", "public native String intern()" ], [ "contentEquals", "java.lang", "String", "public boolean contentEquals(StringBuffer arg0)" ], [ "trim", "java.lang", "String", "public String trim()" ], [ "indent", "java.lang", "String", "public String indent(int arg0)" ], [ "transform", "java.lang", "String", "public <R> R transform(Function<? super String, ? extends R> arg0)" ], [ "charAt", "java.lang", "String", "public char charAt(int arg0)" ], [ "compareToIgnoreCase", "java.lang", "String", "public int compareToIgnoreCase(String arg0)" ], [ "codePointAt", "java.lang", "String", "public int codePointAt(int arg0)" ], [ "value", "java.lang", "String", "byte[] value()" ], [ "toLowerCase", "java.lang", "String", "public String toLowerCase()" ], [ "replace", "java.lang", "String", "public String replace(char arg0, char arg1)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes()" ], [ "toString", "java.lang", "String", "public String toString()" ], [ "indexOf", "java.lang", "String", "public int indexOf(String arg0, int arg1)" ], [ "replaceFirst", "java.lang", "String", "public String replaceFirst(String arg0, String arg1)" ], [ "startsWith", "java.lang", "String", "public boolean startsWith(String arg0, int arg1)" ], [ "codePoints", "java.lang", "String", "public IntStream codePoints()" ], [ "repeat", "java.lang", "String", "public String repeat(int arg0)" ], [ "indexOf", "java.lang", "String", "public int indexOf(int arg0, int arg1)" ], [ "indexOf", "java.lang", "String", "public int indexOf(int arg0)" ], [ "coder", "java.lang", "String", "byte coder()" ], [ "regionMatches", "java.lang", "String", "public boolean regionMatches(boolean arg0, int arg1, String arg2, int arg3, int arg4)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes(String arg0) throws UnsupportedEncodingException" ], [ "subSequence", "java.lang", "String", "public CharSequence subSequence(int arg0, int arg1)" ], [ "compareTo", "java.lang", "String", "public int compareTo(String arg0)" ], [ "contentEquals", "java.lang", "String", "public boolean contentEquals(CharSequence arg0)" ], [ "replaceAll", "java.lang", "String", "public String replaceAll(String arg0, String arg1)" ], [ "compareTo", "java.lang", "Comparable", "public abstract int compareTo(T arg0)" ], [ "isEmpty", "java.lang", "CharSequence", "public default boolean isEmpty()" ], [ "toString", "java.lang", "CharSequence", "public abstract String toString()" ], [ "chars", "java.lang", "CharSequence", "public default IntStream chars()" ], [ "charAt", "java.lang", "CharSequence", "public abstract char charAt(int arg0)" ], [ "subSequence", "java.lang", "CharSequence", "public abstract CharSequence subSequence(int arg0, int arg1)" ], [ "codePoints", "java.lang", "CharSequence", "public default IntStream codePoints()" ], [ "length", "java.lang", "CharSequence", "public abstract int length()" ], [ "describeConstable", "java.lang.constant", "Constable", "public abstract Optional<? extends ConstantDesc> describeConstable()" ], [ "resolveConstantDesc", "java.lang.constant", "ConstantDesc", "public abstract Object resolveConstantDesc(MethodHandles.Lookup arg0) throws ReflectiveOperationException" ], [ "hashCode", "java.lang", "Float", "public int hashCode()" ], [ "toString", "java.lang", "Float", "public String toString()" ], [ "isInfinite", "java.lang", "Float", "public boolean isInfinite()" ], [ "floatValue", "java.lang", "Float", "public float floatValue()" ], [ "byteValue", "java.lang", "Float", "public byte byteValue()" ], [ "resolveConstantDesc", "java.lang", "Float", "public Float resolveConstantDesc(MethodHandles.Lookup arg0)" ], [ "isNaN", "java.lang", "Float", "public boolean isNaN()" ], [ "doubleValue", "java.lang", "Float", "public double doubleValue()" ], [ "describeConstable", "java.lang", "Float", "public Optional<Float> describeConstable()" ], [ "compareTo", "java.lang", "Float", "public int compareTo(Float arg0)" ], [ "intValue", "java.lang", "Float", "public int intValue()" ], [ "equals", "java.lang", "Float", "public boolean equals(Object arg0)" ], [ "shortValue", "java.lang", "Float", "public short shortValue()" ], [ "longValue", "java.lang", "Float", "public long longValue()" ], [ "intValue", "java.lang", "Number", "public abstract int intValue()" ], [ "doubleValue", "java.lang", "Number", "public abstract double doubleValue()" ], [ "byteValue", "java.lang", "Number", "public byte byteValue()" ], [ "shortValue", "java.lang", "Number", "public short shortValue()" ], [ "longValue", "java.lang", "Number", "public abstract long longValue()" ], [ "floatValue", "java.lang", "Number", "public abstract float floatValue()" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 2130,
  "oracle" : "Arrays.stream(array).anyMatch(jdVar -> jdVar == target) ? methodResultID == true : methodResultID == false;",
  "oracleType" : "NORMAL_POST",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "Booleans",
  "javadocTag" : "@return {@code true} if {@code array[i] == target} for some value of {@code\n    i}",
  "methodJavadoc" : "    /**\n   * Returns {@code true} if {@code target} is present as an element anywhere in\n   * {@code array}.\n   *\n   * <p><b>Note:</b> consider representing the array as a {@link\n   * java.util.BitSet} instead, replacing {@code Booleans.contains(array, true)}\n   * with {@code !bitSet.isEmpty()} and {@code Booleans.contains(array, false)}\n   * with {@code bitSet.nextClearBit(0) == sizeOfBitSet}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return {@code true} if {@code array[i] == target} for some value of {@code\n   *     i}\n   */",
  "methodSourceCode" : "public static boolean contains(boolean[] array, boolean target){\n    for (boolean value : array) {\n        if (value == target) {\n            return true;\n        }\n    }\n    return false;\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code boolean} primitives, that are not\n * already found in either {@link Boolean} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2008 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkElementIndex;\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static com.google.common.base.Preconditions.checkPositionIndexes;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\n\nimport java.io.Serializable;\nimport java.util.AbstractList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.RandomAccess;\n\nimport javax.annotation.CheckReturnValue;\nimport javax.annotation.Nullable;\n\n/**\n * Static utility methods pertaining to {@code boolean} primitives, that are not\n * already found in either {@link Boolean} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */\n@CheckReturnValue\n@GwtCompatible\npublic final class Booleans {\n  private Booleans() {}\n\n  /**\n   * Returns a hash code for {@code value}; equal to the result of invoking\n   * {@code ((Boolean) value).hashCode()}.\n   *\n   * @param value a primitive {@code boolean} value\n   * @return a hash code for the value\n   */\n  public static int hashCode(boolean value) {\n    return value ? 1231 : 1237;\n  }\n\n  /**\n   * Compares the two specified {@code boolean} values in the standard way\n   * ({@code false} is considered less than {@code true}). The sign of the\n   * value returned is the same as that of {@code ((Boolean) a).compareTo(b)}.\n   *\n   * <p><b>Note for Java 7 and later:</b> this method should be treated as\n   * deprecated; use the equivalent {@link Boolean#compare} method instead.\n   *\n   * @param a the first {@code boolean} to compare\n   * @param b the second {@code boolean} to compare\n   * @return a positive number if only {@code a} is {@code true}, a negative\n   *     number if only {@code b} is true, or zero if {@code a == b}\n   */\n  public static int compare(boolean a, boolean b) {\n    return (a == b) ? 0 : (a ? 1 : -1);\n  }\n\n  /**\n   * Returns {@code true} if {@code target} is present as an element anywhere in\n   * {@code array}.\n   *\n   * <p><b>Note:</b> consider representing the array as a {@link\n   * java.util.BitSet} instead, replacing {@code Booleans.contains(array, true)}\n   * with {@code !bitSet.isEmpty()} and {@code Booleans.contains(array, false)}\n   * with {@code bitSet.nextClearBit(0) == sizeOfBitSet}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return {@code true} if {@code array[i] == target} for some value of {@code\n   *     i}\n   */\n  public static boolean contains(boolean[] array, boolean target) {\n    for (boolean value : array) {\n      if (value == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the index of the first appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * <p><b>Note:</b> consider representing the array as a {@link\n   * java.util.BitSet} instead, and using {@link\n   * java.util.BitSet#nextSetBit(int)} or {@link\n   * java.util.BitSet#nextClearBit(int)}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return the least index {@code i} for which {@code array[i] == target}, or\n   *     {@code -1} if no such index exists.\n   */\n  public static int indexOf(boolean[] array, boolean target) {\n    return indexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int indexOf(boolean[] array, boolean target, int start, int end) {\n    for (int i = start; i < end; i++) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the start position of the first occurrence of the specified {@code\n   * target} within {@code array}, or {@code -1} if there is no such occurrence.\n   *\n   * <p>More formally, returns the lowest index {@code i} such that {@code\n   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n   * the same elements as {@code target}.\n   *\n   * @param array the array to search for the sequence {@code target}\n   * @param target the array to search for as a sub-sequence of {@code array}\n   */\n  public static int indexOf(boolean[] array, boolean[] target) {\n    checkNotNull(array, \"array\");\n    checkNotNull(target, \"target\");\n    if (target.length == 0) {\n      return 0;\n    }\n\n    outer:\n    for (int i = 0; i < array.length - target.length + 1; i++) {\n      for (int j = 0; j < target.length; j++) {\n        if (array[i + j] != target[j]) {\n          continue outer;\n        }\n      }\n      return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the index of the last appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return the greatest index {@code i} for which {@code array[i] == target},\n   *     or {@code -1} if no such index exists.\n   */\n  public static int lastIndexOf(boolean[] array, boolean target) {\n    return lastIndexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int lastIndexOf(boolean[] array, boolean target, int start, int end) {\n    for (int i = end - 1; i >= start; i--) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the values from each provided array combined into a single array.\n   * For example, {@code concat(new boolean[] {a, b}, new boolean[] {}, new\n   * boolean[] {c}} returns the array {@code {a, b, c}}.\n   *\n   * @param arrays zero or more {@code boolean} arrays\n   * @return a single array containing all the values from the source arrays, in\n   *     order\n   */\n  public static boolean[] concat(boolean[]... arrays) {\n    int length = 0;\n    for (boolean[] array : arrays) {\n      length += array.length;\n    }\n    boolean[] result = new boolean[length];\n    int pos = 0;\n    for (boolean[] array : arrays) {\n      System.arraycopy(array, 0, result, pos, array.length);\n      pos += array.length;\n    }\n    return result;\n  }\n\n  /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */\n  public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding) {\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength)\n        ? copyOf(array, minLength + padding)\n        : array;\n  }\n\n  // Arrays.copyOf() requires Java 6\n  private static boolean[] copyOf(boolean[] original, int length) {\n    boolean[] copy = new boolean[length];\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, length));\n    return copy;\n  }\n\n  /**\n   * Returns a string containing the supplied {@code boolean} values separated\n   * by {@code separator}. For example, {@code join(\"-\", false, true, false)}\n   * returns the string {@code \"false-true-false\"}.\n   *\n   * @param separator the text that should appear between consecutive values in\n   *     the resulting string (but not at the start or end)\n   * @param array an array of {@code boolean} values, possibly empty\n   */\n  public static String join(String separator, boolean... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 7);\n    builder.append(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(array[i]);\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two {@code boolean} arrays\n   * lexicographically. That is, it compares, using {@link\n   * #compare(boolean, boolean)}), the first pair of values that follow any\n   * common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example,\n   * {@code [] < [false] < [false, true] < [true]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link\n   * Object#equals(Object)} (since arrays support only identity equality), but\n   * it is consistent with {@link Arrays#equals(boolean[], boolean[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">\n   *     Lexicographical order article at Wikipedia</a>\n   * @since 2.0\n   */\n  public static Comparator<boolean[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  private enum LexicographicalComparator implements Comparator<boolean[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(boolean[] left, boolean[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        int result = Booleans.compare(left[i], right[i]);\n        if (result != 0) {\n          return result;\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Copies a collection of {@code Boolean} instances into a new array of\n   * primitive {@code boolean} values.\n   *\n   * <p>Elements are copied from the argument collection as if by {@code\n   * collection.toArray()}.  Calling this method is as thread-safe as calling\n   * that method.\n   *\n   * <p><b>Note:</b> consider representing the collection as a {@link\n   * java.util.BitSet} instead.\n   *\n   * @param collection a collection of {@code Boolean} objects\n   * @return an array containing the same values as {@code collection}, in the\n   *     same order, converted to primitives\n   * @throws NullPointerException if {@code collection} or any of its elements\n   *     is null\n   */\n  public static boolean[] toArray(Collection<Boolean> collection) {\n    if (collection instanceof BooleanArrayAsList) {\n      return ((BooleanArrayAsList) collection).toBooleanArray();\n    }\n\n    Object[] boxedArray = collection.toArray();\n    int len = boxedArray.length;\n    boolean[] array = new boolean[len];\n    for (int i = 0; i < len; i++) {\n      // checkNotNull for GWT (do not optimize)\n      array[i] = (Boolean) checkNotNull(boxedArray[i]);\n    }\n    return array;\n  }\n\n  /**\n   * Returns a fixed-size list backed by the specified array, similar to {@link\n   * Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)},\n   * but any attempt to set a value to {@code null} will result in a {@link\n   * NullPointerException}.\n   *\n   * <p>The returned list maintains the values, but not the identities, of\n   * {@code Boolean} objects written to or read from it.  For example, whether\n   * {@code list.get(0) == list.get(0)} is true for the returned list is\n   * unspecified.\n   *\n   * @param backingArray the array to back the list\n   * @return a list view of the array\n   */\n  public static List<Boolean> asList(boolean... backingArray) {\n    if (backingArray.length == 0) {\n      return Collections.emptyList();\n    }\n    return new BooleanArrayAsList(backingArray);\n  }\n\n  @GwtCompatible\n  private static class BooleanArrayAsList extends AbstractList<Boolean>\n      implements RandomAccess, Serializable {\n    final boolean[] array;\n    final int start;\n    final int end;\n\n    BooleanArrayAsList(boolean[] array) {\n      this(array, 0, array.length);\n    }\n\n    BooleanArrayAsList(boolean[] array, int start, int end) {\n      this.array = array;\n      this.start = start;\n      this.end = end;\n    }\n\n    @Override\n    public int size() {\n      return end - start;\n    }\n\n    @Override\n    public boolean isEmpty() {\n      return false;\n    }\n\n    @Override\n    public Boolean get(int index) {\n      checkElementIndex(index, size());\n      return array[start + index];\n    }\n\n    @Override\n    public boolean contains(Object target) {\n      // Overridden to prevent a ton of boxing\n      return (target instanceof Boolean)\n          && Booleans.indexOf(array, (Boolean) target, start, end) != -1;\n    }\n\n    @Override\n    public int indexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Boolean) {\n        int i = Booleans.indexOf(array, (Boolean) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public int lastIndexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Boolean) {\n        int i = Booleans.lastIndexOf(array, (Boolean) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public Boolean set(int index, Boolean element) {\n      checkElementIndex(index, size());\n      boolean oldValue = array[start + index];\n      // checkNotNull for GWT (do not optimize)\n      array[start + index] = checkNotNull(element);\n      return oldValue;\n    }\n\n    @Override\n    public List<Boolean> subList(int fromIndex, int toIndex) {\n      int size = size();\n      checkPositionIndexes(fromIndex, toIndex, size);\n      if (fromIndex == toIndex) {\n        return Collections.emptyList();\n      }\n      return new BooleanArrayAsList(array, start + fromIndex, start + toIndex);\n    }\n\n    @Override\n    public boolean equals(@Nullable Object object) {\n      if (object == this) {\n        return true;\n      }\n      if (object instanceof BooleanArrayAsList) {\n        BooleanArrayAsList that = (BooleanArrayAsList) object;\n        int size = size();\n        if (that.size() != size) {\n          return false;\n        }\n        for (int i = 0; i < size; i++) {\n          if (array[start + i] != that.array[that.start + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return super.equals(object);\n    }\n\n    @Override\n    public int hashCode() {\n      int result = 1;\n      for (int i = start; i < end; i++) {\n        result = 31 * result + Booleans.hashCode(array[i]);\n      }\n      return result;\n    }\n\n    @Override\n    public String toString() {\n      StringBuilder builder = new StringBuilder(size() * 7);\n      builder.append(array[start] ? \"[true\" : \"[false\");\n      for (int i = start + 1; i < end; i++) {\n        builder.append(array[i] ? \", true\" : \", false\");\n      }\n      return builder.append(']').toString();\n    }\n\n    boolean[] toBooleanArray() {\n      // Arrays.copyOfRange() is not available under GWT\n      int size = size();\n      boolean[] result = new boolean[size];\n      System.arraycopy(array, start, result, 0, size);\n      return result;\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n\n  /**\n   * Returns the number of {@code values} that are {@code true}.\n   *\n   * @since 16.0\n   */\n  @Beta\n  public static int countTrue(boolean... values) {\n    int count = 0;\n    for (boolean value : values) {\n      if (value) {\n        count++;\n      }\n    }\n    return count;\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ [ "0", "int" ] ],
  "tokensMethodArguments" : [ [ "array", "", "boolean[]" ], [ "target", "", "boolean" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "equals", "", "boolean[]", "public boolean equals(Object);" ], [ "toString", "", "boolean[]", "public String toString()" ], [ "hashCode", "", "boolean[]", "public native int hashCode()" ], [ "getClass", "", "boolean[]", "public final native Class getClass();" ], [ "clone", "", "boolean[]", "public T[] clone();" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "length", "", "boolean[]", "public final int length;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 2141,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "Booleans",
  "javadocTag" : "@param array the source array",
  "methodJavadoc" : "    /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */",
  "methodSourceCode" : "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding){\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength) ? copyOf(array, minLength + padding) : array;\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code boolean} primitives, that are not\n * already found in either {@link Boolean} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2008 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkElementIndex;\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static com.google.common.base.Preconditions.checkPositionIndexes;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\n\nimport java.io.Serializable;\nimport java.util.AbstractList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.RandomAccess;\n\nimport javax.annotation.CheckReturnValue;\nimport javax.annotation.Nullable;\n\n/**\n * Static utility methods pertaining to {@code boolean} primitives, that are not\n * already found in either {@link Boolean} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */\n@CheckReturnValue\n@GwtCompatible\npublic final class Booleans {\n  private Booleans() {}\n\n  /**\n   * Returns a hash code for {@code value}; equal to the result of invoking\n   * {@code ((Boolean) value).hashCode()}.\n   *\n   * @param value a primitive {@code boolean} value\n   * @return a hash code for the value\n   */\n  public static int hashCode(boolean value) {\n    return value ? 1231 : 1237;\n  }\n\n  /**\n   * Compares the two specified {@code boolean} values in the standard way\n   * ({@code false} is considered less than {@code true}). The sign of the\n   * value returned is the same as that of {@code ((Boolean) a).compareTo(b)}.\n   *\n   * <p><b>Note for Java 7 and later:</b> this method should be treated as\n   * deprecated; use the equivalent {@link Boolean#compare} method instead.\n   *\n   * @param a the first {@code boolean} to compare\n   * @param b the second {@code boolean} to compare\n   * @return a positive number if only {@code a} is {@code true}, a negative\n   *     number if only {@code b} is true, or zero if {@code a == b}\n   */\n  public static int compare(boolean a, boolean b) {\n    return (a == b) ? 0 : (a ? 1 : -1);\n  }\n\n  /**\n   * Returns {@code true} if {@code target} is present as an element anywhere in\n   * {@code array}.\n   *\n   * <p><b>Note:</b> consider representing the array as a {@link\n   * java.util.BitSet} instead, replacing {@code Booleans.contains(array, true)}\n   * with {@code !bitSet.isEmpty()} and {@code Booleans.contains(array, false)}\n   * with {@code bitSet.nextClearBit(0) == sizeOfBitSet}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return {@code true} if {@code array[i] == target} for some value of {@code\n   *     i}\n   */\n  public static boolean contains(boolean[] array, boolean target) {\n    for (boolean value : array) {\n      if (value == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the index of the first appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * <p><b>Note:</b> consider representing the array as a {@link\n   * java.util.BitSet} instead, and using {@link\n   * java.util.BitSet#nextSetBit(int)} or {@link\n   * java.util.BitSet#nextClearBit(int)}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return the least index {@code i} for which {@code array[i] == target}, or\n   *     {@code -1} if no such index exists.\n   */\n  public static int indexOf(boolean[] array, boolean target) {\n    return indexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int indexOf(boolean[] array, boolean target, int start, int end) {\n    for (int i = start; i < end; i++) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the start position of the first occurrence of the specified {@code\n   * target} within {@code array}, or {@code -1} if there is no such occurrence.\n   *\n   * <p>More formally, returns the lowest index {@code i} such that {@code\n   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n   * the same elements as {@code target}.\n   *\n   * @param array the array to search for the sequence {@code target}\n   * @param target the array to search for as a sub-sequence of {@code array}\n   */\n  public static int indexOf(boolean[] array, boolean[] target) {\n    checkNotNull(array, \"array\");\n    checkNotNull(target, \"target\");\n    if (target.length == 0) {\n      return 0;\n    }\n\n    outer:\n    for (int i = 0; i < array.length - target.length + 1; i++) {\n      for (int j = 0; j < target.length; j++) {\n        if (array[i + j] != target[j]) {\n          continue outer;\n        }\n      }\n      return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the index of the last appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * @param array an array of {@code boolean} values, possibly empty\n   * @param target a primitive {@code boolean} value\n   * @return the greatest index {@code i} for which {@code array[i] == target},\n   *     or {@code -1} if no such index exists.\n   */\n  public static int lastIndexOf(boolean[] array, boolean target) {\n    return lastIndexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int lastIndexOf(boolean[] array, boolean target, int start, int end) {\n    for (int i = end - 1; i >= start; i--) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the values from each provided array combined into a single array.\n   * For example, {@code concat(new boolean[] {a, b}, new boolean[] {}, new\n   * boolean[] {c}} returns the array {@code {a, b, c}}.\n   *\n   * @param arrays zero or more {@code boolean} arrays\n   * @return a single array containing all the values from the source arrays, in\n   *     order\n   */\n  public static boolean[] concat(boolean[]... arrays) {\n    int length = 0;\n    for (boolean[] array : arrays) {\n      length += array.length;\n    }\n    boolean[] result = new boolean[length];\n    int pos = 0;\n    for (boolean[] array : arrays) {\n      System.arraycopy(array, 0, result, pos, array.length);\n      pos += array.length;\n    }\n    return result;\n  }\n\n  /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */\n  public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding) {\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength)\n        ? copyOf(array, minLength + padding)\n        : array;\n  }\n\n  // Arrays.copyOf() requires Java 6\n  private static boolean[] copyOf(boolean[] original, int length) {\n    boolean[] copy = new boolean[length];\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, length));\n    return copy;\n  }\n\n  /**\n   * Returns a string containing the supplied {@code boolean} values separated\n   * by {@code separator}. For example, {@code join(\"-\", false, true, false)}\n   * returns the string {@code \"false-true-false\"}.\n   *\n   * @param separator the text that should appear between consecutive values in\n   *     the resulting string (but not at the start or end)\n   * @param array an array of {@code boolean} values, possibly empty\n   */\n  public static String join(String separator, boolean... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 7);\n    builder.append(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(array[i]);\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two {@code boolean} arrays\n   * lexicographically. That is, it compares, using {@link\n   * #compare(boolean, boolean)}), the first pair of values that follow any\n   * common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example,\n   * {@code [] < [false] < [false, true] < [true]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link\n   * Object#equals(Object)} (since arrays support only identity equality), but\n   * it is consistent with {@link Arrays#equals(boolean[], boolean[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">\n   *     Lexicographical order article at Wikipedia</a>\n   * @since 2.0\n   */\n  public static Comparator<boolean[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  private enum LexicographicalComparator implements Comparator<boolean[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(boolean[] left, boolean[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        int result = Booleans.compare(left[i], right[i]);\n        if (result != 0) {\n          return result;\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Copies a collection of {@code Boolean} instances into a new array of\n   * primitive {@code boolean} values.\n   *\n   * <p>Elements are copied from the argument collection as if by {@code\n   * collection.toArray()}.  Calling this method is as thread-safe as calling\n   * that method.\n   *\n   * <p><b>Note:</b> consider representing the collection as a {@link\n   * java.util.BitSet} instead.\n   *\n   * @param collection a collection of {@code Boolean} objects\n   * @return an array containing the same values as {@code collection}, in the\n   *     same order, converted to primitives\n   * @throws NullPointerException if {@code collection} or any of its elements\n   *     is null\n   */\n  public static boolean[] toArray(Collection<Boolean> collection) {\n    if (collection instanceof BooleanArrayAsList) {\n      return ((BooleanArrayAsList) collection).toBooleanArray();\n    }\n\n    Object[] boxedArray = collection.toArray();\n    int len = boxedArray.length;\n    boolean[] array = new boolean[len];\n    for (int i = 0; i < len; i++) {\n      // checkNotNull for GWT (do not optimize)\n      array[i] = (Boolean) checkNotNull(boxedArray[i]);\n    }\n    return array;\n  }\n\n  /**\n   * Returns a fixed-size list backed by the specified array, similar to {@link\n   * Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)},\n   * but any attempt to set a value to {@code null} will result in a {@link\n   * NullPointerException}.\n   *\n   * <p>The returned list maintains the values, but not the identities, of\n   * {@code Boolean} objects written to or read from it.  For example, whether\n   * {@code list.get(0) == list.get(0)} is true for the returned list is\n   * unspecified.\n   *\n   * @param backingArray the array to back the list\n   * @return a list view of the array\n   */\n  public static List<Boolean> asList(boolean... backingArray) {\n    if (backingArray.length == 0) {\n      return Collections.emptyList();\n    }\n    return new BooleanArrayAsList(backingArray);\n  }\n\n  @GwtCompatible\n  private static class BooleanArrayAsList extends AbstractList<Boolean>\n      implements RandomAccess, Serializable {\n    final boolean[] array;\n    final int start;\n    final int end;\n\n    BooleanArrayAsList(boolean[] array) {\n      this(array, 0, array.length);\n    }\n\n    BooleanArrayAsList(boolean[] array, int start, int end) {\n      this.array = array;\n      this.start = start;\n      this.end = end;\n    }\n\n    @Override\n    public int size() {\n      return end - start;\n    }\n\n    @Override\n    public boolean isEmpty() {\n      return false;\n    }\n\n    @Override\n    public Boolean get(int index) {\n      checkElementIndex(index, size());\n      return array[start + index];\n    }\n\n    @Override\n    public boolean contains(Object target) {\n      // Overridden to prevent a ton of boxing\n      return (target instanceof Boolean)\n          && Booleans.indexOf(array, (Boolean) target, start, end) != -1;\n    }\n\n    @Override\n    public int indexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Boolean) {\n        int i = Booleans.indexOf(array, (Boolean) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public int lastIndexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Boolean) {\n        int i = Booleans.lastIndexOf(array, (Boolean) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public Boolean set(int index, Boolean element) {\n      checkElementIndex(index, size());\n      boolean oldValue = array[start + index];\n      // checkNotNull for GWT (do not optimize)\n      array[start + index] = checkNotNull(element);\n      return oldValue;\n    }\n\n    @Override\n    public List<Boolean> subList(int fromIndex, int toIndex) {\n      int size = size();\n      checkPositionIndexes(fromIndex, toIndex, size);\n      if (fromIndex == toIndex) {\n        return Collections.emptyList();\n      }\n      return new BooleanArrayAsList(array, start + fromIndex, start + toIndex);\n    }\n\n    @Override\n    public boolean equals(@Nullable Object object) {\n      if (object == this) {\n        return true;\n      }\n      if (object instanceof BooleanArrayAsList) {\n        BooleanArrayAsList that = (BooleanArrayAsList) object;\n        int size = size();\n        if (that.size() != size) {\n          return false;\n        }\n        for (int i = 0; i < size; i++) {\n          if (array[start + i] != that.array[that.start + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return super.equals(object);\n    }\n\n    @Override\n    public int hashCode() {\n      int result = 1;\n      for (int i = start; i < end; i++) {\n        result = 31 * result + Booleans.hashCode(array[i]);\n      }\n      return result;\n    }\n\n    @Override\n    public String toString() {\n      StringBuilder builder = new StringBuilder(size() * 7);\n      builder.append(array[start] ? \"[true\" : \"[false\");\n      for (int i = start + 1; i < end; i++) {\n        builder.append(array[i] ? \", true\" : \", false\");\n      }\n      return builder.append(']').toString();\n    }\n\n    boolean[] toBooleanArray() {\n      // Arrays.copyOfRange() is not available under GWT\n      int size = size();\n      boolean[] result = new boolean[size];\n      System.arraycopy(array, start, result, 0, size);\n      return result;\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n\n  /**\n   * Returns the number of {@code values} that are {@code true}.\n   *\n   * @since 16.0\n   */\n  @Beta\n  public static int countTrue(boolean... values) {\n    int count = 0;\n    for (boolean value : values) {\n      if (value) {\n        count++;\n      }\n    }\n    return count;\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ [ "\"grow\"", "String" ] ],
  "tokensMethodArguments" : [ [ "array", "", "boolean[]" ], [ "minLength", "", "int" ], [ "padding", "", "int" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "toString", "java.lang", "Object", "public String toString()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "equals", "", "boolean[]", "public boolean equals(Object);" ], [ "toString", "", "boolean[]", "public String toString()" ], [ "hashCode", "", "boolean[]", "public native int hashCode()" ], [ "getClass", "", "boolean[]", "public final native Class getClass();" ], [ "clone", "", "boolean[]", "public T[] clone();" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "length", "", "boolean[]", "public final int length;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 2162,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "UnsignedLongs",
  "javadocTag" : "@throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n        value",
  "methodJavadoc" : "    /**\n   * Returns the unsigned {@code long} value represented by the given decimal string.\n   *\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         value\n   * @throws NullPointerException if {@code s} is null\n   *         (in contrast to {@link Long#parseLong(String)})\n   */",
  "methodSourceCode" : "public static long parseUnsignedLong(String s){\n    return parseUnsignedLong(s, 10);\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code long} primitives that interpret values as\n * <i>unsigned</i> (that is, any negative value {@code x} is treated as the positive value\n * {@code 2^64 + x}). The methods for which signedness is not an issue are in {@link Longs}, as\n * well as signed versions of methods for which signedness is an issue.\n *\n * <p>In addition, this class provides several static methods for converting a {@code long} to a\n * {@code String} and a {@code String} to a {@code long} that treat the {@code long} as an unsigned\n * number.\n *\n * <p>Users of these utilities must be <i>extremely careful</i> not to mix up signed and unsigned\n * {@code long} values. When possible, it is recommended that the {@link UnsignedLong} wrapper\n * class be used, at a small efficiency penalty, to enforce the distinction in the type system.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained#unsigned-support\">\n * unsigned primitive utilities</a>.\n *\n * @author Louis Wasserman\n * @author Brian Milch\n * @author Colin Evans\n * @since 10.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2011 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkNotNull;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\n\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.Comparator;\n\nimport javax.annotation.CheckReturnValue;\n\n/**\n * Static utility methods pertaining to {@code long} primitives that interpret values as\n * <i>unsigned</i> (that is, any negative value {@code x} is treated as the positive value\n * {@code 2^64 + x}). The methods for which signedness is not an issue are in {@link Longs}, as\n * well as signed versions of methods for which signedness is an issue.\n *\n * <p>In addition, this class provides several static methods for converting a {@code long} to a\n * {@code String} and a {@code String} to a {@code long} that treat the {@code long} as an unsigned\n * number.\n *\n * <p>Users of these utilities must be <i>extremely careful</i> not to mix up signed and unsigned\n * {@code long} values. When possible, it is recommended that the {@link UnsignedLong} wrapper\n * class be used, at a small efficiency penalty, to enforce the distinction in the type system.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained#unsigned-support\">\n * unsigned primitive utilities</a>.\n *\n * @author Louis Wasserman\n * @author Brian Milch\n * @author Colin Evans\n * @since 10.0\n */\n@Beta\n@GwtCompatible\npublic final class UnsignedLongs {\n  private UnsignedLongs() {}\n\n  public static final long MAX_VALUE = -1L; // Equivalent to 2^64 - 1\n\n  /**\n   * A (self-inverse) bijection which converts the ordering on unsigned longs to the ordering on\n   * longs, that is, {@code a <= b} as unsigned longs if and only if {@code flip(a) <= flip(b)}\n   * as signed longs.\n   */\n  private static long flip(long a) {\n    return a ^ Long.MIN_VALUE;\n  }\n\n  /**\n   * Compares the two specified {@code long} values, treating them as unsigned values between\n   * {@code 0} and {@code 2^64 - 1} inclusive.\n   *\n   * @param a the first unsigned {@code long} to compare\n   * @param b the second unsigned {@code long} to compare\n   * @return a negative value if {@code a} is less than {@code b}; a positive value if {@code a} is\n   *         greater than {@code b}; or zero if they are equal\n   */\n  @CheckReturnValue\n  public static int compare(long a, long b) {\n    return Longs.compare(flip(a), flip(b));\n  }\n\n  /**\n   * Returns the least value present in {@code array}, treating values as unsigned.\n   *\n   * @param array a <i>nonempty</i> array of unsigned {@code long} values\n   * @return the value present in {@code array} that is less than or equal to every other value in\n   *         the array according to {@link #compare}\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  @CheckReturnValue\n  public static long min(long... array) {\n    checkArgument(array.length > 0);\n    long min = flip(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      long next = flip(array[i]);\n      if (next < min) {\n        min = next;\n      }\n    }\n    return flip(min);\n  }\n\n  /**\n   * Returns the greatest value present in {@code array}, treating values as unsigned.\n   *\n   * @param array a <i>nonempty</i> array of unsigned {@code long} values\n   * @return the value present in {@code array} that is greater than or equal to every other value\n   *         in the array according to {@link #compare}\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  @CheckReturnValue\n  public static long max(long... array) {\n    checkArgument(array.length > 0);\n    long max = flip(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      long next = flip(array[i]);\n      if (next > max) {\n        max = next;\n      }\n    }\n    return flip(max);\n  }\n\n  /**\n   * Returns a string containing the supplied unsigned {@code long} values separated by\n   * {@code separator}. For example, {@code join(\"-\", 1, 2, 3)} returns the string {@code \"1-2-3\"}.\n   *\n   * @param separator the text that should appear between consecutive values in the resulting\n   *        string (but not at the start or end)\n   * @param array an array of unsigned {@code long} values, possibly empty\n   */\n  @CheckReturnValue\n  public static String join(String separator, long... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 5);\n    builder.append(toString(array[0]));\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(toString(array[i]));\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two arrays of unsigned {@code long} values\n   * lexicographically. That is, it compares, using {@link #compare(long, long)}), the first pair of\n   * values that follow any common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example, {@code [] < [1L] < [1L, 2L] < [2L] < [1L << 63]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link Object#equals(Object)} (since arrays\n   * support only identity equality), but it is consistent with\n   * {@link Arrays#equals(long[], long[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">Lexicographical order\n   *      article at Wikipedia</a>\n   */\n  @CheckReturnValue\n  public static Comparator<long[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  enum LexicographicalComparator implements Comparator<long[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(long[] left, long[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        if (left[i] != right[i]) {\n          return UnsignedLongs.compare(left[i], right[i]);\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Returns dividend / divisor, where the dividend and divisor are treated as unsigned 64-bit\n   * quantities.\n   *\n   * @param dividend the dividend (numerator)\n   * @param divisor the divisor (denominator)\n   * @throws ArithmeticException if divisor is 0\n   */\n  @CheckReturnValue\n  public static long divide(long dividend, long divisor) {\n    if (divisor < 0) { // i.e., divisor >= 2^63:\n      if (compare(dividend, divisor) < 0) {\n        return 0; // dividend < divisor\n      } else {\n        return 1; // dividend >= divisor\n      }\n    }\n\n    // Optimization - use signed division if dividend < 2^63\n    if (dividend >= 0) {\n      return dividend / divisor;\n    }\n\n    /*\n     * Otherwise, approximate the quotient, check, and correct if necessary. Our approximation is\n     * guaranteed to be either exact or one less than the correct value. This follows from fact\n     * that floor(floor(x)/i) == floor(x/i) for any real x and integer i != 0. The proof is not\n     * quite trivial.\n     */\n    long quotient = ((dividend >>> 1) / divisor) << 1;\n    long rem = dividend - quotient * divisor;\n    return quotient + (compare(rem, divisor) >= 0 ? 1 : 0);\n  }\n\n  /**\n   * Returns dividend % divisor, where the dividend and divisor are treated as unsigned 64-bit\n   * quantities.\n   *\n   * @param dividend the dividend (numerator)\n   * @param divisor the divisor (denominator)\n   * @throws ArithmeticException if divisor is 0\n   * @since 11.0\n   */\n  @CheckReturnValue\n  public static long remainder(long dividend, long divisor) {\n    if (divisor < 0) { // i.e., divisor >= 2^63:\n      if (compare(dividend, divisor) < 0) {\n        return dividend; // dividend < divisor\n      } else {\n        return dividend - divisor; // dividend >= divisor\n      }\n    }\n\n    // Optimization - use signed modulus if dividend < 2^63\n    if (dividend >= 0) {\n      return dividend % divisor;\n    }\n\n    /*\n     * Otherwise, approximate the quotient, check, and correct if necessary. Our approximation is\n     * guaranteed to be either exact or one less than the correct value. This follows from fact\n     * that floor(floor(x)/i) == floor(x/i) for any real x and integer i != 0. The proof is not\n     * quite trivial.\n     */\n    long quotient = ((dividend >>> 1) / divisor) << 1;\n    long rem = dividend - quotient * divisor;\n    return rem - (compare(rem, divisor) >= 0 ? divisor : 0);\n  }\n\n  /**\n   * Returns the unsigned {@code long} value represented by the given decimal string.\n   *\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         value\n   * @throws NullPointerException if {@code s} is null\n   *         (in contrast to {@link Long#parseLong(String)})\n   */\n  public static long parseUnsignedLong(String s) {\n    return parseUnsignedLong(s, 10);\n  }\n\n  /**\n   * Returns the unsigned {@code long} value represented by the given string.\n   *\n   * Accepts a decimal, hexadecimal, or octal number given by specifying the following prefix:\n   *\n   * <ul>\n   * <li>{@code 0x}<i>HexDigits</i>\n   * <li>{@code 0X}<i>HexDigits</i>\n   * <li>{@code #}<i>HexDigits</i>\n   * <li>{@code 0}<i>OctalDigits</i>\n   * </ul>\n   *\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         value\n   * @since 13.0\n   */\n  public static long decode(String stringValue) {\n    ParseRequest request = ParseRequest.fromString(stringValue);\n\n    try {\n      return parseUnsignedLong(request.rawValue, request.radix);\n    } catch (NumberFormatException e) {\n      NumberFormatException decodeException =\n          new NumberFormatException(\"Error parsing value: \" + stringValue);\n      decodeException.initCause(e);\n      throw decodeException;\n    }\n  }\n\n  /**\n   * Returns the unsigned {@code long} value represented by a string with the given radix.\n   *\n   * @param s the string containing the unsigned {@code long} representation to be parsed.\n   * @param radix the radix to use while parsing {@code s}\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         with the given radix, or if {@code radix} is not between {@link Character#MIN_RADIX}\n   *         and {@link Character#MAX_RADIX}.\n   * @throws NullPointerException if {@code s} is null\n   *         (in contrast to {@link Long#parseLong(String)})\n   */\n  public static long parseUnsignedLong(String s, int radix) {\n    checkNotNull(s);\n    if (s.length() == 0) {\n      throw new NumberFormatException(\"empty string\");\n    }\n    if (radix < Character.MIN_RADIX || radix > Character.MAX_RADIX) {\n      throw new NumberFormatException(\"illegal radix: \" + radix);\n    }\n\n    int max_safe_pos = maxSafeDigits[radix] - 1;\n    long value = 0;\n    for (int pos = 0; pos < s.length(); pos++) {\n      int digit = Character.digit(s.charAt(pos), radix);\n      if (digit == -1) {\n        throw new NumberFormatException(s);\n      }\n      if (pos > max_safe_pos && overflowInParse(value, digit, radix)) {\n        throw new NumberFormatException(\"Too large for unsigned long: \" + s);\n      }\n      value = (value * radix) + digit;\n    }\n\n    return value;\n  }\n\n  /**\n   * Returns true if (current * radix) + digit is a number too large to be represented by an\n   * unsigned long. This is useful for detecting overflow while parsing a string representation of\n   * a number. Does not verify whether supplied radix is valid, passing an invalid radix will give\n   * undefined results or an ArrayIndexOutOfBoundsException.\n   */\n  private static boolean overflowInParse(long current, int digit, int radix) {\n    if (current >= 0) {\n      if (current < maxValueDivs[radix]) {\n        return false;\n      }\n      if (current > maxValueDivs[radix]) {\n        return true;\n      }\n      // current == maxValueDivs[radix]\n      return (digit > maxValueMods[radix]);\n    }\n\n    // current < 0: high bit is set\n    return true;\n  }\n\n  /**\n   * Returns a string representation of x, where x is treated as unsigned.\n   */\n  @CheckReturnValue\n  public static String toString(long x) {\n    return toString(x, 10);\n  }\n\n  /**\n   * Returns a string representation of {@code x} for the given radix, where {@code x} is treated\n   * as unsigned.\n   *\n   * @param x the value to convert to a string.\n   * @param radix the radix to use while working with {@code x}\n   * @throws IllegalArgumentException if {@code radix} is not between {@link Character#MIN_RADIX}\n   *         and {@link Character#MAX_RADIX}.\n   */\n  @CheckReturnValue\n  public static String toString(long x, int radix) {\n    checkArgument(\n        radix >= Character.MIN_RADIX && radix <= Character.MAX_RADIX,\n        \"radix (%s) must be between Character.MIN_RADIX and Character.MAX_RADIX\",\n        radix);\n    if (x == 0) {\n      // Simply return \"0\"\n      return \"0\";\n    } else {\n      char[] buf = new char[64];\n      int i = buf.length;\n      if (x < 0) {\n        // Separate off the last digit using unsigned division. That will leave\n        // a number that is nonnegative as a signed integer.\n        long quotient = divide(x, radix);\n        long rem = x - quotient * radix;\n        buf[--i] = Character.forDigit((int) rem, radix);\n        x = quotient;\n      }\n      // Simple modulo/division approach\n      while (x > 0) {\n        buf[--i] = Character.forDigit((int) (x % radix), radix);\n        x /= radix;\n      }\n      // Generate string\n      return new String(buf, i, buf.length - i);\n    }\n  }\n\n  // calculated as 0xffffffffffffffff / radix\n  private static final long[] maxValueDivs = new long[Character.MAX_RADIX + 1];\n  private static final int[] maxValueMods = new int[Character.MAX_RADIX + 1];\n  private static final int[] maxSafeDigits = new int[Character.MAX_RADIX + 1];\n\n  static {\n    BigInteger overflow = new BigInteger(\"10000000000000000\", 16);\n    for (int i = Character.MIN_RADIX; i <= Character.MAX_RADIX; i++) {\n      maxValueDivs[i] = divide(MAX_VALUE, i);\n      maxValueMods[i] = (int) remainder(MAX_VALUE, i);\n      maxSafeDigits[i] = overflow.toString(i).length() - 1;\n    }\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ ],
  "tokensMethodArguments" : [ [ "s", "java.lang", "String" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "lines", "java.lang", "String", "public Stream<String> lines()" ], [ "toUpperCase", "java.lang", "String", "public String toUpperCase()" ], [ "indexOf", "java.lang", "String", "public int indexOf(String arg0, int arg1)" ], [ "equalsIgnoreCase", "java.lang", "String", "public boolean equalsIgnoreCase(String arg0)" ], [ "contains", "java.lang", "String", "public boolean contains(CharSequence arg0)" ], [ "trim", "java.lang", "String", "public String trim()" ], [ "subSequence", "java.lang", "String", "public CharSequence subSequence(int arg0, int arg1)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes(Charset arg0)" ], [ "startsWith", "java.lang", "String", "public boolean startsWith(String arg0, int arg1)" ], [ "charAt", "java.lang", "String", "public char charAt(int arg0)" ], [ "compareToIgnoreCase", "java.lang", "String", "public int compareToIgnoreCase(String arg0)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes()" ], [ "codePointAt", "java.lang", "String", "public int codePointAt(int arg0)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes(String arg0) throws UnsupportedEncodingException" ], [ "regionMatches", "java.lang", "String", "public boolean regionMatches(int arg0, String arg1, int arg2, int arg3)" ], [ "startsWith", "java.lang", "String", "public boolean startsWith(String arg0)" ], [ "contentEquals", "java.lang", "String", "public boolean contentEquals(CharSequence arg0)" ], [ "value", "java.lang", "String", "byte[] value()" ], [ "toUpperCase", "java.lang", "String", "public String toUpperCase(Locale arg0)" ], [ "substring", "java.lang", "String", "public String substring(int arg0, int arg1)" ], [ "toCharArray", "java.lang", "String", "public char[] toCharArray()" ], [ "stripTrailing", "java.lang", "String", "public String stripTrailing()" ], [ "regionMatches", "java.lang", "String", "public boolean regionMatches(boolean arg0, int arg1, String arg2, int arg3, int arg4)" ], [ "intern", "java.lang", "String", "public native String intern()" ], [ "describeConstable", "java.lang", "String", "public Optional<String> describeConstable()" ], [ "isBlank", "java.lang", "String", "public boolean isBlank()" ], [ "resolveConstantDesc", "java.lang", "String", "public String resolveConstantDesc(MethodHandles.Lookup arg0)" ], [ "length", "java.lang", "String", "public int length()" ], [ "translateEscapes", "java.lang", "String", "public String translateEscapes()" ], [ "indent", "java.lang", "String", "public String indent(int arg0)" ], [ "toLowerCase", "java.lang", "String", "public String toLowerCase()" ], [ "isLatin1", "java.lang", "String", "boolean isLatin1()" ], [ "contentEquals", "java.lang", "String", "public boolean contentEquals(StringBuffer arg0)" ], [ "indexOf", "java.lang", "String", "public int indexOf(int arg0, int arg1)" ], [ "toLowerCase", "java.lang", "String", "public String toLowerCase(Locale arg0)" ], [ "substring", "java.lang", "String", "public String substring(int arg0)" ], [ "codePoints", "java.lang", "String", "public IntStream codePoints()" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(String arg0)" ], [ "replace", "java.lang", "String", "public String replace(char arg0, char arg1)" ], [ "codePointBefore", "java.lang", "String", "public int codePointBefore(int arg0)" ], [ "matches", "java.lang", "String", "public boolean matches(String arg0)" ], [ "formatted", "java.lang", "String", "public String formatted(Object[] arg0)" ], [ "stripLeading", "java.lang", "String", "public String stripLeading()" ], [ "chars", "java.lang", "String", "public IntStream chars()" ], [ "offsetByCodePoints", "java.lang", "String", "public int offsetByCodePoints(int arg0, int arg1)" ], [ "compareTo", "java.lang", "String", "public int compareTo(String arg0)" ], [ "coder", "java.lang", "String", "byte coder()" ], [ "codePointCount", "java.lang", "String", "public int codePointCount(int arg0, int arg1)" ], [ "split", "java.lang", "String", "public String[] split(String arg0)" ], [ "equals", "java.lang", "String", "public boolean equals(Object arg0)" ], [ "indexOf", "java.lang", "String", "public int indexOf(int arg0)" ], [ "stripIndent", "java.lang", "String", "public String stripIndent()" ], [ "isEmpty", "java.lang", "String", "public boolean isEmpty()" ], [ "hashCode", "java.lang", "String", "public int hashCode()" ], [ "replace", "java.lang", "String", "public String replace(CharSequence arg0, CharSequence arg1)" ], [ "transform", "java.lang", "String", "public <R> R transform(Function<? super String, ? extends R> arg0)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(int arg0, int arg1)" ], [ "split", "java.lang", "String", "public String[] split(String arg0, int arg1)" ], [ "strip", "java.lang", "String", "public String strip()" ], [ "concat", "java.lang", "String", "public String concat(String arg0)" ], [ "endsWith", "java.lang", "String", "public boolean endsWith(String arg0)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(int arg0)" ], [ "replaceFirst", "java.lang", "String", "public String replaceFirst(String arg0, String arg1)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(String arg0, int arg1)" ], [ "toString", "java.lang", "String", "public String toString()" ], [ "replaceAll", "java.lang", "String", "public String replaceAll(String arg0, String arg1)" ], [ "indexOf", "java.lang", "String", "public int indexOf(String arg0)" ], [ "repeat", "java.lang", "String", "public String repeat(int arg0)" ], [ "compareTo", "java.lang", "Comparable", "public abstract int compareTo(T arg0)" ], [ "chars", "java.lang", "CharSequence", "public default IntStream chars()" ], [ "isEmpty", "java.lang", "CharSequence", "public default boolean isEmpty()" ], [ "toString", "java.lang", "CharSequence", "public abstract String toString()" ], [ "subSequence", "java.lang", "CharSequence", "public abstract CharSequence subSequence(int arg0, int arg1)" ], [ "charAt", "java.lang", "CharSequence", "public abstract char charAt(int arg0)" ], [ "length", "java.lang", "CharSequence", "public abstract int length()" ], [ "codePoints", "java.lang", "CharSequence", "public default IntStream codePoints()" ], [ "describeConstable", "java.lang.constant", "Constable", "public abstract Optional<? extends ConstantDesc> describeConstable()" ], [ "resolveConstantDesc", "java.lang.constant", "ConstantDesc", "public abstract Object resolveConstantDesc(MethodHandles.Lookup arg0) throws ReflectiveOperationException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 2163,
  "oracle" : ";",
  "oracleType" : "EXCEPT_POST",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "UnsignedLongs",
  "javadocTag" : "@throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n        value",
  "methodJavadoc" : "    /**\n   * Returns the unsigned {@code long} value represented by the given string.\n   *\n   * Accepts a decimal, hexadecimal, or octal number given by specifying the following prefix:\n   *\n   * <ul>\n   * <li>{@code 0x}<i>HexDigits</i>\n   * <li>{@code 0X}<i>HexDigits</i>\n   * <li>{@code #}<i>HexDigits</i>\n   * <li>{@code 0}<i>OctalDigits</i>\n   * </ul>\n   *\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         value\n   * @since 13.0\n   */",
  "methodSourceCode" : "public static long decode(String stringValue){\n    ParseRequest request = ParseRequest.fromString(stringValue);\n    try {\n        return parseUnsignedLong(request.rawValue, request.radix);\n    } catch (NumberFormatException e) {\n        NumberFormatException decodeException = new NumberFormatException(\"Error parsing value: \" + stringValue);\n        decodeException.initCause(e);\n        throw decodeException;\n    }\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code long} primitives that interpret values as\n * <i>unsigned</i> (that is, any negative value {@code x} is treated as the positive value\n * {@code 2^64 + x}). The methods for which signedness is not an issue are in {@link Longs}, as\n * well as signed versions of methods for which signedness is an issue.\n *\n * <p>In addition, this class provides several static methods for converting a {@code long} to a\n * {@code String} and a {@code String} to a {@code long} that treat the {@code long} as an unsigned\n * number.\n *\n * <p>Users of these utilities must be <i>extremely careful</i> not to mix up signed and unsigned\n * {@code long} values. When possible, it is recommended that the {@link UnsignedLong} wrapper\n * class be used, at a small efficiency penalty, to enforce the distinction in the type system.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained#unsigned-support\">\n * unsigned primitive utilities</a>.\n *\n * @author Louis Wasserman\n * @author Brian Milch\n * @author Colin Evans\n * @since 10.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2011 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkNotNull;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\n\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.Comparator;\n\nimport javax.annotation.CheckReturnValue;\n\n/**\n * Static utility methods pertaining to {@code long} primitives that interpret values as\n * <i>unsigned</i> (that is, any negative value {@code x} is treated as the positive value\n * {@code 2^64 + x}). The methods for which signedness is not an issue are in {@link Longs}, as\n * well as signed versions of methods for which signedness is an issue.\n *\n * <p>In addition, this class provides several static methods for converting a {@code long} to a\n * {@code String} and a {@code String} to a {@code long} that treat the {@code long} as an unsigned\n * number.\n *\n * <p>Users of these utilities must be <i>extremely careful</i> not to mix up signed and unsigned\n * {@code long} values. When possible, it is recommended that the {@link UnsignedLong} wrapper\n * class be used, at a small efficiency penalty, to enforce the distinction in the type system.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained#unsigned-support\">\n * unsigned primitive utilities</a>.\n *\n * @author Louis Wasserman\n * @author Brian Milch\n * @author Colin Evans\n * @since 10.0\n */\n@Beta\n@GwtCompatible\npublic final class UnsignedLongs {\n  private UnsignedLongs() {}\n\n  public static final long MAX_VALUE = -1L; // Equivalent to 2^64 - 1\n\n  /**\n   * A (self-inverse) bijection which converts the ordering on unsigned longs to the ordering on\n   * longs, that is, {@code a <= b} as unsigned longs if and only if {@code flip(a) <= flip(b)}\n   * as signed longs.\n   */\n  private static long flip(long a) {\n    return a ^ Long.MIN_VALUE;\n  }\n\n  /**\n   * Compares the two specified {@code long} values, treating them as unsigned values between\n   * {@code 0} and {@code 2^64 - 1} inclusive.\n   *\n   * @param a the first unsigned {@code long} to compare\n   * @param b the second unsigned {@code long} to compare\n   * @return a negative value if {@code a} is less than {@code b}; a positive value if {@code a} is\n   *         greater than {@code b}; or zero if they are equal\n   */\n  @CheckReturnValue\n  public static int compare(long a, long b) {\n    return Longs.compare(flip(a), flip(b));\n  }\n\n  /**\n   * Returns the least value present in {@code array}, treating values as unsigned.\n   *\n   * @param array a <i>nonempty</i> array of unsigned {@code long} values\n   * @return the value present in {@code array} that is less than or equal to every other value in\n   *         the array according to {@link #compare}\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  @CheckReturnValue\n  public static long min(long... array) {\n    checkArgument(array.length > 0);\n    long min = flip(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      long next = flip(array[i]);\n      if (next < min) {\n        min = next;\n      }\n    }\n    return flip(min);\n  }\n\n  /**\n   * Returns the greatest value present in {@code array}, treating values as unsigned.\n   *\n   * @param array a <i>nonempty</i> array of unsigned {@code long} values\n   * @return the value present in {@code array} that is greater than or equal to every other value\n   *         in the array according to {@link #compare}\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  @CheckReturnValue\n  public static long max(long... array) {\n    checkArgument(array.length > 0);\n    long max = flip(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      long next = flip(array[i]);\n      if (next > max) {\n        max = next;\n      }\n    }\n    return flip(max);\n  }\n\n  /**\n   * Returns a string containing the supplied unsigned {@code long} values separated by\n   * {@code separator}. For example, {@code join(\"-\", 1, 2, 3)} returns the string {@code \"1-2-3\"}.\n   *\n   * @param separator the text that should appear between consecutive values in the resulting\n   *        string (but not at the start or end)\n   * @param array an array of unsigned {@code long} values, possibly empty\n   */\n  @CheckReturnValue\n  public static String join(String separator, long... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 5);\n    builder.append(toString(array[0]));\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(toString(array[i]));\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two arrays of unsigned {@code long} values\n   * lexicographically. That is, it compares, using {@link #compare(long, long)}), the first pair of\n   * values that follow any common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example, {@code [] < [1L] < [1L, 2L] < [2L] < [1L << 63]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link Object#equals(Object)} (since arrays\n   * support only identity equality), but it is consistent with\n   * {@link Arrays#equals(long[], long[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">Lexicographical order\n   *      article at Wikipedia</a>\n   */\n  @CheckReturnValue\n  public static Comparator<long[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  enum LexicographicalComparator implements Comparator<long[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(long[] left, long[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        if (left[i] != right[i]) {\n          return UnsignedLongs.compare(left[i], right[i]);\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Returns dividend / divisor, where the dividend and divisor are treated as unsigned 64-bit\n   * quantities.\n   *\n   * @param dividend the dividend (numerator)\n   * @param divisor the divisor (denominator)\n   * @throws ArithmeticException if divisor is 0\n   */\n  @CheckReturnValue\n  public static long divide(long dividend, long divisor) {\n    if (divisor < 0) { // i.e., divisor >= 2^63:\n      if (compare(dividend, divisor) < 0) {\n        return 0; // dividend < divisor\n      } else {\n        return 1; // dividend >= divisor\n      }\n    }\n\n    // Optimization - use signed division if dividend < 2^63\n    if (dividend >= 0) {\n      return dividend / divisor;\n    }\n\n    /*\n     * Otherwise, approximate the quotient, check, and correct if necessary. Our approximation is\n     * guaranteed to be either exact or one less than the correct value. This follows from fact\n     * that floor(floor(x)/i) == floor(x/i) for any real x and integer i != 0. The proof is not\n     * quite trivial.\n     */\n    long quotient = ((dividend >>> 1) / divisor) << 1;\n    long rem = dividend - quotient * divisor;\n    return quotient + (compare(rem, divisor) >= 0 ? 1 : 0);\n  }\n\n  /**\n   * Returns dividend % divisor, where the dividend and divisor are treated as unsigned 64-bit\n   * quantities.\n   *\n   * @param dividend the dividend (numerator)\n   * @param divisor the divisor (denominator)\n   * @throws ArithmeticException if divisor is 0\n   * @since 11.0\n   */\n  @CheckReturnValue\n  public static long remainder(long dividend, long divisor) {\n    if (divisor < 0) { // i.e., divisor >= 2^63:\n      if (compare(dividend, divisor) < 0) {\n        return dividend; // dividend < divisor\n      } else {\n        return dividend - divisor; // dividend >= divisor\n      }\n    }\n\n    // Optimization - use signed modulus if dividend < 2^63\n    if (dividend >= 0) {\n      return dividend % divisor;\n    }\n\n    /*\n     * Otherwise, approximate the quotient, check, and correct if necessary. Our approximation is\n     * guaranteed to be either exact or one less than the correct value. This follows from fact\n     * that floor(floor(x)/i) == floor(x/i) for any real x and integer i != 0. The proof is not\n     * quite trivial.\n     */\n    long quotient = ((dividend >>> 1) / divisor) << 1;\n    long rem = dividend - quotient * divisor;\n    return rem - (compare(rem, divisor) >= 0 ? divisor : 0);\n  }\n\n  /**\n   * Returns the unsigned {@code long} value represented by the given decimal string.\n   *\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         value\n   * @throws NullPointerException if {@code s} is null\n   *         (in contrast to {@link Long#parseLong(String)})\n   */\n  public static long parseUnsignedLong(String s) {\n    return parseUnsignedLong(s, 10);\n  }\n\n  /**\n   * Returns the unsigned {@code long} value represented by the given string.\n   *\n   * Accepts a decimal, hexadecimal, or octal number given by specifying the following prefix:\n   *\n   * <ul>\n   * <li>{@code 0x}<i>HexDigits</i>\n   * <li>{@code 0X}<i>HexDigits</i>\n   * <li>{@code #}<i>HexDigits</i>\n   * <li>{@code 0}<i>OctalDigits</i>\n   * </ul>\n   *\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         value\n   * @since 13.0\n   */\n  public static long decode(String stringValue) {\n    ParseRequest request = ParseRequest.fromString(stringValue);\n\n    try {\n      return parseUnsignedLong(request.rawValue, request.radix);\n    } catch (NumberFormatException e) {\n      NumberFormatException decodeException =\n          new NumberFormatException(\"Error parsing value: \" + stringValue);\n      decodeException.initCause(e);\n      throw decodeException;\n    }\n  }\n\n  /**\n   * Returns the unsigned {@code long} value represented by a string with the given radix.\n   *\n   * @param s the string containing the unsigned {@code long} representation to be parsed.\n   * @param radix the radix to use while parsing {@code s}\n   * @throws NumberFormatException if the string does not contain a valid unsigned {@code long}\n   *         with the given radix, or if {@code radix} is not between {@link Character#MIN_RADIX}\n   *         and {@link Character#MAX_RADIX}.\n   * @throws NullPointerException if {@code s} is null\n   *         (in contrast to {@link Long#parseLong(String)})\n   */\n  public static long parseUnsignedLong(String s, int radix) {\n    checkNotNull(s);\n    if (s.length() == 0) {\n      throw new NumberFormatException(\"empty string\");\n    }\n    if (radix < Character.MIN_RADIX || radix > Character.MAX_RADIX) {\n      throw new NumberFormatException(\"illegal radix: \" + radix);\n    }\n\n    int max_safe_pos = maxSafeDigits[radix] - 1;\n    long value = 0;\n    for (int pos = 0; pos < s.length(); pos++) {\n      int digit = Character.digit(s.charAt(pos), radix);\n      if (digit == -1) {\n        throw new NumberFormatException(s);\n      }\n      if (pos > max_safe_pos && overflowInParse(value, digit, radix)) {\n        throw new NumberFormatException(\"Too large for unsigned long: \" + s);\n      }\n      value = (value * radix) + digit;\n    }\n\n    return value;\n  }\n\n  /**\n   * Returns true if (current * radix) + digit is a number too large to be represented by an\n   * unsigned long. This is useful for detecting overflow while parsing a string representation of\n   * a number. Does not verify whether supplied radix is valid, passing an invalid radix will give\n   * undefined results or an ArrayIndexOutOfBoundsException.\n   */\n  private static boolean overflowInParse(long current, int digit, int radix) {\n    if (current >= 0) {\n      if (current < maxValueDivs[radix]) {\n        return false;\n      }\n      if (current > maxValueDivs[radix]) {\n        return true;\n      }\n      // current == maxValueDivs[radix]\n      return (digit > maxValueMods[radix]);\n    }\n\n    // current < 0: high bit is set\n    return true;\n  }\n\n  /**\n   * Returns a string representation of x, where x is treated as unsigned.\n   */\n  @CheckReturnValue\n  public static String toString(long x) {\n    return toString(x, 10);\n  }\n\n  /**\n   * Returns a string representation of {@code x} for the given radix, where {@code x} is treated\n   * as unsigned.\n   *\n   * @param x the value to convert to a string.\n   * @param radix the radix to use while working with {@code x}\n   * @throws IllegalArgumentException if {@code radix} is not between {@link Character#MIN_RADIX}\n   *         and {@link Character#MAX_RADIX}.\n   */\n  @CheckReturnValue\n  public static String toString(long x, int radix) {\n    checkArgument(\n        radix >= Character.MIN_RADIX && radix <= Character.MAX_RADIX,\n        \"radix (%s) must be between Character.MIN_RADIX and Character.MAX_RADIX\",\n        radix);\n    if (x == 0) {\n      // Simply return \"0\"\n      return \"0\";\n    } else {\n      char[] buf = new char[64];\n      int i = buf.length;\n      if (x < 0) {\n        // Separate off the last digit using unsigned division. That will leave\n        // a number that is nonnegative as a signed integer.\n        long quotient = divide(x, radix);\n        long rem = x - quotient * radix;\n        buf[--i] = Character.forDigit((int) rem, radix);\n        x = quotient;\n      }\n      // Simple modulo/division approach\n      while (x > 0) {\n        buf[--i] = Character.forDigit((int) (x % radix), radix);\n        x /= radix;\n      }\n      // Generate string\n      return new String(buf, i, buf.length - i);\n    }\n  }\n\n  // calculated as 0xffffffffffffffff / radix\n  private static final long[] maxValueDivs = new long[Character.MAX_RADIX + 1];\n  private static final int[] maxValueMods = new int[Character.MAX_RADIX + 1];\n  private static final int[] maxSafeDigits = new int[Character.MAX_RADIX + 1];\n\n  static {\n    BigInteger overflow = new BigInteger(\"10000000000000000\", 16);\n    for (int i = Character.MIN_RADIX; i <= Character.MAX_RADIX; i++) {\n      maxValueDivs[i] = divide(MAX_VALUE, i);\n      maxValueMods[i] = (int) remainder(MAX_VALUE, i);\n      maxSafeDigits[i] = overflow.toString(i).length() - 1;\n    }\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ [ "0", "int" ], [ "0", "int" ], [ "0", "int" ], [ "13.0", "double" ] ],
  "tokensMethodArguments" : [ [ "stringValue", "java.lang", "String" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "strip", "java.lang", "String", "public String strip()" ], [ "formatted", "java.lang", "String", "public String formatted(Object[] arg0)" ], [ "replace", "java.lang", "String", "public String replace(char arg0, char arg1)" ], [ "resolveConstantDesc", "java.lang", "String", "public String resolveConstantDesc(MethodHandles.Lookup arg0)" ], [ "startsWith", "java.lang", "String", "public boolean startsWith(String arg0)" ], [ "length", "java.lang", "String", "public int length()" ], [ "lines", "java.lang", "String", "public Stream<String> lines()" ], [ "split", "java.lang", "String", "public String[] split(String arg0, int arg1)" ], [ "indexOf", "java.lang", "String", "public int indexOf(int arg0)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(int arg0)" ], [ "toCharArray", "java.lang", "String", "public char[] toCharArray()" ], [ "indexOf", "java.lang", "String", "public int indexOf(String arg0, int arg1)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(String arg0)" ], [ "isEmpty", "java.lang", "String", "public boolean isEmpty()" ], [ "value", "java.lang", "String", "byte[] value()" ], [ "equalsIgnoreCase", "java.lang", "String", "public boolean equalsIgnoreCase(String arg0)" ], [ "startsWith", "java.lang", "String", "public boolean startsWith(String arg0, int arg1)" ], [ "offsetByCodePoints", "java.lang", "String", "public int offsetByCodePoints(int arg0, int arg1)" ], [ "subSequence", "java.lang", "String", "public CharSequence subSequence(int arg0, int arg1)" ], [ "matches", "java.lang", "String", "public boolean matches(String arg0)" ], [ "regionMatches", "java.lang", "String", "public boolean regionMatches(int arg0, String arg1, int arg2, int arg3)" ], [ "describeConstable", "java.lang", "String", "public Optional<String> describeConstable()" ], [ "codePointAt", "java.lang", "String", "public int codePointAt(int arg0)" ], [ "toUpperCase", "java.lang", "String", "public String toUpperCase(Locale arg0)" ], [ "stripTrailing", "java.lang", "String", "public String stripTrailing()" ], [ "translateEscapes", "java.lang", "String", "public String translateEscapes()" ], [ "contains", "java.lang", "String", "public boolean contains(CharSequence arg0)" ], [ "indexOf", "java.lang", "String", "public int indexOf(String arg0)" ], [ "transform", "java.lang", "String", "public <R> R transform(Function<? super String, ? extends R> arg0)" ], [ "indent", "java.lang", "String", "public String indent(int arg0)" ], [ "stripIndent", "java.lang", "String", "public String stripIndent()" ], [ "concat", "java.lang", "String", "public String concat(String arg0)" ], [ "substring", "java.lang", "String", "public String substring(int arg0, int arg1)" ], [ "chars", "java.lang", "String", "public IntStream chars()" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes()" ], [ "split", "java.lang", "String", "public String[] split(String arg0)" ], [ "compareTo", "java.lang", "String", "public int compareTo(String arg0)" ], [ "coder", "java.lang", "String", "byte coder()" ], [ "toLowerCase", "java.lang", "String", "public String toLowerCase(Locale arg0)" ], [ "repeat", "java.lang", "String", "public String repeat(int arg0)" ], [ "codePointCount", "java.lang", "String", "public int codePointCount(int arg0, int arg1)" ], [ "stripLeading", "java.lang", "String", "public String stripLeading()" ], [ "regionMatches", "java.lang", "String", "public boolean regionMatches(boolean arg0, int arg1, String arg2, int arg3, int arg4)" ], [ "substring", "java.lang", "String", "public String substring(int arg0)" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(int arg0, int arg1)" ], [ "toLowerCase", "java.lang", "String", "public String toLowerCase()" ], [ "lastIndexOf", "java.lang", "String", "public int lastIndexOf(String arg0, int arg1)" ], [ "codePoints", "java.lang", "String", "public IntStream codePoints()" ], [ "toString", "java.lang", "String", "public String toString()" ], [ "charAt", "java.lang", "String", "public char charAt(int arg0)" ], [ "replace", "java.lang", "String", "public String replace(CharSequence arg0, CharSequence arg1)" ], [ "isBlank", "java.lang", "String", "public boolean isBlank()" ], [ "contentEquals", "java.lang", "String", "public boolean contentEquals(StringBuffer arg0)" ], [ "endsWith", "java.lang", "String", "public boolean endsWith(String arg0)" ], [ "replaceAll", "java.lang", "String", "public String replaceAll(String arg0, String arg1)" ], [ "replaceFirst", "java.lang", "String", "public String replaceFirst(String arg0, String arg1)" ], [ "isLatin1", "java.lang", "String", "boolean isLatin1()" ], [ "toUpperCase", "java.lang", "String", "public String toUpperCase()" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes(String arg0) throws UnsupportedEncodingException" ], [ "contentEquals", "java.lang", "String", "public boolean contentEquals(CharSequence arg0)" ], [ "codePointBefore", "java.lang", "String", "public int codePointBefore(int arg0)" ], [ "hashCode", "java.lang", "String", "public int hashCode()" ], [ "compareToIgnoreCase", "java.lang", "String", "public int compareToIgnoreCase(String arg0)" ], [ "indexOf", "java.lang", "String", "public int indexOf(int arg0, int arg1)" ], [ "equals", "java.lang", "String", "public boolean equals(Object arg0)" ], [ "getBytes", "java.lang", "String", "public byte[] getBytes(Charset arg0)" ], [ "intern", "java.lang", "String", "public native String intern()" ], [ "trim", "java.lang", "String", "public String trim()" ], [ "compareTo", "java.lang", "Comparable", "public abstract int compareTo(T arg0)" ], [ "chars", "java.lang", "CharSequence", "public default IntStream chars()" ], [ "isEmpty", "java.lang", "CharSequence", "public default boolean isEmpty()" ], [ "subSequence", "java.lang", "CharSequence", "public abstract CharSequence subSequence(int arg0, int arg1)" ], [ "toString", "java.lang", "CharSequence", "public abstract String toString()" ], [ "charAt", "java.lang", "CharSequence", "public abstract char charAt(int arg0)" ], [ "length", "java.lang", "CharSequence", "public abstract int length()" ], [ "codePoints", "java.lang", "CharSequence", "public default IntStream codePoints()" ], [ "describeConstable", "java.lang.constant", "Constable", "public abstract Optional<? extends ConstantDesc> describeConstable()" ], [ "resolveConstantDesc", "java.lang.constant", "ConstantDesc", "public abstract Object resolveConstantDesc(MethodHandles.Lookup arg0) throws ReflectiveOperationException" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
}, {
  "id" : 2182,
  "oracle" : ";",
  "oracleType" : "PRE",
  "projectName" : "guava-19.0",
  "packageName" : "com.google.common.primitives",
  "className" : "Shorts",
  "javadocTag" : "@param array an array of {@code short} values, possibly empty",
  "methodJavadoc" : "    /**\n   * Returns the index of the first appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * @param array an array of {@code short} values, possibly empty\n   * @param target a primitive {@code short} value\n   * @return the least index {@code i} for which {@code array[i] == target}, or\n   *     {@code -1} if no such index exists.\n   */",
  "methodSourceCode" : "public static int indexOf(short[] array, short target){\n    return indexOf(array, target, 0, array.length);\n}",
  "classJavadoc" : "/**\n * Static utility methods pertaining to {@code short} primitives, that are not\n * already found in either {@link Short} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */",
  "classSourceCode" : "/*\n * Copyright (C) 2008 The Guava Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.common.primitives;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkElementIndex;\nimport static com.google.common.base.Preconditions.checkNotNull;\nimport static com.google.common.base.Preconditions.checkPositionIndexes;\n\nimport com.google.common.annotations.Beta;\nimport com.google.common.annotations.GwtCompatible;\nimport com.google.common.annotations.GwtIncompatible;\nimport com.google.common.base.Converter;\n\nimport java.io.Serializable;\nimport java.util.AbstractList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.RandomAccess;\n\nimport javax.annotation.CheckReturnValue;\n\n/**\n * Static utility methods pertaining to {@code short} primitives, that are not\n * already found in either {@link Short} or {@link Arrays}.\n *\n * <p>See the Guava User Guide article on <a href=\n * \"https://github.com/google/guava/wiki/PrimitivesExplained\">\n * primitive utilities</a>.\n *\n * @author Kevin Bourrillion\n * @since 1.0\n */\n@CheckReturnValue\n@GwtCompatible(emulated = true)\npublic final class Shorts {\n  private Shorts() {}\n\n  /**\n   * The number of bytes required to represent a primitive {@code short}\n   * value.\n   */\n  public static final int BYTES = Short.SIZE / Byte.SIZE;\n\n  /**\n   * The largest power of two that can be represented as a {@code short}.\n   *\n   * @since 10.0\n   */\n  public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);\n\n  /**\n   * Returns a hash code for {@code value}; equal to the result of invoking\n   * {@code ((Short) value).hashCode()}.\n   *\n   * @param value a primitive {@code short} value\n   * @return a hash code for the value\n   */\n  public static int hashCode(short value) {\n    return value;\n  }\n\n  /**\n   * Returns the {@code short} value that is equal to {@code value}, if\n   * possible.\n   *\n   * @param value any value in the range of the {@code short} type\n   * @return the {@code short} value that equals {@code value}\n   * @throws IllegalArgumentException if {@code value} is greater than {@link\n   *     Short#MAX_VALUE} or less than {@link Short#MIN_VALUE}\n   */\n  public static short checkedCast(long value) {\n    short result = (short) value;\n    if (result != value) {\n      // don't use checkArgument here, to avoid boxing\n      throw new IllegalArgumentException(\"Out of range: \" + value);\n    }\n    return result;\n  }\n\n  /**\n   * Returns the {@code short} nearest in value to {@code value}.\n   *\n   * @param value any {@code long} value\n   * @return the same value cast to {@code short} if it is in the range of the\n   *     {@code short} type, {@link Short#MAX_VALUE} if it is too large,\n   *     or {@link Short#MIN_VALUE} if it is too small\n   */\n  public static short saturatedCast(long value) {\n    if (value > Short.MAX_VALUE) {\n      return Short.MAX_VALUE;\n    }\n    if (value < Short.MIN_VALUE) {\n      return Short.MIN_VALUE;\n    }\n    return (short) value;\n  }\n\n  /**\n   * Compares the two specified {@code short} values. The sign of the value\n   * returned is the same as that of {@code ((Short) a).compareTo(b)}.\n   *\n   * <p><b>Note for Java 7 and later:</b> this method should be treated as\n   * deprecated; use the equivalent {@link Short#compare} method instead.\n   *\n   * @param a the first {@code short} to compare\n   * @param b the second {@code short} to compare\n   * @return a negative value if {@code a} is less than {@code b}; a positive\n   *     value if {@code a} is greater than {@code b}; or zero if they are equal\n   */\n  public static int compare(short a, short b) {\n    return a - b; // safe due to restricted range\n  }\n\n  /**\n   * Returns {@code true} if {@code target} is present as an element anywhere in\n   * {@code array}.\n   *\n   * @param array an array of {@code short} values, possibly empty\n   * @param target a primitive {@code short} value\n   * @return {@code true} if {@code array[i] == target} for some value of {@code\n   *     i}\n   */\n  public static boolean contains(short[] array, short target) {\n    for (short value : array) {\n      if (value == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the index of the first appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * @param array an array of {@code short} values, possibly empty\n   * @param target a primitive {@code short} value\n   * @return the least index {@code i} for which {@code array[i] == target}, or\n   *     {@code -1} if no such index exists.\n   */\n  public static int indexOf(short[] array, short target) {\n    return indexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int indexOf(short[] array, short target, int start, int end) {\n    for (int i = start; i < end; i++) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the start position of the first occurrence of the specified {@code\n   * target} within {@code array}, or {@code -1} if there is no such occurrence.\n   *\n   * <p>More formally, returns the lowest index {@code i} such that {@code\n   * java.util.Arrays.copyOfRange(array, i, i + target.length)} contains exactly\n   * the same elements as {@code target}.\n   *\n   * @param array the array to search for the sequence {@code target}\n   * @param target the array to search for as a sub-sequence of {@code array}\n   */\n  public static int indexOf(short[] array, short[] target) {\n    checkNotNull(array, \"array\");\n    checkNotNull(target, \"target\");\n    if (target.length == 0) {\n      return 0;\n    }\n\n    outer:\n    for (int i = 0; i < array.length - target.length + 1; i++) {\n      for (int j = 0; j < target.length; j++) {\n        if (array[i + j] != target[j]) {\n          continue outer;\n        }\n      }\n      return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the index of the last appearance of the value {@code target} in\n   * {@code array}.\n   *\n   * @param array an array of {@code short} values, possibly empty\n   * @param target a primitive {@code short} value\n   * @return the greatest index {@code i} for which {@code array[i] == target},\n   *     or {@code -1} if no such index exists.\n   */\n  public static int lastIndexOf(short[] array, short target) {\n    return lastIndexOf(array, target, 0, array.length);\n  }\n\n  // TODO(kevinb): consider making this public\n  private static int lastIndexOf(short[] array, short target, int start, int end) {\n    for (int i = end - 1; i >= start; i--) {\n      if (array[i] == target) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the least value present in {@code array}.\n   *\n   * @param array a <i>nonempty</i> array of {@code short} values\n   * @return the value present in {@code array} that is less than or equal to\n   *     every other value in the array\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  public static short min(short... array) {\n    checkArgument(array.length > 0);\n    short min = array[0];\n    for (int i = 1; i < array.length; i++) {\n      if (array[i] < min) {\n        min = array[i];\n      }\n    }\n    return min;\n  }\n\n  /**\n   * Returns the greatest value present in {@code array}.\n   *\n   * @param array a <i>nonempty</i> array of {@code short} values\n   * @return the value present in {@code array} that is greater than or equal to\n   *     every other value in the array\n   * @throws IllegalArgumentException if {@code array} is empty\n   */\n  public static short max(short... array) {\n    checkArgument(array.length > 0);\n    short max = array[0];\n    for (int i = 1; i < array.length; i++) {\n      if (array[i] > max) {\n        max = array[i];\n      }\n    }\n    return max;\n  }\n\n  /**\n   * Returns the values from each provided array combined into a single array.\n   * For example, {@code concat(new short[] {a, b}, new short[] {}, new\n   * short[] {c}} returns the array {@code {a, b, c}}.\n   *\n   * @param arrays zero or more {@code short} arrays\n   * @return a single array containing all the values from the source arrays, in\n   *     order\n   */\n  public static short[] concat(short[]... arrays) {\n    int length = 0;\n    for (short[] array : arrays) {\n      length += array.length;\n    }\n    short[] result = new short[length];\n    int pos = 0;\n    for (short[] array : arrays) {\n      System.arraycopy(array, 0, result, pos, array.length);\n      pos += array.length;\n    }\n    return result;\n  }\n\n  /**\n   * Returns a big-endian representation of {@code value} in a 2-element byte\n   * array; equivalent to {@code\n   * ByteBuffer.allocate(2).putShort(value).array()}.  For example, the input\n   * value {@code (short) 0x1234} would yield the byte array {@code {0x12,\n   * 0x34}}.\n   *\n   * <p>If you need to convert and concatenate several values (possibly even of\n   * different types), use a shared {@link java.nio.ByteBuffer} instance, or use\n   * {@link com.google.common.io.ByteStreams#newDataOutput()} to get a growable\n   * buffer.\n   */\n  @GwtIncompatible(\"doesn't work\")\n  public static byte[] toByteArray(short value) {\n    return new byte[] {\n      (byte) (value >> 8),\n      (byte) value\n    };\n  }\n\n  /**\n   * Returns the {@code short} value whose big-endian representation is\n   * stored in the first 2 bytes of {@code bytes}; equivalent to {@code\n   * ByteBuffer.wrap(bytes).getShort()}. For example, the input byte array\n   * {@code {0x54, 0x32}} would yield the {@code short} value {@code 0x5432}.\n   *\n   * <p>Arguably, it's preferable to use {@link java.nio.ByteBuffer}; that\n   * library exposes much more flexibility at little cost in readability.\n   *\n   * @throws IllegalArgumentException if {@code bytes} has fewer than 2\n   *     elements\n   */\n  @GwtIncompatible(\"doesn't work\")\n  public static short fromByteArray(byte[] bytes) {\n    checkArgument(bytes.length >= BYTES, \"array too small: %s < %s\", bytes.length, BYTES);\n    return fromBytes(bytes[0], bytes[1]);\n  }\n\n  /**\n   * Returns the {@code short} value whose byte representation is the given 2\n   * bytes, in big-endian order; equivalent to {@code Shorts.fromByteArray(new\n   * byte[] {b1, b2})}.\n   *\n   * @since 7.0\n   */\n  @GwtIncompatible(\"doesn't work\")\n  public static short fromBytes(byte b1, byte b2) {\n    return (short) ((b1 << 8) | (b2 & 0xFF));\n  }\n\n  private static final class ShortConverter extends Converter<String, Short>\n      implements Serializable {\n    static final ShortConverter INSTANCE = new ShortConverter();\n\n    @Override\n    protected Short doForward(String value) {\n      return Short.decode(value);\n    }\n\n    @Override\n    protected String doBackward(Short value) {\n      return value.toString();\n    }\n\n    @Override\n    public String toString() {\n      return \"Shorts.stringConverter()\";\n    }\n\n    private Object readResolve() {\n      return INSTANCE;\n    }\n\n    private static final long serialVersionUID = 1;\n  }\n\n  /**\n   * Returns a serializable converter object that converts between strings and\n   * shorts using {@link Short#decode} and {@link Short#toString()}.\n   *\n   * @since 16.0\n   */\n  @Beta\n  public static Converter<String, Short> stringConverter() {\n    return ShortConverter.INSTANCE;\n  }\n\n  /**\n   * Returns an array containing the same values as {@code array}, but\n   * guaranteed to be of a specified minimum length. If {@code array} already\n   * has a length of at least {@code minLength}, it is returned directly.\n   * Otherwise, a new array of size {@code minLength + padding} is returned,\n   * containing the values of {@code array}, and zeroes in the remaining places.\n   *\n   * @param array the source array\n   * @param minLength the minimum length the returned array must guarantee\n   * @param padding an extra amount to \"grow\" the array by if growth is\n   *     necessary\n   * @throws IllegalArgumentException if {@code minLength} or {@code padding} is\n   *     negative\n   * @return an array containing the values of {@code array}, with guaranteed\n   *     minimum length {@code minLength}\n   */\n  public static short[] ensureCapacity(short[] array, int minLength, int padding) {\n    checkArgument(minLength >= 0, \"Invalid minLength: %s\", minLength);\n    checkArgument(padding >= 0, \"Invalid padding: %s\", padding);\n    return (array.length < minLength)\n        ? copyOf(array, minLength + padding)\n        : array;\n  }\n\n  // Arrays.copyOf() requires Java 6\n  private static short[] copyOf(short[] original, int length) {\n    short[] copy = new short[length];\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, length));\n    return copy;\n  }\n\n  /**\n   * Returns a string containing the supplied {@code short} values separated\n   * by {@code separator}. For example, {@code join(\"-\", (short) 1, (short) 2,\n   * (short) 3)} returns the string {@code \"1-2-3\"}.\n   *\n   * @param separator the text that should appear between consecutive values in\n   *     the resulting string (but not at the start or end)\n   * @param array an array of {@code short} values, possibly empty\n   */\n  public static String join(String separator, short... array) {\n    checkNotNull(separator);\n    if (array.length == 0) {\n      return \"\";\n    }\n\n    // For pre-sizing a builder, just get the right order of magnitude\n    StringBuilder builder = new StringBuilder(array.length * 6);\n    builder.append(array[0]);\n    for (int i = 1; i < array.length; i++) {\n      builder.append(separator).append(array[i]);\n    }\n    return builder.toString();\n  }\n\n  /**\n   * Returns a comparator that compares two {@code short} arrays\n   * lexicographically. That is, it compares, using {@link\n   * #compare(short, short)}), the first pair of values that follow any\n   * common prefix, or when one array is a prefix of the other, treats the\n   * shorter array as the lesser. For example, {@code [] < [(short) 1] <\n   * [(short) 1, (short) 2] < [(short) 2]}.\n   *\n   * <p>The returned comparator is inconsistent with {@link\n   * Object#equals(Object)} (since arrays support only identity equality), but\n   * it is consistent with {@link Arrays#equals(short[], short[])}.\n   *\n   * @see <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\">\n   *     Lexicographical order article at Wikipedia</a>\n   * @since 2.0\n   */\n  public static Comparator<short[]> lexicographicalComparator() {\n    return LexicographicalComparator.INSTANCE;\n  }\n\n  private enum LexicographicalComparator implements Comparator<short[]> {\n    INSTANCE;\n\n    @Override\n    public int compare(short[] left, short[] right) {\n      int minLength = Math.min(left.length, right.length);\n      for (int i = 0; i < minLength; i++) {\n        int result = Shorts.compare(left[i], right[i]);\n        if (result != 0) {\n          return result;\n        }\n      }\n      return left.length - right.length;\n    }\n  }\n\n  /**\n   * Returns an array containing each value of {@code collection}, converted to\n   * a {@code short} value in the manner of {@link Number#shortValue}.\n   *\n   * <p>Elements are copied from the argument collection as if by {@code\n   * collection.toArray()}.  Calling this method is as thread-safe as calling\n   * that method.\n   *\n   * @param collection a collection of {@code Number} instances\n   * @return an array containing the same values as {@code collection}, in the\n   *     same order, converted to primitives\n   * @throws NullPointerException if {@code collection} or any of its elements\n   *     is null\n   * @since 1.0 (parameter was {@code Collection<Short>} before 12.0)\n   */\n  public static short[] toArray(Collection<? extends Number> collection) {\n    if (collection instanceof ShortArrayAsList) {\n      return ((ShortArrayAsList) collection).toShortArray();\n    }\n\n    Object[] boxedArray = collection.toArray();\n    int len = boxedArray.length;\n    short[] array = new short[len];\n    for (int i = 0; i < len; i++) {\n      // checkNotNull for GWT (do not optimize)\n      array[i] = ((Number) checkNotNull(boxedArray[i])).shortValue();\n    }\n    return array;\n  }\n\n  /**\n   * Returns a fixed-size list backed by the specified array, similar to {@link\n   * Arrays#asList(Object[])}. The list supports {@link List#set(int, Object)},\n   * but any attempt to set a value to {@code null} will result in a {@link\n   * NullPointerException}.\n   *\n   * <p>The returned list maintains the values, but not the identities, of\n   * {@code Short} objects written to or read from it.  For example, whether\n   * {@code list.get(0) == list.get(0)} is true for the returned list is\n   * unspecified.\n   *\n   * @param backingArray the array to back the list\n   * @return a list view of the array\n   */\n  public static List<Short> asList(short... backingArray) {\n    if (backingArray.length == 0) {\n      return Collections.emptyList();\n    }\n    return new ShortArrayAsList(backingArray);\n  }\n\n  @GwtCompatible\n  private static class ShortArrayAsList extends AbstractList<Short>\n      implements RandomAccess, Serializable {\n    final short[] array;\n    final int start;\n    final int end;\n\n    ShortArrayAsList(short[] array) {\n      this(array, 0, array.length);\n    }\n\n    ShortArrayAsList(short[] array, int start, int end) {\n      this.array = array;\n      this.start = start;\n      this.end = end;\n    }\n\n    @Override\n    public int size() {\n      return end - start;\n    }\n\n    @Override\n    public boolean isEmpty() {\n      return false;\n    }\n\n    @Override\n    public Short get(int index) {\n      checkElementIndex(index, size());\n      return array[start + index];\n    }\n\n    @Override\n    public boolean contains(Object target) {\n      // Overridden to prevent a ton of boxing\n      return (target instanceof Short) && Shorts.indexOf(array, (Short) target, start, end) != -1;\n    }\n\n    @Override\n    public int indexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Short) {\n        int i = Shorts.indexOf(array, (Short) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public int lastIndexOf(Object target) {\n      // Overridden to prevent a ton of boxing\n      if (target instanceof Short) {\n        int i = Shorts.lastIndexOf(array, (Short) target, start, end);\n        if (i >= 0) {\n          return i - start;\n        }\n      }\n      return -1;\n    }\n\n    @Override\n    public Short set(int index, Short element) {\n      checkElementIndex(index, size());\n      short oldValue = array[start + index];\n      // checkNotNull for GWT (do not optimize)\n      array[start + index] = checkNotNull(element);\n      return oldValue;\n    }\n\n    @Override\n    public List<Short> subList(int fromIndex, int toIndex) {\n      int size = size();\n      checkPositionIndexes(fromIndex, toIndex, size);\n      if (fromIndex == toIndex) {\n        return Collections.emptyList();\n      }\n      return new ShortArrayAsList(array, start + fromIndex, start + toIndex);\n    }\n\n    @Override\n    public boolean equals(Object object) {\n      if (object == this) {\n        return true;\n      }\n      if (object instanceof ShortArrayAsList) {\n        ShortArrayAsList that = (ShortArrayAsList) object;\n        int size = size();\n        if (that.size() != size) {\n          return false;\n        }\n        for (int i = 0; i < size; i++) {\n          if (array[start + i] != that.array[that.start + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return super.equals(object);\n    }\n\n    @Override\n    public int hashCode() {\n      int result = 1;\n      for (int i = start; i < end; i++) {\n        result = 31 * result + Shorts.hashCode(array[i]);\n      }\n      return result;\n    }\n\n    @Override\n    public String toString() {\n      StringBuilder builder = new StringBuilder(size() * 6);\n      builder.append('[').append(array[start]);\n      for (int i = start + 1; i < end; i++) {\n        builder.append(\", \").append(array[i]);\n      }\n      return builder.append(']').toString();\n    }\n\n    short[] toShortArray() {\n      // Arrays.copyOfRange() is not available under GWT\n      int size = size();\n      short[] result = new short[size];\n      System.arraycopy(array, start, result, 0, size);\n      return result;\n    }\n\n    private static final long serialVersionUID = 0;\n  }\n}\n",
  "tokensGeneralGrammar" : [ "null", "true", "false", ",", ".", ":", ";", "?", "(", ")", "jdVar", "stream", "Arrays", "allMatch", "noneMatch", "anyMatch", "~", ">>", "<<", ">>>", "|", "&", "^", "+", "-", "/", "*", "%", "&&", "||", ">=", "<=", ">", "<", "==", "!=", "instanceof", "class", "methodResultID", "this" ],
  "tokensGeneralValuesGlobalDictionary" : [ [ "0", "int" ], [ "1", "int" ], [ "-1", "int" ], [ "0.0", "double" ], [ "1.0", "double" ], [ "-1.0", "double" ], [ "\"\"", "String" ], [ "\" \"", "String" ] ],
  "tokensProjectClasses" : [ [ "CharEscaper", "com.google.common.escape" ], [ "ArrayBasedEscaperMap", "com.google.common.escape" ], [ "ArrayBasedUnicodeEscaper", "com.google.common.escape" ], [ "CharEscaperBuilder", "com.google.common.escape" ], [ "Escapers", "com.google.common.escape" ], [ "Platform", "com.google.common.escape" ], [ "Escaper", "com.google.common.escape" ], [ "UnicodeEscaper", "com.google.common.escape" ], [ "ArrayBasedCharEscaper", "com.google.common.escape" ], [ "DiscreteDomain", "com.google.common.collect" ], [ "NullsLastOrdering", "com.google.common.collect" ], [ "ImmutableSortedMap", "com.google.common.collect" ], [ "FilteredMultimapValues", "com.google.common.collect" ], [ "Multiset", "com.google.common.collect" ], [ "WellBehavedMap", "com.google.common.collect" ], [ "ClassToInstanceMap", "com.google.common.collect" ], [ "AbstractMapBasedMultiset", "com.google.common.collect" ], [ "Cut", "com.google.common.collect" ], [ "ForwardingConcurrentMap", "com.google.common.collect" ], [ "AbstractBiMap", "com.google.common.collect" ], [ "AbstractSetMultimap", "com.google.common.collect" ], [ "Sets", "com.google.common.collect" ], [ "Serialization", "com.google.common.collect" ], [ "MapConstraint", "com.google.common.collect" ], [ "MapConstraints", "com.google.common.collect" ], [ "ForwardingImmutableList", "com.google.common.collect" ], [ "AbstractRangeSet", "com.google.common.collect" ], [ "RegularImmutableAsList", "com.google.common.collect" ], [ "SortedMultisets", "com.google.common.collect" ], [ "HashBasedTable", "com.google.common.collect" ], [ "EmptyImmutableSetMultimap", "com.google.common.collect" ], [ "ImmutableSortedSetFauxverideShim", "com.google.common.collect" ], [ "Iterables", "com.google.common.collect" ], [ "Iterators", "com.google.common.collect" ], [ "Constraints", "com.google.common.collect" ], [ "NullsFirstOrdering", "com.google.common.collect" ], [ "ImmutableSetMultimap", "com.google.common.collect" ], [ "ForwardingImmutableCollection", "com.google.common.collect" ], [ "RegularContiguousSet", "com.google.common.collect" ], [ "ImmutableEnumSet", "com.google.common.collect" ], [ "ForwardingMultiset", "com.google.common.collect" ], [ "TreeMultimap", "com.google.common.collect" ], [ "ForwardingSortedSetMultimap", "com.google.common.collect" ], [ "Synchronized", "com.google.common.collect" ], [ "UnmodifiableIterator", "com.google.common.collect" ], [ "RegularImmutableSet", "com.google.common.collect" ], [ "BinaryTreeTraverser", "com.google.common.collect" ], [ "HashMultiset", "com.google.common.collect" ], [ "Hashing", "com.google.common.collect" ], [ "LinkedHashMultimap", "com.google.common.collect" ], [ "ImmutableMapValues", "com.google.common.collect" ], [ "ForwardingMap", "com.google.common.collect" ], [ "MultimapBuilder", "com.google.common.collect" ], [ "ImmutableMultiset", "com.google.common.collect" ], [ "ImmutableEntry", "com.google.common.collect" ], [ "ImmutableSet", "com.google.common.collect" ], [ "Maps", "com.google.common.collect" ], [ "ForwardingSetMultimap", "com.google.common.collect" ], [ "EmptyImmutableListMultimap", "com.google.common.collect" ], [ "DescendingImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingObject", "com.google.common.collect" ], [ "ImmutableBiMap", "com.google.common.collect" ], [ "ComputationException", "com.google.common.collect" ], [ "ForwardingDeque", "com.google.common.collect" ], [ "ForwardingSortedMultiset", "com.google.common.collect" ], [ "ImmutableMapKeySet", "com.google.common.collect" ], [ "ArrayListMultimap", "com.google.common.collect" ], [ "ForwardingNavigableMap", "com.google.common.collect" ], [ "ForwardingImmutableSet", "com.google.common.collect" ], [ "SortedSetMultimap", "com.google.common.collect" ], [ "SortedMapDifference", "com.google.common.collect" ], [ "ContiguousSet", "com.google.common.collect" ], [ "RangeSet", "com.google.common.collect" ], [ "Collections2", "com.google.common.collect" ], [ "UsingToStringOrdering", "com.google.common.collect" ], [ "ImmutableSortedMultisetFauxverideShim", "com.google.common.collect" ], [ "ForwardingSortedSet", "com.google.common.collect" ], [ "RegularImmutableBiMap", "com.google.common.collect" ], [ "FilteredSetMultimap", "com.google.common.collect" ], [ "SortedMultiset", "com.google.common.collect" ], [ "ExplicitOrdering", "com.google.common.collect" ], [ "AbstractSortedKeySortedSetMultimap", "com.google.common.collect" ], [ "Queues", "com.google.common.collect" ], [ "AbstractMultiset", "com.google.common.collect" ], [ "SingletonImmutableSet", "com.google.common.collect" ], [ "FilteredKeySetMultimap", "com.google.common.collect" ], [ "ReverseNaturalOrdering", "com.google.common.collect" ], [ "FilteredEntryMultimap", "com.google.common.collect" ], [ "FilteredKeyListMultimap", "com.google.common.collect" ], [ "Table", "com.google.common.collect" ], [ "Interners", "com.google.common.collect" ], [ "EnumBiMap", "com.google.common.collect" ], [ "AbstractNavigableMap", "com.google.common.collect" ], [ "NaturalOrdering", "com.google.common.collect" ], [ "RegularImmutableMultiset", "com.google.common.collect" ], [ "ObjectArrays", "com.google.common.collect" ], [ "GwtTransient", "com.google.common.collect" ], [ "TreeRangeMap", "com.google.common.collect" ], [ "Count", "com.google.common.collect" ], [ "PeekingIterator", "com.google.common.collect" ], [ "FilteredEntrySetMultimap", "com.google.common.collect" ], [ "ForwardingCollection", "com.google.common.collect" ], [ "AbstractSequentialIterator", "com.google.common.collect" ], [ "ArrayTable", "com.google.common.collect" ], [ "SortedIterable", "com.google.common.collect" ], [ "ImmutableRangeSet", "com.google.common.collect" ], [ "TransformedListIterator", "com.google.common.collect" ], [ "LinkedListMultimap", "com.google.common.collect" ], [ "Lists", "com.google.common.collect" ], [ "TreeBasedTable", "com.google.common.collect" ], [ "Interner", "com.google.common.collect" ], [ "ComparatorOrdering", "com.google.common.collect" ], [ "EvictingQueue", "com.google.common.collect" ], [ "AllEqualOrdering", "com.google.common.collect" ], [ "MapMakerInternalMap", "com.google.common.collect" ], [ "SingletonImmutableTable", "com.google.common.collect" ], [ "AbstractIndexedListIterator", "com.google.common.collect" ], [ "GenericMapMaker", "com.google.common.collect" ], [ "HashBiMap", "com.google.common.collect" ], [ "ImmutableMapEntry", "com.google.common.collect" ], [ "Multisets", "com.google.common.collect" ], [ "ImmutableTable", "com.google.common.collect" ], [ "SortedMultisetBridge", "com.google.common.collect" ], [ "ForwardingMapEntry", "com.google.common.collect" ], [ "BoundType", "com.google.common.collect" ], [ "ImmutableMapEntrySet", "com.google.common.collect" ], [ "ForwardingListMultimap", "com.google.common.collect" ], [ "Tables", "com.google.common.collect" ], [ "ByFunctionOrdering", "com.google.common.collect" ], [ "SortedIterables", "com.google.common.collect" ], [ "Platform", "com.google.common.collect" ], [ "FilteredKeyMultimap", "com.google.common.collect" ], [ "TreeRangeSet", "com.google.common.collect" ], [ "CartesianList", "com.google.common.collect" ], [ "DescendingImmutableSortedSet", "com.google.common.collect" ], [ "ImmutableRangeMap", "com.google.common.collect" ], [ "RegularImmutableSortedSet", "com.google.common.collect" ], [ "ListMultimap", "com.google.common.collect" ], [ "RegularImmutableSortedMultiset", "com.google.common.collect" ], [ "ForwardingBlockingDeque", "com.google.common.collect" ], [ "EnumHashBiMap", "com.google.common.collect" ], [ "EmptyContiguousSet", "com.google.common.collect" ], [ "AbstractMultimap", "com.google.common.collect" ], [ "TreeTraverser", "com.google.common.collect" ], [ "Multimaps", "com.google.common.collect" ], [ "MinMaxPriorityQueue", "com.google.common.collect" ], [ "DenseImmutableTable", "com.google.common.collect" ], [ "ImmutableSortedMapFauxverideShim", "com.google.common.collect" ], [ "ForwardingIterator", "com.google.common.collect" ], [ "SetMultimap", "com.google.common.collect" ], [ "RangeMap", "com.google.common.collect" ], [ "Range", "com.google.common.collect" ], [ "FilteredMultimap", "com.google.common.collect" ], [ "ImmutableAsList", "com.google.common.collect" ], [ "CompoundOrdering", "com.google.common.collect" ], [ "ForwardingSortedMap", "com.google.common.collect" ], [ "ImmutableClassToInstanceMap", "com.google.common.collect" ], [ "FluentIterable", "com.google.common.collect" ], [ "LexicographicalOrdering", "com.google.common.collect" ], [ "AbstractTable", "com.google.common.collect" ], [ "Constraint", "com.google.common.collect" ], [ "TransformedIterator", "com.google.common.collect" ], [ "SortedLists", "com.google.common.collect" ], [ "RegularImmutableList", "com.google.common.collect" ], [ "AbstractIterator", "com.google.common.collect" ], [ "CollectPreconditions", "com.google.common.collect" ], [ "SingletonImmutableBiMap", "com.google.common.collect" ], [ "RowSortedTable", "com.google.common.collect" ], [ "ForwardingImmutableMap", "com.google.common.collect" ], [ "ForwardingNavigableSet", "com.google.common.collect" ], [ "ComparisonChain", "com.google.common.collect" ], [ "UnmodifiableListIterator", "com.google.common.collect" ], [ "AbstractListMultimap", "com.google.common.collect" ], [ "Ordering", "com.google.common.collect" ], [ "ReverseOrdering", "com.google.common.collect" ], [ "ConsumingQueueIterator", "com.google.common.collect" ], [ "AbstractSortedSetMultimap", "com.google.common.collect" ], [ "EnumMultiset", "com.google.common.collect" ], [ "ForwardingTable", "com.google.common.collect" ], [ "ImmutableEnumMap", "com.google.common.collect" ], [ "ForwardingMultimap", "com.google.common.collect" ], [ "SparseImmutableTable", "com.google.common.collect" ], [ "TreeMultiset", "com.google.common.collect" ], [ "ForwardingSet", "com.google.common.collect" ], [ "ImmutableList", "com.google.common.collect" ], [ "HashMultimap", "com.google.common.collect" ], [ "RegularImmutableMap", "com.google.common.collect" ], [ "LinkedHashMultiset", "com.google.common.collect" ], [ "DescendingMultiset", "com.google.common.collect" ], [ "ConcurrentHashMultiset", "com.google.common.collect" ], [ "ImmutableMap", "com.google.common.collect" ], [ "ImmutableCollection", "com.google.common.collect" ], [ "ImmutableListMultimap", "com.google.common.collect" ], [ "ImmutableMultimap", "com.google.common.collect" ], [ "MutableClassToInstanceMap", "com.google.common.collect" ], [ "UnmodifiableSortedMultiset", "com.google.common.collect" ], [ "StandardRowSortedTable", "com.google.common.collect" ], [ "ForwardingListIterator", "com.google.common.collect" ], [ "ImmutableSortedAsList", "com.google.common.collect" ], [ "BiMap", "com.google.common.collect" ], [ "ForwardingList", "com.google.common.collect" ], [ "ForwardingQueue", "com.google.common.collect" ], [ "ImmutableSortedMultiset", "com.google.common.collect" ], [ "RegularImmutableTable", "com.google.common.collect" ], [ "ComputingConcurrentHashMap", "com.google.common.collect" ], [ "Multimap", "com.google.common.collect" ], [ "MapDifference", "com.google.common.collect" ], [ "GeneralRange", "com.google.common.collect" ], [ "AbstractSortedMultiset", "com.google.common.collect" ], [ "ImmutableSortedSet", "com.google.common.collect" ], [ "SingletonImmutableList", "com.google.common.collect" ], [ "StandardTable", "com.google.common.collect" ], [ "MapMaker", "com.google.common.collect" ], [ "AbstractMapBasedMultimap", "com.google.common.collect" ], [ "AbstractMapEntry", "com.google.common.collect" ], [ "EventBus", "com.google.common.eventbus" ], [ "DeadEvent", "com.google.common.eventbus" ], [ "Subscriber", "com.google.common.eventbus" ], [ "AllowConcurrentEvents", "com.google.common.eventbus" ], [ "Subscribe", "com.google.common.eventbus" ], [ "SubscriberRegistry", "com.google.common.eventbus" ], [ "AsyncEventBus", "com.google.common.eventbus" ], [ "SubscriberExceptionContext", "com.google.common.eventbus" ], [ "SubscriberExceptionHandler", "com.google.common.eventbus" ], [ "Dispatcher", "com.google.common.eventbus" ], [ "PercentEscaper", "com.google.common.net" ], [ "UrlEscapers", "com.google.common.net" ], [ "InternetDomainName", "com.google.common.net" ], [ "HttpHeaders", "com.google.common.net" ], [ "MediaType", "com.google.common.net" ], [ "InetAddresses", "com.google.common.net" ], [ "HostAndPort", "com.google.common.net" ], [ "HostSpecifier", "com.google.common.net" ], [ "LocalCache", "com.google.common.cache" ], [ "LongAdder", "com.google.common.cache" ], [ "RemovalNotification", "com.google.common.cache" ], [ "CacheStats", "com.google.common.cache" ], [ "Cache", "com.google.common.cache" ], [ "Weigher", "com.google.common.cache" ], [ "RemovalListeners", "com.google.common.cache" ], [ "LoadingCache", "com.google.common.cache" ], [ "AbstractCache", "com.google.common.cache" ], [ "CacheLoader", "com.google.common.cache" ], [ "ForwardingLoadingCache", "com.google.common.cache" ], [ "LongAddable", "com.google.common.cache" ], [ "CacheBuilder", "com.google.common.cache" ], [ "CacheBuilderSpec", "com.google.common.cache" ], [ "LongAddables", "com.google.common.cache" ], [ "RemovalListener", "com.google.common.cache" ], [ "AbstractLoadingCache", "com.google.common.cache" ], [ "RemovalCause", "com.google.common.cache" ], [ "ForwardingCache", "com.google.common.cache" ], [ "Striped64", "com.google.common.cache" ], [ "ForwardingListenableFuture", "com.google.common.util.concurrent" ], [ "Runnables", "com.google.common.util.concurrent" ], [ "AggregateFuture", "com.google.common.util.concurrent" ], [ "AtomicDoubleArray", "com.google.common.util.concurrent" ], [ "SimpleTimeLimiter", "com.google.common.util.concurrent" ], [ "ForwardingCheckedFuture", "com.google.common.util.concurrent" ], [ "MoreExecutors", "com.google.common.util.concurrent" ], [ "ServiceManager", "com.google.common.util.concurrent" ], [ "TimeLimiter", "com.google.common.util.concurrent" ], [ "AbstractScheduledService", "com.google.common.util.concurrent" ], [ "FakeTimeLimiter", "com.google.common.util.concurrent" ], [ "AtomicDouble", "com.google.common.util.concurrent" ], [ "ForwardingFuture", "com.google.common.util.concurrent" ], [ "SettableFuture", "com.google.common.util.concurrent" ], [ "Atomics", "com.google.common.util.concurrent" ], [ "WrappingExecutorService", "com.google.common.util.concurrent" ], [ "ExecutionList", "com.google.common.util.concurrent" ], [ "AsyncFunction", "com.google.common.util.concurrent" ], [ "SmoothRateLimiter", "com.google.common.util.concurrent" ], [ "SerializingExecutor", "com.google.common.util.concurrent" ], [ "AbstractCheckedFuture", "com.google.common.util.concurrent" ], [ "GwtFuturesCatchingSpecialization", "com.google.common.util.concurrent" ], [ "JdkFutureAdapters", "com.google.common.util.concurrent" ], [ "InterruptibleTask", "com.google.common.util.concurrent" ], [ "ListenableScheduledFuture", "com.google.common.util.concurrent" ], [ "Uninterruptibles", "com.google.common.util.concurrent" ], [ "AbstractListeningExecutorService", "com.google.common.util.concurrent" ], [ "AbstractFuture", "com.google.common.util.concurrent" ], [ "ForwardingBlockingQueue", "com.google.common.util.concurrent" ], [ "CollectionFuture", "com.google.common.util.concurrent" ], [ "TrustedListenableFutureTask", "com.google.common.util.concurrent" ], [ "WrappingScheduledExecutorService", "com.google.common.util.concurrent" ], [ "RateLimiter", "com.google.common.util.concurrent" ], [ "AbstractExecutionThreadService", "com.google.common.util.concurrent" ], [ "ThreadFactoryBuilder", "com.google.common.util.concurrent" ], [ "AtomicLongMap", "com.google.common.util.concurrent" ], [ "FutureCallback", "com.google.common.util.concurrent" ], [ "UncaughtExceptionHandlers", "com.google.common.util.concurrent" ], [ "Platform", "com.google.common.util.concurrent" ], [ "AbstractService", "com.google.common.util.concurrent" ], [ "ForwardingExecutorService", "com.google.common.util.concurrent" ], [ "CycleDetectingLockFactory", "com.google.common.util.concurrent" ], [ "Service", "com.google.common.util.concurrent" ], [ "AggregateFutureState", "com.google.common.util.concurrent" ], [ "ListeningScheduledExecutorService", "com.google.common.util.concurrent" ], [ "UncheckedTimeoutException", "com.google.common.util.concurrent" ], [ "ExecutionError", "com.google.common.util.concurrent" ], [ "Callables", "com.google.common.util.concurrent" ], [ "FuturesGetChecked", "com.google.common.util.concurrent" ], [ "AbstractIdleService", "com.google.common.util.concurrent" ], [ "FutureFallback", "com.google.common.util.concurrent" ], [ "Striped", "com.google.common.util.concurrent" ], [ "Futures", "com.google.common.util.concurrent" ], [ "ForwardingListeningExecutorService", "com.google.common.util.concurrent" ], [ "ListenableFuture", "com.google.common.util.concurrent" ], [ "Monitor", "com.google.common.util.concurrent" ], [ "ListenableFutureTask", "com.google.common.util.concurrent" ], [ "ListenerCallQueue", "com.google.common.util.concurrent" ], [ "UncheckedExecutionException", "com.google.common.util.concurrent" ], [ "ListeningExecutorService", "com.google.common.util.concurrent" ], [ "CheckedFuture", "com.google.common.util.concurrent" ], [ "ChecksumHashFunction", "com.google.common.hash" ], [ "SipHashFunction", "com.google.common.hash" ], [ "AbstractStreamingHashFunction", "com.google.common.hash" ], [ "Hashing", "com.google.common.hash" ], [ "Crc32cHashFunction", "com.google.common.hash" ], [ "HashCode", "com.google.common.hash" ], [ "Funnel", "com.google.common.hash" ], [ "HashingOutputStream", "com.google.common.hash" ], [ "PrimitiveSink", "com.google.common.hash" ], [ "AbstractByteHasher", "com.google.common.hash" ], [ "Murmur3_128HashFunction", "com.google.common.hash" ], [ "BloomFilterStrategies", "com.google.common.hash" ], [ "Murmur3_32HashFunction", "com.google.common.hash" ], [ "Funnels", "com.google.common.hash" ], [ "AbstractCompositeHashFunction", "com.google.common.hash" ], [ "MessageDigestHashFunction", "com.google.common.hash" ], [ "Hasher", "com.google.common.hash" ], [ "HashFunction", "com.google.common.hash" ], [ "BloomFilter", "com.google.common.hash" ], [ "HashingInputStream", "com.google.common.hash" ], [ "AbstractHasher", "com.google.common.hash" ], [ "AbstractNonStreamingHashFunction", "com.google.common.hash" ], [ "ClassPath", "com.google.common.reflect" ], [ "Element", "com.google.common.reflect" ], [ "Parameter", "com.google.common.reflect" ], [ "Reflection", "com.google.common.reflect" ], [ "TypeVisitor", "com.google.common.reflect" ], [ "ImmutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToken", "com.google.common.reflect" ], [ "MutableTypeToInstanceMap", "com.google.common.reflect" ], [ "TypeToInstanceMap", "com.google.common.reflect" ], [ "TypeParameter", "com.google.common.reflect" ], [ "TypeCapture", "com.google.common.reflect" ], [ "TypeResolver", "com.google.common.reflect" ], [ "Types", "com.google.common.reflect" ], [ "Invokable", "com.google.common.reflect" ], [ "AbstractInvocationHandler", "com.google.common.reflect" ], [ "CharSource", "com.google.common.io" ], [ "CharSink", "com.google.common.io" ], [ "AppendableWriter", "com.google.common.io" ], [ "MultiReader", "com.google.common.io" ], [ "MultiInputStream", "com.google.common.io" ], [ "ByteSink", "com.google.common.io" ], [ "ByteArrayDataOutput", "com.google.common.io" ], [ "Closer", "com.google.common.io" ], [ "OutputSupplier", "com.google.common.io" ], [ "PatternFilenameFilter", "com.google.common.io" ], [ "Closeables", "com.google.common.io" ], [ "BaseEncoding", "com.google.common.io" ], [ "LineBuffer", "com.google.common.io" ], [ "Files", "com.google.common.io" ], [ "CharStreams", "com.google.common.io" ], [ "Resources", "com.google.common.io" ], [ "ByteArrayDataInput", "com.google.common.io" ], [ "FileWriteMode", "com.google.common.io" ], [ "ByteStreams", "com.google.common.io" ], [ "Flushables", "com.google.common.io" ], [ "CountingOutputStream", "com.google.common.io" ], [ "CountingInputStream", "com.google.common.io" ], [ "ByteSource", "com.google.common.io" ], [ "LittleEndianDataInputStream", "com.google.common.io" ], [ "LineProcessor", "com.google.common.io" ], [ "InputSupplier", "com.google.common.io" ], [ "FileBackedOutputStream", "com.google.common.io" ], [ "LineReader", "com.google.common.io" ], [ "LittleEndianDataOutputStream", "com.google.common.io" ], [ "ByteProcessor", "com.google.common.io" ], [ "CharSequenceReader", "com.google.common.io" ], [ "HtmlEscapers", "com.google.common.html" ], [ "LongMath", "com.google.common.math" ], [ "IntMath", "com.google.common.math" ], [ "MathPreconditions", "com.google.common.math" ], [ "BigIntegerMath", "com.google.common.math" ], [ "DoubleMath", "com.google.common.math" ], [ "DoubleUtils", "com.google.common.math" ], [ "XmlEscapers", "com.google.common.xml" ], [ "Floats", "com.google.common.primitives" ], [ "Booleans", "com.google.common.primitives" ], [ "UnsignedLongs", "com.google.common.primitives" ], [ "Shorts", "com.google.common.primitives" ], [ "SignedBytes", "com.google.common.primitives" ], [ "Doubles", "com.google.common.primitives" ], [ "Bytes", "com.google.common.primitives" ], [ "UnsignedInts", "com.google.common.primitives" ], [ "UnsignedLong", "com.google.common.primitives" ], [ "Ints", "com.google.common.primitives" ], [ "UnsignedBytes", "com.google.common.primitives" ], [ "Chars", "com.google.common.primitives" ], [ "Primitives", "com.google.common.primitives" ], [ "UnsignedInteger", "com.google.common.primitives" ], [ "ParseRequest", "com.google.common.primitives" ], [ "Longs", "com.google.common.primitives" ], [ "GwtCompatible", "com.google.common.annotations" ], [ "VisibleForTesting", "com.google.common.annotations" ], [ "GwtIncompatible", "com.google.common.annotations" ], [ "Beta", "com.google.common.annotations" ], [ "Preconditions", "com.google.common.base" ], [ "Joiner", "com.google.common.base" ], [ "Ascii", "com.google.common.base" ], [ "StandardSystemProperty", "com.google.common.base" ], [ "Enums", "com.google.common.base" ], [ "PairwiseEquivalence", "com.google.common.base" ], [ "Suppliers", "com.google.common.base" ], [ "Functions", "com.google.common.base" ], [ "Objects", "com.google.common.base" ], [ "Optional", "com.google.common.base" ], [ "Stopwatch", "com.google.common.base" ], [ "Charsets", "com.google.common.base" ], [ "FinalizableSoftReference", "com.google.common.base" ], [ "Strings", "com.google.common.base" ], [ "Supplier", "com.google.common.base" ], [ "Finalizer", "com.google.common.base.internal" ], [ "FinalizableReferenceQueue", "com.google.common.base" ], [ "CaseFormat", "com.google.common.base" ], [ "MoreObjects", "com.google.common.base" ], [ "Utf8", "com.google.common.base" ], [ "Predicate", "com.google.common.base" ], [ "Throwables", "com.google.common.base" ], [ "Converter", "com.google.common.base" ], [ "Platform", "com.google.common.base" ], [ "Equivalence", "com.google.common.base" ], [ "Present", "com.google.common.base" ], [ "VerifyException", "com.google.common.base" ], [ "FunctionalEquivalence", "com.google.common.base" ], [ "Splitter", "com.google.common.base" ], [ "CharMatcher", "com.google.common.base" ], [ "Predicates", "com.google.common.base" ], [ "AbstractIterator", "com.google.common.base" ], [ "FinalizableReference", "com.google.common.base" ], [ "Verify", "com.google.common.base" ], [ "Defaults", "com.google.common.base" ], [ "FinalizableWeakReference", "com.google.common.base" ], [ "Ticker", "com.google.common.base" ], [ "Absent", "com.google.common.base" ], [ "Function", "com.google.common.base" ], [ "FinalizablePhantomReference", "com.google.common.base" ], [ "SmallCharMatcher", "com.google.common.base" ], [ "PublicSuffixPatterns", "com.google.thirdparty.publicsuffix" ], [ "PublicSuffixType", "com.google.thirdparty.publicsuffix" ], [ "TrieParser", "com.google.thirdparty.publicsuffix" ] ],
  "tokensProjectClassesNonPrivateStaticNonVoidMethods" : [ [ "create", "com.google.common.escape", "ArrayBasedEscaperMap", "public static ArrayBasedEscaperMap create(Map<Character, String> replacements)" ], [ "createReplacementArray", "com.google.common.escape", "ArrayBasedEscaperMap", "static char[][] createReplacementArray(Map<Character, String> map)" ], [ "nullEscaper", "com.google.common.escape", "Escapers", "public static Escaper nullEscaper()" ], [ "builder", "com.google.common.escape", "Escapers", "public static Builder builder()" ], [ "asUnicodeEscaper", "com.google.common.escape", "Escapers", "static UnicodeEscaper asUnicodeEscaper(Escaper escaper)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(CharEscaper escaper, char c)" ], [ "computeReplacement", "com.google.common.escape", "Escapers", "public static String computeReplacement(UnicodeEscaper escaper, int cp)" ], [ "charBufferFromThreadLocal", "com.google.common.escape", "Platform", "static char[] charBufferFromThreadLocal()" ], [ "codePointAt", "com.google.common.escape", "UnicodeEscaper", "protected static int codePointAt(CharSequence seq, int index, int end)" ], [ "integers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Integer> integers()" ], [ "longs", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<Long> longs()" ], [ "bigIntegers", "com.google.common.collect", "DiscreteDomain", "public static DiscreteDomain<BigInteger> bigIntegers()" ], [ "emptyMap", "com.google.common.collect", "ImmutableSortedMap", "static <K, V> ImmutableSortedMap<K, V> emptyMap(Comparator<? super K> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<? super K>, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Map<? extends K, ? extends V> map, Comparator<? super K> comparator)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries, Comparator<? super K> comparator)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> ImmutableSortedMap<K, V> copyOfSorted(SortedMap<K, ? extends V> map)" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> naturalOrder()" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMap", "public static <K, V> Builder<K, V> orderedBy(Comparator<K> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMap", "public static <K extends Comparable<?>, V> Builder<K, V> reverseOrder()" ], [ "wrap", "com.google.common.collect", "WellBehavedMap", "static <K, V> WellBehavedMap<K, V> wrap(Map<K, V> delegate)" ], [ "belowAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowAll()" ], [ "aboveAll", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveAll()" ], [ "belowValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> belowValue(C endpoint)" ], [ "aboveValue", "com.google.common.collect", "Cut", "static <C extends Comparable> Cut<C> aboveValue(C endpoint)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(E anElement, E... otherElements)" ], [ "immutableEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> ImmutableSet<E> immutableEnumSet(Iterable<E> elements)" ], [ "newEnumSet", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> newEnumSet(Iterable<E> iterable, Class<E> elementType)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet()" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(E... elements)" ], [ "newHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSetWithExpectedSize(int expectedSize)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterable<? extends E> elements)" ], [ "newHashSet", "com.google.common.collect", "Sets", "public static <E> HashSet<E> newHashSet(Iterator<? extends E> elements)" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet()" ], [ "newConcurrentHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newConcurrentHashSet(Iterable<? extends E> elements)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet()" ], [ "newLinkedHashSetWithExpectedSize", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int expectedSize)" ], [ "newLinkedHashSet", "com.google.common.collect", "Sets", "public static <E> LinkedHashSet<E> newLinkedHashSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet()" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E extends Comparable> TreeSet<E> newTreeSet(Iterable<? extends E> elements)" ], [ "newTreeSet", "com.google.common.collect", "Sets", "public static <E> TreeSet<E> newTreeSet(Comparator<? super E> comparator)" ], [ "newIdentityHashSet", "com.google.common.collect", "Sets", "public static <E> Set<E> newIdentityHashSet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet()" ], [ "newCopyOnWriteArraySet", "com.google.common.collect", "Sets", "public static <E> CopyOnWriteArraySet<E> newCopyOnWriteArraySet(Iterable<? extends E> elements)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection)" ], [ "complementOf", "com.google.common.collect", "Sets", "public static <E extends Enum<E>> EnumSet<E> complementOf(Collection<E> collection, Class<E> type)" ], [ "newSetFromMap", "com.google.common.collect", "Sets", "public static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "union", "com.google.common.collect", "Sets", "public static <E> SetView<E> union(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "intersection", "com.google.common.collect", "Sets", "public static <E> SetView<E> intersection(final Set<E> set1, final Set<?> set2)" ], [ "difference", "com.google.common.collect", "Sets", "public static <E> SetView<E> difference(final Set<E> set1, final Set<?> set2)" ], [ "symmetricDifference", "com.google.common.collect", "Sets", "public static <E> SetView<E> symmetricDifference(final Set<? extends E> set1, final Set<? extends E> set2)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> Set<E> filter(Set<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> SortedSet<E> filter(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Sets", "static <E> SortedSet<E> filterSortedIgnoreNavigable(SortedSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "filter", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> filter(NavigableSet<E> unfiltered, Predicate<? super E> predicate)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(List<? extends Set<? extends B>> sets)" ], [ "cartesianProduct", "com.google.common.collect", "Sets", "public static <B> Set<List<B>> cartesianProduct(Set<? extends B>... sets)" ], [ "create", "com.google.common.collect", "Sets", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "powerSet", "com.google.common.collect", "Sets", "public static <E> Set<Set<E>> powerSet(Set<E> set)" ], [ "hashCodeImpl", "com.google.common.collect", "Sets", "static int hashCodeImpl(Set<?> s)" ], [ "equalsImpl", "com.google.common.collect", "Sets", "static boolean equalsImpl(Set<?> s, @Nullable Object object)" ], [ "unmodifiableNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> unmodifiableNavigableSet(NavigableSet<E> set)" ], [ "synchronizedNavigableSet", "com.google.common.collect", "Sets", "public static <E> NavigableSet<E> synchronizedNavigableSet(NavigableSet<E> navigableSet)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Iterator<?> iterator)" ], [ "removeAllImpl", "com.google.common.collect", "Sets", "static boolean removeAllImpl(Set<?> set, Collection<?> collection)" ], [ "create", "com.google.common.collect", "CartesianSet", "static <E> Set<List<E>> create(List<? extends Set<? extends E>> sets)" ], [ "readCount", "com.google.common.collect", "Serialization", "static int readCount(ObjectInputStream stream) throws IOException" ], [ "getFieldSetter", "com.google.common.collect", "Serialization", "static <T> FieldSetter<T> getFieldSetter(final Class<T> clazz, String fieldName)" ], [ "notNull", "com.google.common.collect", "MapConstraints", "public static MapConstraint<Object, Object> notNull()" ], [ "constrainedMap", "com.google.common.collect", "MapConstraints", "public static <K, V> Map<K, V> constrainedMap(Map<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> Multimap<K, V> constrainedMultimap(Multimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedListMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> ListMultimap<K, V> constrainedListMultimap(ListMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SetMultimap<K, V> constrainedSetMultimap(SetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedSortedSetMultimap", "com.google.common.collect", "MapConstraints", "public static <K, V> SortedSetMultimap<K, V> constrainedSortedSetMultimap(SortedSetMultimap<K, V> multimap, MapConstraint<? super K, ? super V> constraint)" ], [ "constrainedBiMap", "com.google.common.collect", "MapConstraints", "public static <K, V> BiMap<K, V> constrainedBiMap(BiMap<K, V> map, MapConstraint<? super K, ? super V> constraint)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(int expectedRows, int expectedCellsPerRow)" ], [ "create", "com.google.common.collect", "HashBasedTable", "public static <R, C, V> HashBasedTable<R, C, V> create(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSetFauxverideShim", "public static <E> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> unmodifiableIterable(final Iterable<T> iterable)" ], [ "unmodifiableIterable", "com.google.common.collect", "Iterables", "public static <E> Iterable<E> unmodifiableIterable(ImmutableCollection<E> iterable)" ], [ "size", "com.google.common.collect", "Iterables", "public static int size(Iterable<?> iterable)" ], [ "contains", "com.google.common.collect", "Iterables", "public static boolean contains(Iterable<?> iterable, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterables", "public static boolean removeAll(Iterable<?> removeFrom, Collection<?> elementsToRemove)" ], [ "retainAll", "com.google.common.collect", "Iterables", "public static boolean retainAll(Iterable<?> removeFrom, Collection<?> elementsToRetain)" ], [ "removeIf", "com.google.common.collect", "Iterables", "public static <T> boolean removeIf(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "removeFirstMatching", "com.google.common.collect", "Iterables", "static <T> T removeFirstMatching(Iterable<T> removeFrom, Predicate<? super T> predicate)" ], [ "elementsEqual", "com.google.common.collect", "Iterables", "public static boolean elementsEqual(Iterable<?> iterable1, Iterable<?> iterable2)" ], [ "toString", "com.google.common.collect", "Iterables", "public static String toString(Iterable<?> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<T> iterable)" ], [ "getOnlyElement", "com.google.common.collect", "Iterables", "public static <T> T getOnlyElement(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterables", "public static <T> T[] toArray(Iterable<? extends T> iterable, Class<T> type)" ], [ "toArray", "com.google.common.collect", "Iterables", "static <T> T[] toArray(Iterable<? extends T> iterable, T[] array)" ], [ "toArray", "com.google.common.collect", "Iterables", "static Object[] toArray(Iterable<?> iterable)" ], [ "addAll", "com.google.common.collect", "Iterables", "public static <T> boolean addAll(Collection<T> addTo, Iterable<? extends T> elementsToAdd)" ], [ "frequency", "com.google.common.collect", "Iterables", "public static int frequency(Iterable<?> iterable, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T> a, Iterable<? extends T> b, Iterable<? extends T> c, Iterable<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(Iterable<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> concat(final Iterable<? extends Iterable<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> partition(final Iterable<T> iterable, final int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterables", "public static <T> Iterable<List<T>> paddedPartition(final Iterable<T> iterable, final int size)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> filter(final Iterable<?> unfiltered, final Class<T> type)" ], [ "any", "com.google.common.collect", "Iterables", "public static <T> boolean any(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterables", "public static <T> boolean all(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterables", "public static <T> T find(Iterable<? extends T> iterable, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterables", "public static <T> Optional<T> tryFind(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterables", "public static <T> int indexOf(Iterable<T> iterable, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterables", "public static <F, T> Iterable<T> transform(final Iterable<F> fromIterable, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<T> iterable, int position)" ], [ "get", "com.google.common.collect", "Iterables", "public static <T> T get(Iterable<? extends T> iterable, int position, @Nullable T defaultValue)" ], [ "getFirst", "com.google.common.collect", "Iterables", "public static <T> T getFirst(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<T> iterable)" ], [ "getLast", "com.google.common.collect", "Iterables", "public static <T> T getLast(Iterable<? extends T> iterable, @Nullable T defaultValue)" ], [ "skip", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> skip(final Iterable<T> iterable, final int numberToSkip)" ], [ "limit", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> limit(final Iterable<T> iterable, final int limitSize)" ], [ "consumingIterable", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> consumingIterable(final Iterable<T> iterable)" ], [ "isEmpty", "com.google.common.collect", "Iterables", "public static boolean isEmpty(Iterable<?> iterable)" ], [ "mergeSorted", "com.google.common.collect", "Iterables", "public static <T> Iterable<T> mergeSorted(final Iterable<? extends Iterable<? extends T>> iterables, final Comparator<? super T> comparator)" ], [ "emptyIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> emptyIterator()" ], [ "emptyListIterator", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> emptyListIterator()" ], [ "emptyModifiableIterator", "com.google.common.collect", "Iterators", "static <T> Iterator<T> emptyModifiableIterator()" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(final Iterator<T> iterator)" ], [ "unmodifiableIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> unmodifiableIterator(UnmodifiableIterator<T> iterator)" ], [ "size", "com.google.common.collect", "Iterators", "public static int size(Iterator<?> iterator)" ], [ "contains", "com.google.common.collect", "Iterators", "public static boolean contains(Iterator<?> iterator, @Nullable Object element)" ], [ "removeAll", "com.google.common.collect", "Iterators", "public static boolean removeAll(Iterator<?> removeFrom, Collection<?> elementsToRemove)" ], [ "removeIf", "com.google.common.collect", "Iterators", "public static <T> boolean removeIf(Iterator<T> removeFrom, Predicate<? super T> predicate)" ], [ "retainAll", "com.google.common.collect", "Iterators", "public static boolean retainAll(Iterator<?> removeFrom, Collection<?> elementsToRetain)" ], [ "elementsEqual", "com.google.common.collect", "Iterators", "public static boolean elementsEqual(Iterator<?> iterator1, Iterator<?> iterator2)" ], [ "toString", "com.google.common.collect", "Iterators", "public static String toString(Iterator<?> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<T> iterator)" ], [ "getOnlyElement", "com.google.common.collect", "Iterators", "public static <T> T getOnlyElement(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "toArray", "com.google.common.collect", "Iterators", "public static <T> T[] toArray(Iterator<? extends T> iterator, Class<T> type)" ], [ "addAll", "com.google.common.collect", "Iterators", "public static <T> boolean addAll(Collection<T> addTo, Iterator<? extends T> iterator)" ], [ "frequency", "com.google.common.collect", "Iterators", "public static int frequency(Iterator<?> iterator, @Nullable Object element)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(final Iterable<T> iterable)" ], [ "cycle", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> cycle(T... elements)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T> a, Iterator<? extends T> b, Iterator<? extends T> c, Iterator<? extends T> d)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(Iterator<? extends T>... inputs)" ], [ "concat", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> concat(final Iterator<? extends Iterator<? extends T>> inputs)" ], [ "partition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> partition(Iterator<T> iterator, int size)" ], [ "paddedPartition", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<List<T>> paddedPartition(Iterator<T> iterator, int size)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(final Iterator<T> unfiltered, final Predicate<? super T> predicate)" ], [ "filter", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> filter(Iterator<?> unfiltered, Class<T> type)" ], [ "any", "com.google.common.collect", "Iterators", "public static <T> boolean any(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "all", "com.google.common.collect", "Iterators", "public static <T> boolean all(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "find", "com.google.common.collect", "Iterators", "public static <T> T find(Iterator<? extends T> iterator, Predicate<? super T> predicate, @Nullable T defaultValue)" ], [ "tryFind", "com.google.common.collect", "Iterators", "public static <T> Optional<T> tryFind(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "indexOf", "com.google.common.collect", "Iterators", "public static <T> int indexOf(Iterator<T> iterator, Predicate<? super T> predicate)" ], [ "transform", "com.google.common.collect", "Iterators", "public static <F, T> Iterator<T> transform(final Iterator<F> fromIterator, final Function<? super F, ? extends T> function)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<T> iterator, int position)" ], [ "get", "com.google.common.collect", "Iterators", "public static <T> T get(Iterator<? extends T> iterator, int position, @Nullable T defaultValue)" ], [ "getNext", "com.google.common.collect", "Iterators", "public static <T> T getNext(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<T> iterator)" ], [ "getLast", "com.google.common.collect", "Iterators", "public static <T> T getLast(Iterator<? extends T> iterator, @Nullable T defaultValue)" ], [ "advance", "com.google.common.collect", "Iterators", "public static int advance(Iterator<?> iterator, int numberToAdvance)" ], [ "limit", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> limit(final Iterator<T> iterator, final int limitSize)" ], [ "consumingIterator", "com.google.common.collect", "Iterators", "public static <T> Iterator<T> consumingIterator(final Iterator<T> iterator)" ], [ "pollNext", "com.google.common.collect", "Iterators", "static <T> T pollNext(Iterator<T> iterator)" ], [ "forArray", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forArray(final T... array)" ], [ "forArray", "com.google.common.collect", "Iterators", "static <T> UnmodifiableListIterator<T> forArray(final T[] array, final int offset, int length, int index)" ], [ "singletonIterator", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> singletonIterator(@Nullable final T value)" ], [ "forEnumeration", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> forEnumeration(final Enumeration<T> enumeration)" ], [ "asEnumeration", "com.google.common.collect", "Iterators", "public static <T> Enumeration<T> asEnumeration(final Iterator<T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(Iterator<? extends T> iterator)" ], [ "peekingIterator", "com.google.common.collect", "Iterators", "public static <T> PeekingIterator<T> peekingIterator(PeekingIterator<T> iterator)" ], [ "mergeSorted", "com.google.common.collect", "Iterators", "public static <T> UnmodifiableIterator<T> mergeSorted(Iterable<? extends Iterator<? extends T>> iterators, Comparator<? super T> comparator)" ], [ "cast", "com.google.common.collect", "Iterators", "static <T> ListIterator<T> cast(Iterator<T> iterator)" ], [ "constrainedCollection", "com.google.common.collect", "Constraints", "public static <E> Collection<E> constrainedCollection(Collection<E> collection, Constraint<? super E> constraint)" ], [ "constrainedSet", "com.google.common.collect", "Constraints", "public static <E> Set<E> constrainedSet(Set<E> set, Constraint<? super E> constraint)" ], [ "constrainedSortedSet", "com.google.common.collect", "Constraints", "public static <E> SortedSet<E> constrainedSortedSet(SortedSet<E> sortedSet, Constraint<? super E> constraint)" ], [ "constrainedList", "com.google.common.collect", "Constraints", "public static <E> List<E> constrainedList(List<E> list, Constraint<? super E> constraint)" ], [ "constrainedTypePreservingCollection", "com.google.common.collect", "Constraints", "static <E> Collection<E> constrainedTypePreservingCollection(Collection<E> collection, Constraint<E> constraint)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableSetMultimap", "public static <K, V> ImmutableSetMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumSet", "static ImmutableSet asImmutable(EnumSet set)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K, V> TreeMultimap<K, V> create(Comparator<? super K> keyComparator, Comparator<? super V> valueComparator)" ], [ "create", "com.google.common.collect", "TreeMultimap", "public static <K extends Comparable, V extends Comparable> TreeMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "set", "com.google.common.collect", "Synchronized", "static <E> Set<E> set(Set<E> set, @Nullable Object mutex)" ], [ "multiset", "com.google.common.collect", "Synchronized", "static <E> Multiset<E> multiset(Multiset<E> multiset, @Nullable Object mutex)" ], [ "multimap", "com.google.common.collect", "Synchronized", "static <K, V> Multimap<K, V> multimap(Multimap<K, V> multimap, @Nullable Object mutex)" ], [ "listMultimap", "com.google.common.collect", "Synchronized", "static <K, V> ListMultimap<K, V> listMultimap(ListMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "setMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SetMultimap<K, V> setMultimap(SetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "sortedSetMultimap", "com.google.common.collect", "Synchronized", "static <K, V> SortedSetMultimap<K, V> sortedSetMultimap(SortedSetMultimap<K, V> multimap, @Nullable Object mutex)" ], [ "map", "com.google.common.collect", "Synchronized", "static <K, V> Map<K, V> map(Map<K, V> map, @Nullable Object mutex)" ], [ "sortedMap", "com.google.common.collect", "Synchronized", "static <K, V> SortedMap<K, V> sortedMap(SortedMap<K, V> sortedMap, @Nullable Object mutex)" ], [ "biMap", "com.google.common.collect", "Synchronized", "static <K, V> BiMap<K, V> biMap(BiMap<K, V> bimap, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet, @Nullable Object mutex)" ], [ "navigableSet", "com.google.common.collect", "Synchronized", "static <E> NavigableSet<E> navigableSet(NavigableSet<E> navigableSet)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap)" ], [ "navigableMap", "com.google.common.collect", "Synchronized", "static <K, V> NavigableMap<K, V> navigableMap(NavigableMap<K, V> navigableMap, @Nullable Object mutex)" ], [ "queue", "com.google.common.collect", "Synchronized", "static <E> Queue<E> queue(Queue<E> queue, @Nullable Object mutex)" ], [ "deque", "com.google.common.collect", "Synchronized", "static <E> Deque<E> deque(Deque<E> deque, @Nullable Object mutex)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create()" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "HashMultiset", "public static <E> HashMultiset<E> create(Iterable<? extends E> elements)" ], [ "smear", "com.google.common.collect", "Hashing", "static int smear(int hashCode)" ], [ "smearedHash", "com.google.common.collect", "Hashing", "static int smearedHash(@Nullable Object o)" ], [ "closedTableSize", "com.google.common.collect", "Hashing", "static int closedTableSize(int expectedEntries, double loadFactor)" ], [ "needsResizing", "com.google.common.collect", "Hashing", "static boolean needsResizing(int size, int tableSize, double loadFactor)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "LinkedHashMultimap", "public static <K, V> LinkedHashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys()" ], [ "hashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> hashKeys(final int expectedKeys)" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys()" ], [ "linkedHashKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Object> linkedHashKeys(final int expectedKeys)" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static MultimapBuilderWithKeys<Comparable> treeKeys()" ], [ "treeKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0> MultimapBuilderWithKeys<K0> treeKeys(final Comparator<K0> comparator)" ], [ "enumKeys", "com.google.common.collect", "MultimapBuilder", "public static <K0 extends Enum<K0>> MultimapBuilderWithKeys<K0> enumKeys(final Class<K0> keyClass)" ], [ "instance", "com.google.common.collect", "MultimapBuilder", "public static <V> Supplier<List<V>> instance()" ], [ "instance", "com.google.common.collect", "LinkedListSupplier", "public static <V> Supplier<List<V>> instance()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyFromEntries", "com.google.common.collect", "ImmutableMultiset", "static <E> ImmutableMultiset<E> copyFromEntries(Collection<? extends Entry<? extends E>> entries)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultiset", "public static <E> ImmutableMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableMultiset", "public static <E> Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)" ], [ "chooseTableSize", "com.google.common.collect", "ImmutableSet", "static int chooseTableSize(int setSize)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSet", "public static <E> ImmutableSet<E> copyOf(E[] elements)" ], [ "builder", "com.google.common.collect", "ImmutableSet", "public static <E> Builder<E> builder()" ], [ "keyFunction", "com.google.common.collect", "Maps", "static <K> Function<Entry<K, ?>, K> keyFunction()" ], [ "valueFunction", "com.google.common.collect", "Maps", "static <V> Function<Entry<?, V>, V> valueFunction()" ], [ "keyIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<K> keyIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "valueIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<V> valueIterator(Iterator<Entry<K, V>> entryIterator)" ], [ "immutableEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> ImmutableMap<K, V> immutableEnumMap(Map<K, ? extends V> map)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap()" ], [ "newHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMapWithExpectedSize(int expectedSize)" ], [ "capacity", "com.google.common.collect", "Maps", "static int capacity(int expectedSize)" ], [ "newHashMap", "com.google.common.collect", "Maps", "public static <K, V> HashMap<K, V> newHashMap(Map<? extends K, ? extends V> map)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap()" ], [ "newLinkedHashMapWithExpectedSize", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int expectedSize)" ], [ "newLinkedHashMap", "com.google.common.collect", "Maps", "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(Map<? extends K, ? extends V> map)" ], [ "newConcurrentMap", "com.google.common.collect", "Maps", "public static <K, V> ConcurrentMap<K, V> newConcurrentMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K extends Comparable, V> TreeMap<K, V> newTreeMap()" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <K, V> TreeMap<K, V> newTreeMap(SortedMap<K, ? extends V> map)" ], [ "newTreeMap", "com.google.common.collect", "Maps", "public static <C, K extends C, V> TreeMap<K, V> newTreeMap(@Nullable Comparator<C> comparator)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Class<K> type)" ], [ "newEnumMap", "com.google.common.collect", "Maps", "public static <K extends Enum<K>, V> EnumMap<K, V> newEnumMap(Map<K, ? extends V> map)" ], [ "newIdentityHashMap", "com.google.common.collect", "Maps", "public static <K, V> IdentityHashMap<K, V> newIdentityHashMap()" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> MapDifference<K, V> difference(Map<? extends K, ? extends V> left, Map<? extends K, ? extends V> right, Equivalence<? super V> valueEquivalence)" ], [ "create", "com.google.common.collect", "Maps", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "difference", "com.google.common.collect", "Maps", "public static <K, V> SortedMapDifference<K, V> difference(SortedMap<K, ? extends V> left, Map<? extends K, ? extends V> right)" ], [ "orNaturalOrder", "com.google.common.collect", "Maps", "static <E> Comparator<? super E> orNaturalOrder(@Nullable Comparator<? super E> comparator)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> asMap(Set<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> asMap(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMapSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> asMapSortedIgnoreNavigable(SortedSet<K> set, Function<? super K, V> function)" ], [ "asMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> asMap(NavigableSet<K> set, Function<? super K, V> function)" ], [ "asMapEntryIterator", "com.google.common.collect", "Maps", "static <K, V> Iterator<Entry<K, V>> asMapEntryIterator(Set<K> set, final Function<? super K, V> function)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterable<K> keys, Function<? super K, V> valueFunction)" ], [ "toMap", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> toMap(Iterator<K> keys, Function<? super K, V> valueFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "uniqueIndex", "com.google.common.collect", "Maps", "public static <K, V> ImmutableMap<K, V> uniqueIndex(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "fromProperties", "com.google.common.collect", "Maps", "public static ImmutableMap<String, String> fromProperties(Properties properties)" ], [ "immutableEntry", "com.google.common.collect", "Maps", "public static <K, V> Entry<K, V> immutableEntry(@Nullable K key, @Nullable V value)" ], [ "unmodifiableEntrySet", "com.google.common.collect", "Maps", "static <K, V> Set<Entry<K, V>> unmodifiableEntrySet(Set<Entry<K, V>> entrySet)" ], [ "unmodifiableEntry", "com.google.common.collect", "Maps", "static <K, V> Entry<K, V> unmodifiableEntry(final Entry<? extends K, ? extends V> entry)" ], [ "unmodifiableEntryIterator", "com.google.common.collect", "Maps", "static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(final Iterator<Entry<K, V>> entryIterator)" ], [ "asConverter", "com.google.common.collect", "Maps", "public static <A, B> Converter<A, B> asConverter(final BiMap<A, B> bimap)" ], [ "synchronizedBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> synchronizedBiMap(BiMap<K, V> bimap)" ], [ "unmodifiableBiMap", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> unmodifiableBiMap(BiMap<? extends K, ? extends V> bimap)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformValues(Map<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformValues(SortedMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformValues", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformValues(NavigableMap<K, V1> fromMap, Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> Map<K, V2> transformEntries(Map<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> SortedMap<K, V2> transformEntries(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntries", "com.google.common.collect", "Maps", "public static <K, V1, V2> NavigableMap<K, V2> transformEntries(NavigableMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntriesIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V1, V2> SortedMap<K, V2> transformEntriesIgnoreNavigable(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "asEntryTransformer", "com.google.common.collect", "Maps", "static <K, V1, V2> EntryTransformer<K, V1, V2> asEntryTransformer(final Function<? super V1, V2> function)" ], [ "asValueToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<V1, V2> asValueToValueFunction(final EntryTransformer<? super K, V1, V2> transformer, final K key)" ], [ "asEntryToValueFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, V2> asEntryToValueFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformEntry", "com.google.common.collect", "Maps", "static <V2, K, V1> Entry<K, V2> transformEntry(final EntryTransformer<? super K, ? super V1, V2> transformer, final Entry<K, V1> entry)" ], [ "asEntryToEntryFunction", "com.google.common.collect", "Maps", "static <K, V1, V2> Function<Entry<K, V1>, Entry<K, V2>> asEntryToEntryFunction(final EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "keyPredicateOnEntries", "com.google.common.collect", "Maps", "static <K> Predicate<Entry<K, ?>> keyPredicateOnEntries(Predicate<? super K> keyPredicate)" ], [ "valuePredicateOnEntries", "com.google.common.collect", "Maps", "static <V> Predicate<Entry<?, V>> valuePredicateOnEntries(Predicate<? super V> valuePredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterKeys(Map<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterKeys(SortedMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterKeys(NavigableMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterKeys(BiMap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterValues(Map<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterValues(SortedMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterValues(NavigableMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterValues(BiMap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> Map<K, V> filterEntries(Map<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> SortedMap<K, V> filterEntries(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterSortedIgnoreNavigable", "com.google.common.collect", "Maps", "static <K, V> SortedMap<K, V> filterSortedIgnoreNavigable(SortedMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> filterEntries(NavigableMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Maps", "public static <K, V> BiMap<K, V> filterEntries(BiMap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "unmodifiableNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(NavigableMap<K, V> map)" ], [ "synchronizedNavigableMap", "com.google.common.collect", "Maps", "public static <K, V> NavigableMap<K, V> synchronizedNavigableMap(NavigableMap<K, V> navigableMap)" ], [ "safeGet", "com.google.common.collect", "Maps", "static <V> V safeGet(Map<?, V> map, @Nullable Object key)" ], [ "safeContainsKey", "com.google.common.collect", "Maps", "static boolean safeContainsKey(Map<?, ?> map, Object key)" ], [ "safeRemove", "com.google.common.collect", "Maps", "static <V> V safeRemove(Map<?, V> map, Object key)" ], [ "containsKeyImpl", "com.google.common.collect", "Maps", "static boolean containsKeyImpl(Map<?, ?> map, @Nullable Object key)" ], [ "containsValueImpl", "com.google.common.collect", "Maps", "static boolean containsValueImpl(Map<?, ?> map, @Nullable Object value)" ], [ "containsEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean containsEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "removeEntryImpl", "com.google.common.collect", "Maps", "static <K, V> boolean removeEntryImpl(Collection<Entry<K, V>> c, Object o)" ], [ "equalsImpl", "com.google.common.collect", "Maps", "static boolean equalsImpl(Map<?, ?> map, Object object)" ], [ "toStringImpl", "com.google.common.collect", "Maps", "static String toStringImpl(Map<?, ?> map)" ], [ "keyOrNull", "com.google.common.collect", "Maps", "static <K> K keyOrNull(@Nullable Entry<K, ?> entry)" ], [ "valueOrNull", "com.google.common.collect", "Maps", "static <V> V valueOrNull(@Nullable Entry<?, V> entry)" ], [ "indexMap", "com.google.common.collect", "Maps", "static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list)" ], [ "create", "com.google.common.collect", "ValueDifferenceImpl", "static <V> ValueDifference<V> create(@Nullable V left, @Nullable V right)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableBiMap", "public static <K, V> ImmutableBiMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "ArrayListMultimap", "public static <K, V> ArrayListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "create", "com.google.common.collect", "ContiguousSet", "public static <C extends Comparable> ContiguousSet<C> create(Range<C> range, DiscreteDomain<C> domain)" ], [ "builder", "com.google.common.collect", "ContiguousSet", "public static <E> ImmutableSortedSet.Builder<E> builder()" ], [ "filter", "com.google.common.collect", "Collections2", "public static <E> Collection<E> filter(Collection<E> unfiltered, Predicate<? super E> predicate)" ], [ "safeContains", "com.google.common.collect", "Collections2", "static boolean safeContains(Collection<?> collection, @Nullable Object object)" ], [ "safeRemove", "com.google.common.collect", "Collections2", "static boolean safeRemove(Collection<?> collection, @Nullable Object object)" ], [ "transform", "com.google.common.collect", "Collections2", "public static <F, T> Collection<T> transform(Collection<F> fromCollection, Function<? super F, T> function)" ], [ "containsAllImpl", "com.google.common.collect", "Collections2", "static boolean containsAllImpl(Collection<?> self, Collection<?> c)" ], [ "toStringImpl", "com.google.common.collect", "Collections2", "static String toStringImpl(final Collection<?> collection)" ], [ "newStringBuilderForCollection", "com.google.common.collect", "Collections2", "static StringBuilder newStringBuilderForCollection(int size)" ], [ "cast", "com.google.common.collect", "Collections2", "static <T> Collection<T> cast(Iterable<T> iterable)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E extends Comparable<? super E>> Collection<List<E>> orderedPermutations(Iterable<E> elements)" ], [ "orderedPermutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> orderedPermutations(Iterable<E> elements, Comparator<? super E> comparator)" ], [ "permutations", "com.google.common.collect", "Collections2", "public static <E> Collection<List<E>> permutations(Collection<E> elements)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset.Builder<E> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultisetFauxverideShim", "public static <E> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableBiMap", "static <K, V> RegularImmutableBiMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "newArrayBlockingQueue", "com.google.common.collect", "Queues", "public static <E> ArrayBlockingQueue<E> newArrayBlockingQueue(int capacity)" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque()" ], [ "newArrayDeque", "com.google.common.collect", "Queues", "public static <E> ArrayDeque<E> newArrayDeque(Iterable<? extends E> elements)" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue()" ], [ "newConcurrentLinkedQueue", "com.google.common.collect", "Queues", "public static <E> ConcurrentLinkedQueue<E> newConcurrentLinkedQueue(Iterable<? extends E> elements)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque()" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(int capacity)" ], [ "newLinkedBlockingDeque", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingDeque<E> newLinkedBlockingDeque(Iterable<? extends E> elements)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue()" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(int capacity)" ], [ "newLinkedBlockingQueue", "com.google.common.collect", "Queues", "public static <E> LinkedBlockingQueue<E> newLinkedBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue()" ], [ "newPriorityBlockingQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(Iterable<? extends E> elements)" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue()" ], [ "newPriorityQueue", "com.google.common.collect", "Queues", "public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements)" ], [ "newSynchronousQueue", "com.google.common.collect", "Queues", "public static <E> SynchronousQueue<E> newSynchronousQueue()" ], [ "drain", "com.google.common.collect", "Queues", "public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit) throws InterruptedException" ], [ "drainUninterruptibly", "com.google.common.collect", "Queues", "public static <E> int drainUninterruptibly(BlockingQueue<E> q, Collection<? super E> buffer, int numElements, long timeout, TimeUnit unit)" ], [ "synchronizedQueue", "com.google.common.collect", "Queues", "public static <E> Queue<E> synchronizedQueue(Queue<E> queue)" ], [ "synchronizedDeque", "com.google.common.collect", "Queues", "public static <E> Deque<E> synchronizedDeque(Deque<E> deque)" ], [ "filterCollection", "com.google.common.collect", "FilteredEntryMultimap", "static <E> Collection<E> filterCollection(Collection<E> collection, Predicate<? super E> predicate)" ], [ "newStrongInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newStrongInterner()" ], [ "newWeakInterner", "com.google.common.collect", "Interners", "public static <E> Interner<E> newWeakInterner()" ], [ "asFunction", "com.google.common.collect", "Interners", "public static <E> Function<E, E> asFunction(Interner<E> interner)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Class<K> keyType, Class<V> valueType)" ], [ "create", "com.google.common.collect", "EnumBiMap", "public static <K extends Enum<K>, V extends Enum<V>> EnumBiMap<K, V> create(Map<K, V> map)" ], [ "inferKeyType", "com.google.common.collect", "EnumBiMap", "static <K extends Enum<K>> Class<K> inferKeyType(Map<K, ?> map)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(Class<T> type, int length)" ], [ "newArray", "com.google.common.collect", "ObjectArrays", "public static <T> T[] newArray(T[] reference, int length)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] first, T[] second, Class<T> type)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(@Nullable T element, T[] array)" ], [ "concat", "com.google.common.collect", "ObjectArrays", "public static <T> T[] concat(T[] array, @Nullable T element)" ], [ "arraysCopyOf", "com.google.common.collect", "ObjectArrays", "static <T> T[] arraysCopyOf(T[] original, int newLength)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Collection<?> c, T[] array)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static <T> T[] toArrayImpl(Object[] src, int offset, int len, T[] dst)" ], [ "toArrayImpl", "com.google.common.collect", "ObjectArrays", "static Object[] toArrayImpl(Collection<?> c)" ], [ "copyAsObjectArray", "com.google.common.collect", "ObjectArrays", "static Object[] copyAsObjectArray(Object[] elements, int offset, int length)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object... array)" ], [ "checkElementsNotNull", "com.google.common.collect", "ObjectArrays", "static Object[] checkElementsNotNull(Object[] array, int length)" ], [ "checkElementNotNull", "com.google.common.collect", "ObjectArrays", "static Object checkElementNotNull(Object element, int index)" ], [ "create", "com.google.common.collect", "TreeRangeMap", "public static <K extends Comparable, V> TreeRangeMap<K, V> create()" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Iterable<? extends R> rowKeys, Iterable<? extends C> columnKeys)" ], [ "create", "com.google.common.collect", "ArrayTable", "public static <R, C, V> ArrayTable<R, C, V> create(Table<R, C, V> table)" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of()" ], [ "all", "com.google.common.collect", "ImmutableRangeSet", "static <C extends Comparable> ImmutableRangeSet<C> all()" ], [ "of", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> of(Range<C> range)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable> ImmutableRangeSet<C> copyOf(RangeSet<C> rangeSet)" ], [ "builder", "com.google.common.collect", "ImmutableRangeSet", "public static <C extends Comparable<?>> Builder<C> builder()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(int expectedKeys)" ], [ "create", "com.google.common.collect", "LinkedListMultimap", "public static <K, V> LinkedListMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList()" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(E... elements)" ], [ "computeArrayListCapacity", "com.google.common.collect", "Lists", "static int computeArrayListCapacity(int arraySize)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterable<? extends E> elements)" ], [ "newArrayList", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayList(Iterator<? extends E> elements)" ], [ "newArrayListWithCapacity", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithCapacity(int initialArraySize)" ], [ "newArrayListWithExpectedSize", "com.google.common.collect", "Lists", "public static <E> ArrayList<E> newArrayListWithExpectedSize(int estimatedSize)" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList()" ], [ "newLinkedList", "com.google.common.collect", "Lists", "public static <E> LinkedList<E> newLinkedList(Iterable<? extends E> elements)" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList()" ], [ "newCopyOnWriteArrayList", "com.google.common.collect", "Lists", "public static <E> CopyOnWriteArrayList<E> newCopyOnWriteArrayList(Iterable<? extends E> elements)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, E[] rest)" ], [ "asList", "com.google.common.collect", "Lists", "public static <E> List<E> asList(@Nullable E first, @Nullable E second, E[] rest)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends List<? extends B>> lists)" ], [ "cartesianProduct", "com.google.common.collect", "Lists", "public static <B> List<List<B>> cartesianProduct(List<? extends B>... lists)" ], [ "transform", "com.google.common.collect", "Lists", "public static <F, T> List<T> transform(List<F> fromList, Function<? super F, ? extends T> function)" ], [ "partition", "com.google.common.collect", "Lists", "public static <T> List<List<T>> partition(List<T> list, int size)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static ImmutableList<Character> charactersOf(String string)" ], [ "charactersOf", "com.google.common.collect", "Lists", "public static List<Character> charactersOf(CharSequence sequence)" ], [ "reverse", "com.google.common.collect", "Lists", "public static <T> List<T> reverse(List<T> list)" ], [ "hashCodeImpl", "com.google.common.collect", "Lists", "static int hashCodeImpl(List<?> list)" ], [ "equalsImpl", "com.google.common.collect", "Lists", "static boolean equalsImpl(List<?> thisList, @Nullable Object other)" ], [ "addAllImpl", "com.google.common.collect", "Lists", "static <E> boolean addAllImpl(List<E> list, int index, Iterable<? extends E> elements)" ], [ "indexOfImpl", "com.google.common.collect", "Lists", "static int indexOfImpl(List<?> list, @Nullable Object element)" ], [ "lastIndexOfImpl", "com.google.common.collect", "Lists", "static int lastIndexOfImpl(List<?> list, @Nullable Object element)" ], [ "listIteratorImpl", "com.google.common.collect", "Lists", "static <E> ListIterator<E> listIteratorImpl(List<E> list, int index)" ], [ "subListImpl", "com.google.common.collect", "Lists", "static <E> List<E> subListImpl(final List<E> list, int fromIndex, int toIndex)" ], [ "cast", "com.google.common.collect", "Lists", "static <T> List<T> cast(Iterable<T> iterable)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R extends Comparable, C extends Comparable, V> TreeBasedTable<R, C, V> create()" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(Comparator<? super R> rowComparator, Comparator<? super C> columnComparator)" ], [ "create", "com.google.common.collect", "TreeBasedTable", "public static <R, C, V> TreeBasedTable<R, C, V> create(TreeBasedTable<R, C, ? extends V> table)" ], [ "create", "com.google.common.collect", "EvictingQueue", "public static <E> EvictingQueue<E> create(int maxSize)" ], [ "getFactory", "com.google.common.collect", "MapMakerInternalMap", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "unset", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.collect", "MapMakerInternalMap", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.collect", "MapMakerInternalMap", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.collect", "MapMakerInternalMap", "static int rehash(int h)" ], [ "getFactory", "com.google.common.collect", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean expireAfterWrite, boolean evictsBySize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create()" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(int expectedSize)" ], [ "create", "com.google.common.collect", "HashBiMap", "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)" ], [ "createEntryArray", "com.google.common.collect", "ImmutableMapEntry", "static <K, V> ImmutableMapEntry<K, V>[] createEntryArray(int size)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(Multiset<? extends E> multiset)" ], [ "unmodifiableMultiset", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> unmodifiableMultiset(ImmutableMultiset<E> multiset)" ], [ "unmodifiableSortedMultiset", "com.google.common.collect", "Multisets", "public static <E> SortedMultiset<E> unmodifiableSortedMultiset(SortedMultiset<E> sortedMultiset)" ], [ "immutableEntry", "com.google.common.collect", "Multisets", "public static <E> Multiset.Entry<E> immutableEntry(@Nullable E e, int n)" ], [ "filter", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> filter(Multiset<E> unfiltered, Predicate<? super E> predicate)" ], [ "inferDistinctElements", "com.google.common.collect", "Multisets", "static int inferDistinctElements(Iterable<?> elements)" ], [ "union", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> union(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "intersection", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> intersection(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "sum", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> sum(final Multiset<? extends E> multiset1, final Multiset<? extends E> multiset2)" ], [ "difference", "com.google.common.collect", "Multisets", "public static <E> Multiset<E> difference(final Multiset<E> multiset1, final Multiset<?> multiset2)" ], [ "containsOccurrences", "com.google.common.collect", "Multisets", "public static boolean containsOccurrences(Multiset<?> superMultiset, Multiset<?> subMultiset)" ], [ "retainOccurrences", "com.google.common.collect", "Multisets", "public static boolean retainOccurrences(Multiset<?> multisetToModify, Multiset<?> multisetToRetain)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Iterable<?> occurrencesToRemove)" ], [ "removeOccurrences", "com.google.common.collect", "Multisets", "public static boolean removeOccurrences(Multiset<?> multisetToModify, Multiset<?> occurrencesToRemove)" ], [ "equalsImpl", "com.google.common.collect", "Multisets", "static boolean equalsImpl(Multiset<?> multiset, @Nullable Object object)" ], [ "addAllImpl", "com.google.common.collect", "Multisets", "static <E> boolean addAllImpl(Multiset<E> self, Collection<? extends E> elements)" ], [ "removeAllImpl", "com.google.common.collect", "Multisets", "static boolean removeAllImpl(Multiset<?> self, Collection<?> elementsToRemove)" ], [ "retainAllImpl", "com.google.common.collect", "Multisets", "static boolean retainAllImpl(Multiset<?> self, Collection<?> elementsToRetain)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> int setCountImpl(Multiset<E> self, E element, int count)" ], [ "setCountImpl", "com.google.common.collect", "Multisets", "static <E> boolean setCountImpl(Multiset<E> self, E element, int oldCount, int newCount)" ], [ "iteratorImpl", "com.google.common.collect", "Multisets", "static <E> Iterator<E> iteratorImpl(Multiset<E> multiset)" ], [ "sizeImpl", "com.google.common.collect", "Multisets", "static int sizeImpl(Multiset<?> multiset)" ], [ "cast", "com.google.common.collect", "Multisets", "static <T> Multiset<T> cast(Iterable<T> iterable)" ], [ "copyHighestCountFirst", "com.google.common.collect", "Multisets", "public static <E> ImmutableMultiset<E> copyHighestCountFirst(Multiset<E> multiset)" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of()" ], [ "of", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> of(R rowKey, C columnKey, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> ImmutableTable<R, C, V> copyOf(Table<? extends R, ? extends C, ? extends V> table)" ], [ "builder", "com.google.common.collect", "ImmutableTable", "public static <R, C, V> Builder<R, C, V> builder()" ], [ "cellOf", "com.google.common.collect", "ImmutableTable", "static <R, C, V> Cell<R, C, V> cellOf(R rowKey, C columnKey, V value)" ], [ "forBoolean", "com.google.common.collect", "BoundType", "static BoundType forBoolean(boolean inclusive)" ], [ "immutableCell", "com.google.common.collect", "Tables", "public static <R, C, V> Cell<R, C, V> immutableCell(@Nullable R rowKey, @Nullable C columnKey, @Nullable V value)" ], [ "transpose", "com.google.common.collect", "Tables", "public static <R, C, V> Table<C, R, V> transpose(Table<R, C, V> table)" ], [ "newCustomTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> newCustomTable(Map<R, Map<C, V>> backingMap, Supplier<? extends Map<C, V>> factory)" ], [ "transformValues", "com.google.common.collect", "Tables", "public static <R, C, V1, V2> Table<R, C, V2> transformValues(Table<R, C, V1> fromTable, Function<? super V1, V2> function)" ], [ "unmodifiableTable", "com.google.common.collect", "Tables", "public static <R, C, V> Table<R, C, V> unmodifiableTable(Table<? extends R, ? extends C, ? extends V> table)" ], [ "unmodifiableRowSortedTable", "com.google.common.collect", "Tables", "public static <R, C, V> RowSortedTable<R, C, V> unmodifiableRowSortedTable(RowSortedTable<R, ? extends C, ? extends V> table)" ], [ "equalsImpl", "com.google.common.collect", "Tables", "static boolean equalsImpl(Table<?, ?, ?> table, @Nullable Object obj)" ], [ "hasSameComparator", "com.google.common.collect", "SortedIterables", "public static boolean hasSameComparator(Comparator<?> comparator, Iterable<?> elements)" ], [ "comparator", "com.google.common.collect", "SortedIterables", "public static <E> Comparator<? super E> comparator(SortedSet<E> sortedSet)" ], [ "newArray", "com.google.common.collect", "Platform", "static <T> T[] newArray(T[] reference, int length)" ], [ "newSetFromMap", "com.google.common.collect", "Platform", "static <E> Set<E> newSetFromMap(Map<E, Boolean> map)" ], [ "tryWeakKeys", "com.google.common.collect", "Platform", "static MapMaker tryWeakKeys(MapMaker mapMaker)" ], [ "mapsTransformEntriesSortedMap", "com.google.common.collect", "Platform", "static <K, V1, V2> SortedMap<K, V2> mapsTransformEntriesSortedMap(SortedMap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "mapsAsMapSortedSet", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsAsMapSortedSet(SortedSet<K> set, Function<? super K, V> function)" ], [ "setsFilterSortedSet", "com.google.common.collect", "Platform", "static <E> SortedSet<E> setsFilterSortedSet(SortedSet<E> set, Predicate<? super E> predicate)" ], [ "mapsFilterSortedMap", "com.google.common.collect", "Platform", "static <K, V> SortedMap<K, V> mapsFilterSortedMap(SortedMap<K, V> map, Predicate<? super Map.Entry<K, V>> predicate)" ], [ "newFastestQueue", "com.google.common.collect", "Platform", "static <E> Queue<E> newFastestQueue(int initialCapacity)" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create()" ], [ "create", "com.google.common.collect", "TreeRangeSet", "public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet)" ], [ "create", "com.google.common.collect", "CartesianList", "static <E> List<List<E>> create(List<? extends List<? extends E>> lists)" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> of(Range<K> range, V value)" ], [ "copyOf", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> ImmutableRangeMap<K, V> copyOf(RangeMap<K, ? extends V> rangeMap)" ], [ "builder", "com.google.common.collect", "ImmutableRangeMap", "public static <K extends Comparable<?>, V> Builder<K, V> builder()" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Class<K> keyType)" ], [ "create", "com.google.common.collect", "EnumHashBiMap", "public static <K extends Enum<K>, V> EnumHashBiMap<K, V> create(Map<K, ? extends V> map)" ], [ "newMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> newMultimap(Map<K, Collection<V>> map, final Supplier<? extends Collection<V>> factory)" ], [ "newListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> newListMultimap(Map<K, Collection<V>> map, final Supplier<? extends List<V>> factory)" ], [ "newSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> newSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends Set<V>> factory)" ], [ "newSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> newSortedSetMultimap(Map<K, Collection<V>> map, final Supplier<? extends SortedSet<V>> factory)" ], [ "invertFrom", "com.google.common.collect", "Multimaps", "public static <K, V, M extends Multimap<K, V>> M invertFrom(Multimap<? extends V, ? extends K> source, M dest)" ], [ "synchronizedMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> synchronizedMultimap(Multimap<K, V> multimap)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(Multimap<K, V> delegate)" ], [ "unmodifiableMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> unmodifiableMultimap(ImmutableMultimap<K, V> delegate)" ], [ "synchronizedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> synchronizedSetMultimap(SetMultimap<K, V> multimap)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(SetMultimap<K, V> delegate)" ], [ "unmodifiableSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> unmodifiableSetMultimap(ImmutableSetMultimap<K, V> delegate)" ], [ "synchronizedSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> synchronizedSortedSetMultimap(SortedSetMultimap<K, V> multimap)" ], [ "unmodifiableSortedSetMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> SortedSetMultimap<K, V> unmodifiableSortedSetMultimap(SortedSetMultimap<K, V> delegate)" ], [ "synchronizedListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> synchronizedListMultimap(ListMultimap<K, V> multimap)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ListMultimap<K, V> delegate)" ], [ "unmodifiableListMultimap", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> unmodifiableListMultimap(ImmutableListMultimap<K, V> delegate)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, SortedSet<V>> asMap(SortedSetMultimap<K, V> multimap)" ], [ "asMap", "com.google.common.collect", "Multimaps", "public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap)" ], [ "forMap", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> forMap(Map<K, V> map)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformValues(Multimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> Multimap<K, V2> transformEntries(Multimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "transformValues", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformValues(ListMultimap<K, V1> fromMultimap, final Function<? super V1, V2> function)" ], [ "transformEntries", "com.google.common.collect", "Multimaps", "public static <K, V1, V2> ListMultimap<K, V2> transformEntries(ListMultimap<K, V1> fromMap, EntryTransformer<? super K, ? super V1, V2> transformer)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterable<V> values, Function<? super V, K> keyFunction)" ], [ "index", "com.google.common.collect", "Multimaps", "public static <K, V> ImmutableListMultimap<K, V> index(Iterator<V> values, Function<? super V, K> keyFunction)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterKeys(Multimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterKeys(SetMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterKeys", "com.google.common.collect", "Multimaps", "public static <K, V> ListMultimap<K, V> filterKeys(ListMultimap<K, V> unfiltered, final Predicate<? super K> keyPredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterValues(Multimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterValues", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterValues(SetMultimap<K, V> unfiltered, final Predicate<? super V> valuePredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> Multimap<K, V> filterEntries(Multimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "filterEntries", "com.google.common.collect", "Multimaps", "public static <K, V> SetMultimap<K, V> filterEntries(SetMultimap<K, V> unfiltered, Predicate<? super Entry<K, V>> entryPredicate)" ], [ "equalsImpl", "com.google.common.collect", "Multimaps", "static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object)" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create()" ], [ "create", "com.google.common.collect", "MinMaxPriorityQueue", "public static <E extends Comparable<E>> MinMaxPriorityQueue<E> create(Iterable<? extends E> initialContents)" ], [ "orderedBy", "com.google.common.collect", "MinMaxPriorityQueue", "public static <B> Builder<B> orderedBy(Comparator<B> comparator)" ], [ "expectedSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> expectedSize(int expectedSize)" ], [ "maximumSize", "com.google.common.collect", "MinMaxPriorityQueue", "public static Builder<Comparable> maximumSize(int maximumSize)" ], [ "isEvenLevel", "com.google.common.collect", "MinMaxPriorityQueue", "static boolean isEvenLevel(int index)" ], [ "initialQueueSize", "com.google.common.collect", "MinMaxPriorityQueue", "static int initialQueueSize(int configuredExpectedSize, int maximumSize, Iterable<?> initialContents)" ], [ "builder", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap.Builder<K, V> builder()" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMapFauxverideShim", "public static <K, V> ImmutableSortedMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "lowerBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> lowerBoundFn()" ], [ "upperBoundFn", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Function<Range<C>, Cut<C>> upperBoundFn()" ], [ "create", "com.google.common.collect", "Range", "static <C extends Comparable<?>> Range<C> create(Cut<C> lowerBound, Cut<C> upperBound)" ], [ "open", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> open(C lower, C upper)" ], [ "closed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closed(C lower, C upper)" ], [ "closedOpen", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> closedOpen(C lower, C upper)" ], [ "openClosed", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> openClosed(C lower, C upper)" ], [ "range", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> range(C lower, BoundType lowerType, C upper, BoundType upperType)" ], [ "lessThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> lessThan(C endpoint)" ], [ "atMost", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atMost(C endpoint)" ], [ "upTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> upTo(C endpoint, BoundType boundType)" ], [ "greaterThan", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> greaterThan(C endpoint)" ], [ "atLeast", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> atLeast(C endpoint)" ], [ "downTo", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> downTo(C endpoint, BoundType boundType)" ], [ "all", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> all()" ], [ "singleton", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> singleton(C value)" ], [ "encloseAll", "com.google.common.collect", "Range", "public static <C extends Comparable<?>> Range<C> encloseAll(Iterable<C> values)" ], [ "compareOrThrow", "com.google.common.collect", "Range", "static int compareOrThrow(Comparable left, Comparable right)" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> ImmutableClassToInstanceMap<B> of()" ], [ "of", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, T extends B> ImmutableClassToInstanceMap<B> of(Class<T> type, T value)" ], [ "builder", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B> Builder<B> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableClassToInstanceMap", "public static <B, S extends B> ImmutableClassToInstanceMap<B> copyOf(Map<? extends Class<? extends S>, ? extends S> map)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(final Iterable<E> iterable)" ], [ "from", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> from(FluentIterable<E> iterable)" ], [ "of", "com.google.common.collect", "FluentIterable", "public static <E> FluentIterable<E> of(E[] elements)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E extends Comparable> int binarySearch(List<? extends E> list, E e, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K extends Comparable> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E, K> int binarySearch(List<E> list, Function<? super E, K> keyFunction, @Nullable K key, Comparator<? super K> keyComparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "binarySearch", "com.google.common.collect", "SortedLists", "public static <E> int binarySearch(List<? extends E> list, @Nullable E key, Comparator<? super E> comparator, KeyPresentBehavior presentBehavior, KeyAbsentBehavior absentBehavior)" ], [ "checkNonnegative", "com.google.common.collect", "CollectPreconditions", "static int checkNonnegative(int value, String name)" ], [ "start", "com.google.common.collect", "ComparisonChain", "public static ComparisonChain start()" ], [ "natural", "com.google.common.collect", "Ordering", "public static <C extends Comparable> Ordering<C> natural()" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Comparator<T> comparator)" ], [ "from", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> from(Ordering<T> ordering)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(List<T> valuesInOrder)" ], [ "explicit", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> explicit(T leastValue, T... remainingValuesInOrder)" ], [ "allEqual", "com.google.common.collect", "Ordering", "public static Ordering<Object> allEqual()" ], [ "usingToString", "com.google.common.collect", "Ordering", "public static Ordering<Object> usingToString()" ], [ "arbitrary", "com.google.common.collect", "Ordering", "public static Ordering<Object> arbitrary()" ], [ "compound", "com.google.common.collect", "Ordering", "public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> comparators)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> type)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements)" ], [ "create", "com.google.common.collect", "EnumMultiset", "public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements, Class<E> type)" ], [ "asImmutable", "com.google.common.collect", "ImmutableEnumMap", "static <K extends Enum<K>, V> ImmutableMap<K, V> asImmutable(EnumMap<K, V> map)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create()" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E> TreeMultiset<E> create(@Nullable Comparator<? super E> comparator)" ], [ "create", "com.google.common.collect", "TreeMultiset", "public static <E extends Comparable> TreeMultiset<E> create(Iterable<? extends E> elements)" ], [ "distinctElements", "com.google.common.collect", "TreeMultiset", "static int distinctElements(@Nullable AvlNode<?> node)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of()" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11)" ], [ "of", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10, E e11, E e12, E... others)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableList", "public static <E> ImmutableList<E> copyOf(E[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements)" ], [ "asImmutableList", "com.google.common.collect", "ImmutableList", "static <E> ImmutableList<E> asImmutableList(Object[] elements, int length)" ], [ "builder", "com.google.common.collect", "ImmutableList", "public static <E> Builder<E> builder()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create()" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(int expectedKeys, int expectedValuesPerKey)" ], [ "create", "com.google.common.collect", "HashMultimap", "public static <K, V> HashMultimap<K, V> create(Multimap<? extends K, ? extends V> multimap)" ], [ "fromEntries", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntries(Entry<K, V>... entries)" ], [ "fromEntryArray", "com.google.common.collect", "RegularImmutableMap", "static <K, V> RegularImmutableMap<K, V> fromEntryArray(int n, Entry<K, V>[] entryArray)" ], [ "get", "com.google.common.collect", "RegularImmutableMap", "static <V> V get(@Nullable Object key, ImmutableMapEntry<?, V>[] keyTable, int mask)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(int distinctElements)" ], [ "create", "com.google.common.collect", "LinkedHashMultiset", "public static <E> LinkedHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create()" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(Iterable<? extends E> elements)" ], [ "create", "com.google.common.collect", "ConcurrentHashMultiset", "public static <E> ConcurrentHashMultiset<E> create(MapMaker mapMaker)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "entryOf", "com.google.common.collect", "ImmutableMap", "static <K, V> ImmutableMapEntry<K, V> entryOf(K key, V value)" ], [ "builder", "com.google.common.collect", "ImmutableMap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Map<? extends K, ? extends V> map)" ], [ "copyOf", "com.google.common.collect", "ImmutableMap", "public static <K, V> ImmutableMap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "expandedCapacity", "com.google.common.collect", "ImmutableCollection", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "expandedCapacity", "com.google.common.collect", "Builder", "static int expandedCapacity(int oldCapacity, int minCapacity)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableListMultimap", "public static <K, V> ImmutableListMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of()" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)" ], [ "of", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)" ], [ "builder", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> Builder<K, V> builder()" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Multimap<? extends K, ? extends V> multimap)" ], [ "copyOf", "com.google.common.collect", "ImmutableMultimap", "public static <K, V> ImmutableMultimap<K, V> copyOf(Iterable<? extends Entry<? extends K, ? extends V>> entries)" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create()" ], [ "create", "com.google.common.collect", "MutableClassToInstanceMap", "public static <B> MutableClassToInstanceMap<B> create(Map<Class<? extends B>, B> backingMap)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<? super E>> ImmutableSortedMultiset<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> ImmutableSortedMultiset<E> copyOfSorted(SortedMultiset<E> sortedMultiset)" ], [ "emptyMultiset", "com.google.common.collect", "ImmutableSortedMultiset", "static <E> ImmutableSortedMultiset<E> emptyMultiset(Comparator<? super E> comparator)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedMultiset", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(List<Cell<R, C, V>> cells, @Nullable final Comparator<? super R> rowComparator, @Nullable final Comparator<? super C> columnComparator)" ], [ "forCells", "com.google.common.collect", "RegularImmutableTable", "static <R, C, V> RegularImmutableTable<R, C, V> forCells(Iterable<Cell<R, C, V>> cells)" ], [ "from", "com.google.common.collect", "GeneralRange", "static <T extends Comparable> GeneralRange<T> from(Range<T> range)" ], [ "all", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> all(Comparator<? super T> comparator)" ], [ "downTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> downTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "upTo", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> upTo(Comparator<? super T> comparator, @Nullable T endpoint, BoundType boundType)" ], [ "range", "com.google.common.collect", "GeneralRange", "static <T> GeneralRange<T> range(Comparator<? super T> comparator, @Nullable T lower, BoundType lowerType, @Nullable T upper, BoundType upperType)" ], [ "emptySet", "com.google.common.collect", "ImmutableSortedSet", "static <E> RegularImmutableSortedSet<E> emptySet(Comparator<? super E> comparator)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> of()" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E element)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5)" ], [ "of", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E... remaining)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<? super E>> ImmutableSortedSet<E> copyOf(E[] elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Collection<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterator<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)" ], [ "copyOf", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOf(Comparator<? super E> comparator, Collection<? extends E> elements)" ], [ "copyOfSorted", "com.google.common.collect", "ImmutableSortedSet", "public static <E> ImmutableSortedSet<E> copyOfSorted(SortedSet<E> sortedSet)" ], [ "construct", "com.google.common.collect", "ImmutableSortedSet", "static <E> ImmutableSortedSet<E> construct(Comparator<? super E> comparator, int n, E... contents)" ], [ "orderedBy", "com.google.common.collect", "ImmutableSortedSet", "public static <E> Builder<E> orderedBy(Comparator<E> comparator)" ], [ "reverseOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> reverseOrder()" ], [ "naturalOrder", "com.google.common.collect", "ImmutableSortedSet", "public static <E extends Comparable<?>> Builder<E> naturalOrder()" ], [ "unsafeCompare", "com.google.common.collect", "ImmutableSortedSet", "static int unsafeCompare(Comparator<?> comparator, Object a, Object b)" ], [ "create", "com.google.common.eventbus", "Subscriber", "static Subscriber create(EventBus bus, Object listener, Method method)" ], [ "flattenHierarchy", "com.google.common.eventbus", "SubscriberRegistry", "static ImmutableSet<Class<?>> flattenHierarchy(Class<?> concreteClass)" ], [ "perThreadDispatchQueue", "com.google.common.eventbus", "Dispatcher", "static Dispatcher perThreadDispatchQueue()" ], [ "legacyAsync", "com.google.common.eventbus", "Dispatcher", "static Dispatcher legacyAsync()" ], [ "immediate", "com.google.common.eventbus", "Dispatcher", "static Dispatcher immediate()" ], [ "urlFormParameterEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFormParameterEscaper()" ], [ "urlPathSegmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlPathSegmentEscaper()" ], [ "urlFragmentEscaper", "com.google.common.net", "UrlEscapers", "public static Escaper urlFragmentEscaper()" ], [ "from", "com.google.common.net", "InternetDomainName", "public static InternetDomainName from(String domain)" ], [ "isValid", "com.google.common.net", "InternetDomainName", "public static boolean isValid(String name)" ], [ "create", "com.google.common.net", "MediaType", "public static MediaType create(String type, String subtype)" ], [ "createApplicationType", "com.google.common.net", "MediaType", "static MediaType createApplicationType(String subtype)" ], [ "createAudioType", "com.google.common.net", "MediaType", "static MediaType createAudioType(String subtype)" ], [ "createImageType", "com.google.common.net", "MediaType", "static MediaType createImageType(String subtype)" ], [ "createTextType", "com.google.common.net", "MediaType", "static MediaType createTextType(String subtype)" ], [ "createVideoType", "com.google.common.net", "MediaType", "static MediaType createVideoType(String subtype)" ], [ "parse", "com.google.common.net", "MediaType", "public static MediaType parse(String input)" ], [ "forString", "com.google.common.net", "InetAddresses", "public static InetAddress forString(String ipString)" ], [ "isInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isInetAddress(String ipString)" ], [ "toAddrString", "com.google.common.net", "InetAddresses", "public static String toAddrString(InetAddress ip)" ], [ "toUriString", "com.google.common.net", "InetAddresses", "public static String toUriString(InetAddress ip)" ], [ "forUriString", "com.google.common.net", "InetAddresses", "public static InetAddress forUriString(String hostAddr)" ], [ "isUriInetAddress", "com.google.common.net", "InetAddresses", "public static boolean isUriInetAddress(String ipString)" ], [ "isCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isCompatIPv4Address(Inet6Address ip)" ], [ "getCompatIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCompatIPv4Address(Inet6Address ip)" ], [ "is6to4Address", "com.google.common.net", "InetAddresses", "public static boolean is6to4Address(Inet6Address ip)" ], [ "get6to4IPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address get6to4IPv4Address(Inet6Address ip)" ], [ "isTeredoAddress", "com.google.common.net", "InetAddresses", "public static boolean isTeredoAddress(Inet6Address ip)" ], [ "getTeredoInfo", "com.google.common.net", "InetAddresses", "public static TeredoInfo getTeredoInfo(Inet6Address ip)" ], [ "isIsatapAddress", "com.google.common.net", "InetAddresses", "public static boolean isIsatapAddress(Inet6Address ip)" ], [ "getIsatapIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getIsatapIPv4Address(Inet6Address ip)" ], [ "hasEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static boolean hasEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "getEmbeddedIPv4ClientAddress", "com.google.common.net", "InetAddresses", "public static Inet4Address getEmbeddedIPv4ClientAddress(Inet6Address ip)" ], [ "isMappedIPv4Address", "com.google.common.net", "InetAddresses", "public static boolean isMappedIPv4Address(String ipString)" ], [ "getCoercedIPv4Address", "com.google.common.net", "InetAddresses", "public static Inet4Address getCoercedIPv4Address(InetAddress ip)" ], [ "coerceToInteger", "com.google.common.net", "InetAddresses", "public static int coerceToInteger(InetAddress ip)" ], [ "fromInteger", "com.google.common.net", "InetAddresses", "public static Inet4Address fromInteger(int address)" ], [ "fromLittleEndianByteArray", "com.google.common.net", "InetAddresses", "public static InetAddress fromLittleEndianByteArray(byte[] addr) throws UnknownHostException" ], [ "decrement", "com.google.common.net", "InetAddresses", "public static InetAddress decrement(InetAddress address)" ], [ "increment", "com.google.common.net", "InetAddresses", "public static InetAddress increment(InetAddress address)" ], [ "isMaximum", "com.google.common.net", "InetAddresses", "public static boolean isMaximum(InetAddress address)" ], [ "fromParts", "com.google.common.net", "HostAndPort", "public static HostAndPort fromParts(String host, int port)" ], [ "fromHost", "com.google.common.net", "HostAndPort", "public static HostAndPort fromHost(String host)" ], [ "fromString", "com.google.common.net", "HostAndPort", "public static HostAndPort fromString(String hostPortString)" ], [ "fromValid", "com.google.common.net", "HostSpecifier", "public static HostSpecifier fromValid(String specifier)" ], [ "from", "com.google.common.net", "HostSpecifier", "public static HostSpecifier from(String specifier) throws ParseException" ], [ "isValid", "com.google.common.net", "HostSpecifier", "public static boolean isValid(String specifier)" ], [ "getFactory", "com.google.common.cache", "LocalCache", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "unset", "com.google.common.cache", "LocalCache", "static <K, V> ValueReference<K, V> unset()" ], [ "nullEntry", "com.google.common.cache", "LocalCache", "static <K, V> ReferenceEntry<K, V> nullEntry()" ], [ "discardingQueue", "com.google.common.cache", "LocalCache", "static <E> Queue<E> discardingQueue()" ], [ "rehash", "com.google.common.cache", "LocalCache", "static int rehash(int h)" ], [ "getFactory", "com.google.common.cache", "EntryFactory", "static EntryFactory getFactory(Strength keyStrength, boolean usesAccessQueue, boolean usesWriteQueue)" ], [ "create", "com.google.common.cache", "RemovalNotification", "public static <K, V> RemovalNotification<K, V> create(@Nullable K key, @Nullable V value, RemovalCause cause)" ], [ "asynchronous", "com.google.common.cache", "RemovalListeners", "public static <K, V> RemovalListener<K, V> asynchronous(final RemovalListener<K, V> listener, final Executor executor)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> from(Function<K, V> function)" ], [ "from", "com.google.common.cache", "CacheLoader", "public static <V> CacheLoader<Object, V> from(Supplier<V> supplier)" ], [ "asyncReloading", "com.google.common.cache", "CacheLoader", "public static <K, V> CacheLoader<K, V> asyncReloading(final CacheLoader<K, V> loader, final Executor executor)" ], [ "newBuilder", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> newBuilder()" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(CacheBuilderSpec spec)" ], [ "from", "com.google.common.cache", "CacheBuilder", "public static CacheBuilder<Object, Object> from(String spec)" ], [ "parse", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec parse(String cacheBuilderSpecification)" ], [ "disableCaching", "com.google.common.cache", "CacheBuilderSpec", "public static CacheBuilderSpec disableCaching()" ], [ "create", "com.google.common.cache", "LongAddables", "public static LongAddable create()" ], [ "doNothing", "com.google.common.util.concurrent", "Runnables", "public static Runnable doNothing()" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor, long terminationTimeout, TimeUnit timeUnit)" ], [ "getExitingExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)" ], [ "getExitingScheduledExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ScheduledExecutorService getExitingScheduledExecutorService(ScheduledThreadPoolExecutor executor)" ], [ "sameThreadExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService sameThreadExecutor()" ], [ "newDirectExecutorService", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService newDirectExecutorService()" ], [ "directExecutor", "com.google.common.util.concurrent", "MoreExecutors", "public static Executor directExecutor()" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningExecutorService listeningDecorator(ExecutorService delegate)" ], [ "listeningDecorator", "com.google.common.util.concurrent", "MoreExecutors", "public static ListeningScheduledExecutorService listeningDecorator(ScheduledExecutorService delegate)" ], [ "invokeAnyImpl", "com.google.common.util.concurrent", "MoreExecutors", "static <T> T invokeAnyImpl(ListeningExecutorService executorService, Collection<? extends Callable<T>> tasks, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException" ], [ "platformThreadFactory", "com.google.common.util.concurrent", "MoreExecutors", "public static ThreadFactory platformThreadFactory()" ], [ "newThread", "com.google.common.util.concurrent", "MoreExecutors", "static Thread newThread(String name, Runnable runnable)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static Executor renamingDecorator(final Executor executor, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ExecutorService renamingDecorator(final ExecutorService service, final Supplier<String> nameSupplier)" ], [ "renamingDecorator", "com.google.common.util.concurrent", "MoreExecutors", "static ScheduledExecutorService renamingDecorator(final ScheduledExecutorService service, final Supplier<String> nameSupplier)" ], [ "shutdownAndAwaitTermination", "com.google.common.util.concurrent", "MoreExecutors", "public static boolean shutdownAndAwaitTermination(ExecutorService service, long timeout, TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "AbstractScheduledService", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "newFixedDelaySchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedDelaySchedule(final long initialDelay, final long delay, final TimeUnit unit)" ], [ "newFixedRateSchedule", "com.google.common.util.concurrent", "Scheduler", "public static Scheduler newFixedRateSchedule(final long initialDelay, final long period, final TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "SettableFuture", "public static <V> SettableFuture<V> create()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference()" ], [ "newReference", "com.google.common.util.concurrent", "Atomics", "public static <V> AtomicReference<V> newReference(@Nullable V initialValue)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(int length)" ], [ "newReferenceArray", "com.google.common.util.concurrent", "Atomics", "public static <E> AtomicReferenceArray<E> newReferenceArray(E[] array)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future)" ], [ "listenInPoolThread", "com.google.common.util.concurrent", "JdkFutureAdapters", "public static <V> ListenableFuture<V> listenInPoolThread(Future<V> future, Executor executor)" ], [ "awaitUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean awaitUninterruptibly(CountDownLatch latch, long timeout, TimeUnit unit)" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future) throws ExecutionException" ], [ "getUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <V> V getUninterruptibly(Future<V> future, long timeout, TimeUnit unit) throws ExecutionException, TimeoutException" ], [ "takeUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static <E> E takeUninterruptibly(BlockingQueue<E> queue)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, long timeout, TimeUnit unit)" ], [ "tryAcquireUninterruptibly", "com.google.common.util.concurrent", "Uninterruptibles", "public static boolean tryAcquireUninterruptibly(Semaphore semaphore, int permits, long timeout, TimeUnit unit)" ], [ "cancellationExceptionWithCause", "com.google.common.util.concurrent", "AbstractFuture", "static final CancellationException cancellationExceptionWithCause(@Nullable String message, @Nullable Throwable cause)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "TrustedListenableFutureTask", "static <V> TrustedListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "public static RateLimiter create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)" ], [ "create", "com.google.common.util.concurrent", "RateLimiter", "static RateLimiter create(SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, TimeUnit unit, double coldFactor)" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "RateLimiter", "static final SleepingStopwatch createFromSystemTimer()" ], [ "createFromSystemTimer", "com.google.common.util.concurrent", "SleepingStopwatch", "static final SleepingStopwatch createFromSystemTimer()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create()" ], [ "create", "com.google.common.util.concurrent", "AtomicLongMap", "public static <K> AtomicLongMap<K> create(Map<? extends K, ? extends Long> m)" ], [ "systemExit", "com.google.common.util.concurrent", "UncaughtExceptionHandlers", "public static UncaughtExceptionHandler systemExit()" ], [ "isInstanceOfThrowableClass", "com.google.common.util.concurrent", "Platform", "static boolean isInstanceOfThrowableClass(@Nullable Throwable t, Class<? extends Throwable> expectedClass)" ], [ "newInstance", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static CycleDetectingLockFactory newInstance(Policy policy)" ], [ "newInstanceWithExplicitOrdering", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> enumClass, Policy policy)" ], [ "createNodes", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> clazz)" ], [ "returning", "com.google.common.util.concurrent", "Callables", "public static <T> Callable<T> returning(@Nullable final T value)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static <T> Callable<T> threadRenaming(final Callable<T> callable, final Supplier<String> nameSupplier)" ], [ "threadRenaming", "com.google.common.util.concurrent", "Callables", "static Runnable threadRenaming(final Runnable task, final Supplier<String> nameSupplier)" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(GetCheckedTypeValidator validator, Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "FuturesGetChecked", "static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "weakSetValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator weakSetValidator()" ], [ "classValueValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator classValueValidator()" ], [ "getBestValidator", "com.google.common.util.concurrent", "FuturesGetChecked", "static GetCheckedTypeValidator getBestValidator()" ], [ "isCheckedException", "com.google.common.util.concurrent", "FuturesGetChecked", "static boolean isCheckedException(Class<? extends Exception> type)" ], [ "getBestValidator", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static GetCheckedTypeValidator getBestValidator()" ], [ "lock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lock(int stripes)" ], [ "lazyWeakLock", "com.google.common.util.concurrent", "Striped", "public static Striped<Lock> lazyWeakLock(int stripes)" ], [ "semaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> semaphore(int stripes, final int permits)" ], [ "lazyWeakSemaphore", "com.google.common.util.concurrent", "Striped", "public static Striped<Semaphore> lazyWeakSemaphore(int stripes, final int permits)" ], [ "readWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> readWriteLock(int stripes)" ], [ "lazyWeakReadWriteLock", "com.google.common.util.concurrent", "Striped", "public static Striped<ReadWriteLock> lazyWeakReadWriteLock(int stripes)" ], [ "makeChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> makeChecked(ListenableFuture<V> future, Function<? super Exception, X> mapper)" ], [ "immediateFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFuture(@Nullable V value)" ], [ "immediateCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateCheckedFuture(@Nullable V value)" ], [ "immediateFailedFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateFailedFuture(Throwable throwable)" ], [ "immediateCancelledFuture", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> immediateCancelledFuture()" ], [ "immediateFailedCheckedFuture", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> CheckedFuture<V, X> immediateFailedCheckedFuture(X exception)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback)" ], [ "withFallback", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withFallback(ListenableFuture<? extends V> input, FutureFallback<? extends V> fallback, Executor executor)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback)" ], [ "catching", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catching(ListenableFuture<? extends V> input, Class<X> exceptionType, Function<? super X, ? extends V> fallback, Executor executor)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback)" ], [ "catchingAsync", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Throwable> ListenableFuture<V> catchingAsync(ListenableFuture<? extends V> input, Class<X> exceptionType, AsyncFunction<? super X, ? extends V> fallback, Executor executor)" ], [ "asAsyncFunction", "com.google.common.util.concurrent", "Futures", "static <V> AsyncFunction<Throwable, V> asAsyncFunction(final FutureFallback<V> fallback)" ], [ "withTimeout", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> withTimeout(ListenableFuture<V> delegate, long time, TimeUnit unit, ScheduledExecutorService scheduledExecutor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function)" ], [ "transformAsync", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transformAsync(ListenableFuture<I> input, AsyncFunction<? super I, ? extends O> function, Executor executor)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function)" ], [ "transform", "com.google.common.util.concurrent", "Futures", "public static <I, O> ListenableFuture<O> transform(ListenableFuture<I> input, final Function<? super I, ? extends O> function, Executor executor)" ], [ "lazyTransform", "com.google.common.util.concurrent", "Futures", "public static <I, O> Future<O> lazyTransform(final Future<I> input, final Function<? super I, ? extends O> function)" ], [ "dereference", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> dereference(ListenableFuture<? extends ListenableFuture<? extends V>> nested)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(ListenableFuture<? extends V>... futures)" ], [ "allAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> allAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "nonCancellationPropagating", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<V> nonCancellationPropagating(ListenableFuture<V> future)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(ListenableFuture<? extends V>... futures)" ], [ "successfulAsList", "com.google.common.util.concurrent", "Futures", "public static <V> ListenableFuture<List<V>> successfulAsList(Iterable<? extends ListenableFuture<? extends V>> futures)" ], [ "inCompletionOrder", "com.google.common.util.concurrent", "Futures", "public static <T> ImmutableList<ListenableFuture<T>> inCompletionOrder(Iterable<? extends ListenableFuture<? extends T>> futures)" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, Class<X> exceptionClass) throws X" ], [ "get", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V get(Future<V> future, long timeout, TimeUnit unit, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass) throws X" ], [ "getChecked", "com.google.common.util.concurrent", "Futures", "public static <V, X extends Exception> V getChecked(Future<V> future, Class<X> exceptionClass, long timeout, TimeUnit unit) throws X" ], [ "getUnchecked", "com.google.common.util.concurrent", "Futures", "public static <V> V getUnchecked(Future<V> future)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Callable<V> callable)" ], [ "create", "com.google.common.util.concurrent", "ListenableFutureTask", "public static <V> ListenableFutureTask<V> create(Runnable runnable, @Nullable V result)" ], [ "goodFastHash", "com.google.common.hash", "Hashing", "public static HashFunction goodFastHash(int minimumBits)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32(int seed)" ], [ "murmur3_32", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_32()" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128(int seed)" ], [ "murmur3_128", "com.google.common.hash", "Hashing", "public static HashFunction murmur3_128()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24()" ], [ "sipHash24", "com.google.common.hash", "Hashing", "public static HashFunction sipHash24(long k0, long k1)" ], [ "md5", "com.google.common.hash", "Hashing", "public static HashFunction md5()" ], [ "sha1", "com.google.common.hash", "Hashing", "public static HashFunction sha1()" ], [ "sha256", "com.google.common.hash", "Hashing", "public static HashFunction sha256()" ], [ "sha384", "com.google.common.hash", "Hashing", "public static HashFunction sha384()" ], [ "sha512", "com.google.common.hash", "Hashing", "public static HashFunction sha512()" ], [ "crc32c", "com.google.common.hash", "Hashing", "public static HashFunction crc32c()" ], [ "crc32", "com.google.common.hash", "Hashing", "public static HashFunction crc32()" ], [ "adler32", "com.google.common.hash", "Hashing", "public static HashFunction adler32()" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(HashCode hashCode, int buckets)" ], [ "consistentHash", "com.google.common.hash", "Hashing", "public static int consistentHash(long input, int buckets)" ], [ "combineOrdered", "com.google.common.hash", "Hashing", "public static HashCode combineOrdered(Iterable<HashCode> hashCodes)" ], [ "combineUnordered", "com.google.common.hash", "Hashing", "public static HashCode combineUnordered(Iterable<HashCode> hashCodes)" ], [ "checkPositiveAndMakeMultipleOf32", "com.google.common.hash", "Hashing", "static int checkPositiveAndMakeMultipleOf32(int bits)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(HashFunction first, HashFunction second, HashFunction... rest)" ], [ "concatenating", "com.google.common.hash", "Hashing", "public static HashFunction concatenating(Iterable<HashFunction> hashFunctions)" ], [ "fromInt", "com.google.common.hash", "HashCode", "public static HashCode fromInt(int hash)" ], [ "fromLong", "com.google.common.hash", "HashCode", "public static HashCode fromLong(long hash)" ], [ "fromBytes", "com.google.common.hash", "HashCode", "public static HashCode fromBytes(byte[] bytes)" ], [ "fromBytesNoCopy", "com.google.common.hash", "HashCode", "static HashCode fromBytesNoCopy(byte[] bytes)" ], [ "fromString", "com.google.common.hash", "HashCode", "public static HashCode fromString(String string)" ], [ "byteArrayFunnel", "com.google.common.hash", "Funnels", "public static Funnel<byte[]> byteArrayFunnel()" ], [ "unencodedCharsFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> unencodedCharsFunnel()" ], [ "stringFunnel", "com.google.common.hash", "Funnels", "public static Funnel<CharSequence> stringFunnel(Charset charset)" ], [ "integerFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Integer> integerFunnel()" ], [ "sequentialFunnel", "com.google.common.hash", "Funnels", "public static <E> Funnel<Iterable<? extends E>> sequentialFunnel(Funnel<E> elementFunnel)" ], [ "longFunnel", "com.google.common.hash", "Funnels", "public static Funnel<Long> longFunnel()" ], [ "asOutputStream", "com.google.common.hash", "Funnels", "public static OutputStream asOutputStream(PrimitiveSink sink)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp)" ], [ "create", "com.google.common.hash", "BloomFilter", "static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions, double fpp, Strategy strategy)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, int expectedInsertions)" ], [ "create", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> create(Funnel<? super T> funnel, long expectedInsertions)" ], [ "optimalNumOfHashFunctions", "com.google.common.hash", "BloomFilter", "static int optimalNumOfHashFunctions(long n, long m)" ], [ "optimalNumOfBits", "com.google.common.hash", "BloomFilter", "static long optimalNumOfBits(long n, double p)" ], [ "readFrom", "com.google.common.hash", "BloomFilter", "public static <T> BloomFilter<T> readFrom(InputStream in, Funnel<T> funnel) throws IOException" ], [ "from", "com.google.common.reflect", "ClassPath", "public static ClassPath from(ClassLoader classloader) throws IOException" ], [ "of", "com.google.common.reflect", "ClassPath", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "ClassPath", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "ClassPath", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "ClassPath", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getClassName", "com.google.common.reflect", "ClassPath", "static String getClassName(String filename)" ], [ "of", "com.google.common.reflect", "ResourceInfo", "static ResourceInfo of(String resourceName, ClassLoader loader)" ], [ "getClassPathFromManifest", "com.google.common.reflect", "Scanner", "static ImmutableSet<File> getClassPathFromManifest(File jarFile, @Nullable Manifest manifest)" ], [ "getClassPathEntries", "com.google.common.reflect", "Scanner", "static ImmutableMap<File, ClassLoader> getClassPathEntries(ClassLoader classloader)" ], [ "getClassPathEntry", "com.google.common.reflect", "Scanner", "static URL getClassPathEntry(File jarFile, String path) throws MalformedURLException" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(Class<?> clazz)" ], [ "getPackageName", "com.google.common.reflect", "Reflection", "public static String getPackageName(String classFullName)" ], [ "newProxy", "com.google.common.reflect", "Reflection", "public static <T> T newProxy(Class<T> interfaceType, InvocationHandler handler)" ], [ "of", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> ImmutableTypeToInstanceMap<B> of()" ], [ "builder", "com.google.common.reflect", "ImmutableTypeToInstanceMap", "public static <B> Builder<B> builder()" ], [ "of", "com.google.common.reflect", "TypeToken", "public static <T> TypeToken<T> of(Class<T> type)" ], [ "of", "com.google.common.reflect", "TypeToken", "public static TypeToken<?> of(Type type)" ], [ "toGenericType", "com.google.common.reflect", "TypeToken", "static <T> TypeToken<? extends T> toGenericType(Class<T> cls)" ], [ "transformEntries", "com.google.common.reflect", "MutableTypeToInstanceMap", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "transformEntries", "com.google.common.reflect", "UnmodifiableEntry", "static <K, V> Set<Entry<K, V>> transformEntries(final Set<Entry<K, V>> entries)" ], [ "accordingTo", "com.google.common.reflect", "TypeResolver", "static TypeResolver accordingTo(Type type)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeResolver", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeResolver", "static Object forLookup(Type t)" ], [ "getTypeMappings", "com.google.common.reflect", "TypeMappingIntrospector", "static ImmutableMap<TypeVariableKey, Type> getTypeMappings(Type contextType)" ], [ "forLookup", "com.google.common.reflect", "TypeVariableKey", "static Object forLookup(Type t)" ], [ "newArrayType", "com.google.common.reflect", "Types", "static Type newArrayType(Type componentType)" ], [ "newParameterizedTypeWithOwner", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedTypeWithOwner(@Nullable Type ownerType, Class<?> rawType, Type... arguments)" ], [ "newParameterizedType", "com.google.common.reflect", "Types", "static ParameterizedType newParameterizedType(Class<?> rawType, Type... arguments)" ], [ "newArtificialTypeVariable", "com.google.common.reflect", "Types", "static <D extends GenericDeclaration> TypeVariable<D> newArtificialTypeVariable(D declaration, String name, Type... bounds)" ], [ "subtypeOf", "com.google.common.reflect", "Types", "static WildcardType subtypeOf(Type upperBound)" ], [ "supertypeOf", "com.google.common.reflect", "Types", "static WildcardType supertypeOf(Type lowerBound)" ], [ "toString", "com.google.common.reflect", "Types", "static String toString(Type type)" ], [ "getComponentType", "com.google.common.reflect", "Types", "static Type getComponentType(Type type)" ], [ "getArrayClass", "com.google.common.reflect", "Types", "static Class<?> getArrayClass(Class<?> componentType)" ], [ "from", "com.google.common.reflect", "Invokable", "public static Invokable<?, Object> from(Method method)" ], [ "from", "com.google.common.reflect", "Invokable", "public static <T> Invokable<T, T> from(Constructor<T> constructor)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterable<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(Iterator<? extends CharSource> sources)" ], [ "concat", "com.google.common.io", "CharSource", "public static CharSource concat(CharSource... sources)" ], [ "wrap", "com.google.common.io", "CharSource", "public static CharSource wrap(CharSequence charSequence)" ], [ "empty", "com.google.common.io", "CharSource", "public static CharSource empty()" ], [ "create", "com.google.common.io", "Closer", "public static Closer create()" ], [ "isAvailable", "com.google.common.io", "Closer", "static boolean isAvailable()" ], [ "isAvailable", "com.google.common.io", "SuppressingSuppressor", "static boolean isAvailable()" ], [ "base64", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64()" ], [ "base64Url", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base64Url()" ], [ "base32", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32()" ], [ "base32Hex", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base32Hex()" ], [ "base16", "com.google.common.io", "BaseEncoding", "public static BaseEncoding base16()" ], [ "ignoringReader", "com.google.common.io", "BaseEncoding", "static Reader ignoringReader(final Reader delegate, final CharMatcher toIgnore)" ], [ "separatingAppendable", "com.google.common.io", "BaseEncoding", "static Appendable separatingAppendable(final Appendable delegate, final String separator, final int afterEveryChars)" ], [ "separatingWriter", "com.google.common.io", "BaseEncoding", "static Writer separatingWriter(final Writer delegate, final String separator, final int afterEveryChars)" ], [ "newReader", "com.google.common.io", "Files", "public static BufferedReader newReader(File file, Charset charset) throws FileNotFoundException" ], [ "newWriter", "com.google.common.io", "Files", "public static BufferedWriter newWriter(File file, Charset charset) throws FileNotFoundException" ], [ "asByteSource", "com.google.common.io", "Files", "public static ByteSource asByteSource(File file)" ], [ "readFile", "com.google.common.io", "Files", "static byte[] readFile(InputStream in, long expectedSize) throws IOException" ], [ "asByteSink", "com.google.common.io", "Files", "public static ByteSink asByteSink(File file, FileWriteMode... modes)" ], [ "asCharSource", "com.google.common.io", "Files", "public static CharSource asCharSource(File file, Charset charset)" ], [ "asCharSink", "com.google.common.io", "Files", "public static CharSink asCharSink(File file, Charset charset, FileWriteMode... modes)" ], [ "toByteArray", "com.google.common.io", "Files", "public static byte[] toByteArray(File file) throws IOException" ], [ "toString", "com.google.common.io", "Files", "public static String toString(File file, Charset charset) throws IOException" ], [ "equal", "com.google.common.io", "Files", "public static boolean equal(File file1, File file2) throws IOException" ], [ "createTempDir", "com.google.common.io", "Files", "public static File createTempDir()" ], [ "readFirstLine", "com.google.common.io", "Files", "public static String readFirstLine(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static List<String> readLines(File file, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Files", "public static <T> T readLines(File file, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readBytes", "com.google.common.io", "Files", "public static <T> T readBytes(File file, ByteProcessor<T> processor) throws IOException" ], [ "hash", "com.google.common.io", "Files", "public static HashCode hash(File file, HashFunction hashFunction) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode) throws IOException" ], [ "map", "com.google.common.io", "Files", "public static MappedByteBuffer map(File file, MapMode mode, long size) throws FileNotFoundException, IOException" ], [ "simplifyPath", "com.google.common.io", "Files", "public static String simplifyPath(String pathname)" ], [ "getFileExtension", "com.google.common.io", "Files", "public static String getFileExtension(String fullName)" ], [ "getNameWithoutExtension", "com.google.common.io", "Files", "public static String getNameWithoutExtension(String file)" ], [ "fileTreeTraverser", "com.google.common.io", "Files", "public static TreeTraverser<File> fileTreeTraverser()" ], [ "isDirectory", "com.google.common.io", "Files", "public static Predicate<File> isDirectory()" ], [ "isFile", "com.google.common.io", "Files", "public static Predicate<File> isFile()" ], [ "copy", "com.google.common.io", "CharStreams", "public static long copy(Readable from, Appendable to) throws IOException" ], [ "toString", "com.google.common.io", "CharStreams", "public static String toString(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static List<String> readLines(Readable r) throws IOException" ], [ "readLines", "com.google.common.io", "CharStreams", "public static <T> T readLines(Readable readable, LineProcessor<T> processor) throws IOException" ], [ "nullWriter", "com.google.common.io", "CharStreams", "public static Writer nullWriter()" ], [ "asWriter", "com.google.common.io", "CharStreams", "public static Writer asWriter(Appendable target)" ], [ "asReader", "com.google.common.io", "CharStreams", "static Reader asReader(final Readable readable)" ], [ "asByteSource", "com.google.common.io", "Resources", "public static ByteSource asByteSource(URL url)" ], [ "asCharSource", "com.google.common.io", "Resources", "public static CharSource asCharSource(URL url, Charset charset)" ], [ "toByteArray", "com.google.common.io", "Resources", "public static byte[] toByteArray(URL url) throws IOException" ], [ "toString", "com.google.common.io", "Resources", "public static String toString(URL url, Charset charset) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static <T> T readLines(URL url, Charset charset, LineProcessor<T> callback) throws IOException" ], [ "readLines", "com.google.common.io", "Resources", "public static List<String> readLines(URL url, Charset charset) throws IOException" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(String resourceName)" ], [ "getResource", "com.google.common.io", "Resources", "public static URL getResource(Class<?> contextClass, String resourceName)" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(InputStream from, OutputStream to) throws IOException" ], [ "copy", "com.google.common.io", "ByteStreams", "public static long copy(ReadableByteChannel from, WritableByteChannel to) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "public static byte[] toByteArray(InputStream in) throws IOException" ], [ "toByteArray", "com.google.common.io", "ByteStreams", "static byte[] toByteArray(InputStream in, int expectedSize) throws IOException" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(byte[] bytes, int start)" ], [ "newDataInput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataInput newDataInput(ByteArrayInputStream byteArrayInputStream)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput()" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(int size)" ], [ "newDataOutput", "com.google.common.io", "ByteStreams", "public static ByteArrayDataOutput newDataOutput(ByteArrayOutputStream byteArrayOutputSteam)" ], [ "nullOutputStream", "com.google.common.io", "ByteStreams", "public static OutputStream nullOutputStream()" ], [ "limit", "com.google.common.io", "ByteStreams", "public static InputStream limit(InputStream in, long limit)" ], [ "skipUpTo", "com.google.common.io", "ByteStreams", "static long skipUpTo(InputStream in, final long n) throws IOException" ], [ "readBytes", "com.google.common.io", "ByteStreams", "public static <T> T readBytes(InputStream input, ByteProcessor<T> processor) throws IOException" ], [ "read", "com.google.common.io", "ByteStreams", "public static int read(InputStream in, byte[] b, int off, int len) throws IOException" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterable<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(Iterator<? extends ByteSource> sources)" ], [ "concat", "com.google.common.io", "ByteSource", "public static ByteSource concat(ByteSource... sources)" ], [ "wrap", "com.google.common.io", "ByteSource", "public static ByteSource wrap(byte[] b)" ], [ "empty", "com.google.common.io", "ByteSource", "public static ByteSource empty()" ], [ "htmlEscaper", "com.google.common.html", "HtmlEscapers", "public static Escaper htmlEscaper()" ], [ "isPowerOfTwo", "com.google.common.math", "LongMath", "public static boolean isPowerOfTwo(long x)" ], [ "lessThanBranchFree", "com.google.common.math", "LongMath", "static int lessThanBranchFree(long x, long y)" ], [ "log2", "com.google.common.math", "LongMath", "public static int log2(long x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "LongMath", "public static int log10(long x, RoundingMode mode)" ], [ "log10Floor", "com.google.common.math", "LongMath", "static int log10Floor(long x)" ], [ "pow", "com.google.common.math", "LongMath", "public static long pow(long b, int k)" ], [ "sqrt", "com.google.common.math", "LongMath", "public static long sqrt(long x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "LongMath", "public static long divide(long p, long q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "LongMath", "public static int mod(long x, int m)" ], [ "mod", "com.google.common.math", "LongMath", "public static long mod(long x, long m)" ], [ "gcd", "com.google.common.math", "LongMath", "public static long gcd(long a, long b)" ], [ "checkedAdd", "com.google.common.math", "LongMath", "public static long checkedAdd(long a, long b)" ], [ "checkedSubtract", "com.google.common.math", "LongMath", "public static long checkedSubtract(long a, long b)" ], [ "checkedMultiply", "com.google.common.math", "LongMath", "public static long checkedMultiply(long a, long b)" ], [ "checkedPow", "com.google.common.math", "LongMath", "public static long checkedPow(long b, int k)" ], [ "factorial", "com.google.common.math", "LongMath", "public static long factorial(int n)" ], [ "binomial", "com.google.common.math", "LongMath", "public static long binomial(int n, int k)" ], [ "multiplyFraction", "com.google.common.math", "LongMath", "static long multiplyFraction(long x, long numerator, long denominator)" ], [ "fitsInInt", "com.google.common.math", "LongMath", "static boolean fitsInInt(long x)" ], [ "mean", "com.google.common.math", "LongMath", "public static long mean(long x, long y)" ], [ "test", "com.google.common.math", "LongMath", "static boolean test(long base, long n)" ], [ "test", "com.google.common.math", "MillerRabinTester", "static boolean test(long base, long n)" ], [ "isPowerOfTwo", "com.google.common.math", "IntMath", "public static boolean isPowerOfTwo(int x)" ], [ "lessThanBranchFree", "com.google.common.math", "IntMath", "static int lessThanBranchFree(int x, int y)" ], [ "log2", "com.google.common.math", "IntMath", "public static int log2(int x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "IntMath", "public static int log10(int x, RoundingMode mode)" ], [ "pow", "com.google.common.math", "IntMath", "public static int pow(int b, int k)" ], [ "sqrt", "com.google.common.math", "IntMath", "public static int sqrt(int x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "IntMath", "public static int divide(int p, int q, RoundingMode mode)" ], [ "mod", "com.google.common.math", "IntMath", "public static int mod(int x, int m)" ], [ "gcd", "com.google.common.math", "IntMath", "public static int gcd(int a, int b)" ], [ "checkedAdd", "com.google.common.math", "IntMath", "public static int checkedAdd(int a, int b)" ], [ "checkedSubtract", "com.google.common.math", "IntMath", "public static int checkedSubtract(int a, int b)" ], [ "checkedMultiply", "com.google.common.math", "IntMath", "public static int checkedMultiply(int a, int b)" ], [ "checkedPow", "com.google.common.math", "IntMath", "public static int checkedPow(int b, int k)" ], [ "factorial", "com.google.common.math", "IntMath", "public static int factorial(int n)" ], [ "binomial", "com.google.common.math", "IntMath", "public static int binomial(int n, int k)" ], [ "mean", "com.google.common.math", "IntMath", "public static int mean(int x, int y)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static int checkPositive(@Nullable String role, int x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static long checkPositive(@Nullable String role, long x)" ], [ "checkPositive", "com.google.common.math", "MathPreconditions", "static BigInteger checkPositive(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static int checkNonNegative(@Nullable String role, int x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static long checkNonNegative(@Nullable String role, long x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static BigInteger checkNonNegative(@Nullable String role, BigInteger x)" ], [ "checkNonNegative", "com.google.common.math", "MathPreconditions", "static double checkNonNegative(@Nullable String role, double x)" ], [ "isPowerOfTwo", "com.google.common.math", "BigIntegerMath", "public static boolean isPowerOfTwo(BigInteger x)" ], [ "log2", "com.google.common.math", "BigIntegerMath", "public static int log2(BigInteger x, RoundingMode mode)" ], [ "log10", "com.google.common.math", "BigIntegerMath", "public static int log10(BigInteger x, RoundingMode mode)" ], [ "sqrt", "com.google.common.math", "BigIntegerMath", "public static BigInteger sqrt(BigInteger x, RoundingMode mode)" ], [ "divide", "com.google.common.math", "BigIntegerMath", "public static BigInteger divide(BigInteger p, BigInteger q, RoundingMode mode)" ], [ "factorial", "com.google.common.math", "BigIntegerMath", "public static BigInteger factorial(int n)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums)" ], [ "listProduct", "com.google.common.math", "BigIntegerMath", "static BigInteger listProduct(List<BigInteger> nums, int start, int end)" ], [ "binomial", "com.google.common.math", "BigIntegerMath", "public static BigInteger binomial(int n, int k)" ], [ "fitsInLong", "com.google.common.math", "BigIntegerMath", "static boolean fitsInLong(BigInteger x)" ], [ "roundIntermediate", "com.google.common.math", "DoubleMath", "static double roundIntermediate(double x, RoundingMode mode)" ], [ "roundToInt", "com.google.common.math", "DoubleMath", "public static int roundToInt(double x, RoundingMode mode)" ], [ "roundToLong", "com.google.common.math", "DoubleMath", "public static long roundToLong(double x, RoundingMode mode)" ], [ "roundToBigInteger", "com.google.common.math", "DoubleMath", "public static BigInteger roundToBigInteger(double x, RoundingMode mode)" ], [ "isPowerOfTwo", "com.google.common.math", "DoubleMath", "public static boolean isPowerOfTwo(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static double log2(double x)" ], [ "log2", "com.google.common.math", "DoubleMath", "public static int log2(double x, RoundingMode mode)" ], [ "isMathematicalInteger", "com.google.common.math", "DoubleMath", "public static boolean isMathematicalInteger(double x)" ], [ "factorial", "com.google.common.math", "DoubleMath", "public static double factorial(int n)" ], [ "fuzzyEquals", "com.google.common.math", "DoubleMath", "public static boolean fuzzyEquals(double a, double b, double tolerance)" ], [ "fuzzyCompare", "com.google.common.math", "DoubleMath", "public static int fuzzyCompare(double a, double b, double tolerance)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(double... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(int... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(long... values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterable<? extends Number> values)" ], [ "mean", "com.google.common.math", "DoubleMath", "public static double mean(Iterator<? extends Number> values)" ], [ "nextDown", "com.google.common.math", "DoubleUtils", "static double nextDown(double d)" ], [ "getSignificand", "com.google.common.math", "DoubleUtils", "static long getSignificand(double d)" ], [ "isFinite", "com.google.common.math", "DoubleUtils", "static boolean isFinite(double d)" ], [ "isNormal", "com.google.common.math", "DoubleUtils", "static boolean isNormal(double d)" ], [ "scaleNormalize", "com.google.common.math", "DoubleUtils", "static double scaleNormalize(double x)" ], [ "bigToDouble", "com.google.common.math", "DoubleUtils", "static double bigToDouble(BigInteger x)" ], [ "ensureNonNegative", "com.google.common.math", "DoubleUtils", "static double ensureNonNegative(double value)" ], [ "xmlContentEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlContentEscaper()" ], [ "xmlAttributeEscaper", "com.google.common.xml", "XmlEscapers", "public static Escaper xmlAttributeEscaper()" ], [ "hashCode", "com.google.common.primitives", "Floats", "public static int hashCode(float value)" ], [ "compare", "com.google.common.primitives", "Floats", "public static int compare(float a, float b)" ], [ "isFinite", "com.google.common.primitives", "Floats", "public static boolean isFinite(float value)" ], [ "contains", "com.google.common.primitives", "Floats", "public static boolean contains(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float target)" ], [ "indexOf", "com.google.common.primitives", "Floats", "public static int indexOf(float[] array, float[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Floats", "public static int lastIndexOf(float[] array, float target)" ], [ "min", "com.google.common.primitives", "Floats", "public static float min(float... array)" ], [ "max", "com.google.common.primitives", "Floats", "public static float max(float... array)" ], [ "concat", "com.google.common.primitives", "Floats", "public static float[] concat(float[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Floats", "public static Converter<String, Float> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Floats", "public static float[] ensureCapacity(float[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Floats", "public static String join(String separator, float... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Floats", "public static Comparator<float[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Floats", "public static float[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Floats", "public static List<Float> asList(float... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Floats", "public static Float tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Booleans", "public static int hashCode(boolean value)" ], [ "compare", "com.google.common.primitives", "Booleans", "public static int compare(boolean a, boolean b)" ], [ "contains", "com.google.common.primitives", "Booleans", "public static boolean contains(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean target)" ], [ "indexOf", "com.google.common.primitives", "Booleans", "public static int indexOf(boolean[] array, boolean[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Booleans", "public static int lastIndexOf(boolean[] array, boolean target)" ], [ "concat", "com.google.common.primitives", "Booleans", "public static boolean[] concat(boolean[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Booleans", "public static boolean[] ensureCapacity(boolean[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Booleans", "public static String join(String separator, boolean... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Booleans", "public static Comparator<boolean[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Booleans", "public static boolean[] toArray(Collection<Boolean> collection)" ], [ "asList", "com.google.common.primitives", "Booleans", "public static List<Boolean> asList(boolean... backingArray)" ], [ "countTrue", "com.google.common.primitives", "Booleans", "public static int countTrue(boolean... values)" ], [ "compare", "com.google.common.primitives", "UnsignedLongs", "public static int compare(long a, long b)" ], [ "min", "com.google.common.primitives", "UnsignedLongs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "UnsignedLongs", "public static long max(long... array)" ], [ "join", "com.google.common.primitives", "UnsignedLongs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedLongs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedLongs", "public static long divide(long dividend, long divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedLongs", "public static long remainder(long dividend, long divisor)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s)" ], [ "decode", "com.google.common.primitives", "UnsignedLongs", "public static long decode(String stringValue)" ], [ "parseUnsignedLong", "com.google.common.primitives", "UnsignedLongs", "public static long parseUnsignedLong(String s, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x)" ], [ "toString", "com.google.common.primitives", "UnsignedLongs", "public static String toString(long x, int radix)" ], [ "hashCode", "com.google.common.primitives", "Shorts", "public static int hashCode(short value)" ], [ "checkedCast", "com.google.common.primitives", "Shorts", "public static short checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Shorts", "public static short saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Shorts", "public static int compare(short a, short b)" ], [ "contains", "com.google.common.primitives", "Shorts", "public static boolean contains(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short target)" ], [ "indexOf", "com.google.common.primitives", "Shorts", "public static int indexOf(short[] array, short[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Shorts", "public static int lastIndexOf(short[] array, short target)" ], [ "min", "com.google.common.primitives", "Shorts", "public static short min(short... array)" ], [ "max", "com.google.common.primitives", "Shorts", "public static short max(short... array)" ], [ "concat", "com.google.common.primitives", "Shorts", "public static short[] concat(short[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Shorts", "public static byte[] toByteArray(short value)" ], [ "fromByteArray", "com.google.common.primitives", "Shorts", "public static short fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Shorts", "public static short fromBytes(byte b1, byte b2)" ], [ "stringConverter", "com.google.common.primitives", "Shorts", "public static Converter<String, Short> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Shorts", "public static short[] ensureCapacity(short[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Shorts", "public static String join(String separator, short... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Shorts", "public static Comparator<short[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Shorts", "public static short[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Shorts", "public static List<Short> asList(short... backingArray)" ], [ "checkedCast", "com.google.common.primitives", "SignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "SignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "SignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "SignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "SignedBytes", "public static byte max(byte... array)" ], [ "join", "com.google.common.primitives", "SignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "SignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "hashCode", "com.google.common.primitives", "Doubles", "public static int hashCode(double value)" ], [ "compare", "com.google.common.primitives", "Doubles", "public static int compare(double a, double b)" ], [ "isFinite", "com.google.common.primitives", "Doubles", "public static boolean isFinite(double value)" ], [ "contains", "com.google.common.primitives", "Doubles", "public static boolean contains(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double target)" ], [ "indexOf", "com.google.common.primitives", "Doubles", "public static int indexOf(double[] array, double[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Doubles", "public static int lastIndexOf(double[] array, double target)" ], [ "min", "com.google.common.primitives", "Doubles", "public static double min(double... array)" ], [ "max", "com.google.common.primitives", "Doubles", "public static double max(double... array)" ], [ "concat", "com.google.common.primitives", "Doubles", "public static double[] concat(double[]... arrays)" ], [ "stringConverter", "com.google.common.primitives", "Doubles", "public static Converter<String, Double> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Doubles", "public static double[] ensureCapacity(double[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Doubles", "public static String join(String separator, double... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Doubles", "public static Comparator<double[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Doubles", "public static double[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Doubles", "public static List<Double> asList(double... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Doubles", "public static Double tryParse(String string)" ], [ "hashCode", "com.google.common.primitives", "Bytes", "public static int hashCode(byte value)" ], [ "contains", "com.google.common.primitives", "Bytes", "public static boolean contains(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte target)" ], [ "indexOf", "com.google.common.primitives", "Bytes", "public static int indexOf(byte[] array, byte[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Bytes", "public static int lastIndexOf(byte[] array, byte target)" ], [ "concat", "com.google.common.primitives", "Bytes", "public static byte[] concat(byte[]... arrays)" ], [ "ensureCapacity", "com.google.common.primitives", "Bytes", "public static byte[] ensureCapacity(byte[] array, int minLength, int padding)" ], [ "toArray", "com.google.common.primitives", "Bytes", "public static byte[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Bytes", "public static List<Byte> asList(byte... backingArray)" ], [ "flip", "com.google.common.primitives", "UnsignedInts", "static int flip(int value)" ], [ "compare", "com.google.common.primitives", "UnsignedInts", "public static int compare(int a, int b)" ], [ "toLong", "com.google.common.primitives", "UnsignedInts", "public static long toLong(int value)" ], [ "min", "com.google.common.primitives", "UnsignedInts", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "UnsignedInts", "public static int max(int... array)" ], [ "join", "com.google.common.primitives", "UnsignedInts", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedInts", "public static Comparator<int[]> lexicographicalComparator()" ], [ "divide", "com.google.common.primitives", "UnsignedInts", "public static int divide(int dividend, int divisor)" ], [ "remainder", "com.google.common.primitives", "UnsignedInts", "public static int remainder(int dividend, int divisor)" ], [ "decode", "com.google.common.primitives", "UnsignedInts", "public static int decode(String stringValue)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String s)" ], [ "parseUnsignedInt", "com.google.common.primitives", "UnsignedInts", "public static int parseUnsignedInt(String string, int radix)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x)" ], [ "toString", "com.google.common.primitives", "UnsignedInts", "public static String toString(int x, int radix)" ], [ "fromLongBits", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong fromLongBits(long bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedLong", "public static UnsignedLong valueOf(String string, int radix)" ], [ "hashCode", "com.google.common.primitives", "Ints", "public static int hashCode(int value)" ], [ "checkedCast", "com.google.common.primitives", "Ints", "public static int checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Ints", "public static int saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Ints", "public static int compare(int a, int b)" ], [ "contains", "com.google.common.primitives", "Ints", "public static boolean contains(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int target)" ], [ "indexOf", "com.google.common.primitives", "Ints", "public static int indexOf(int[] array, int[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Ints", "public static int lastIndexOf(int[] array, int target)" ], [ "min", "com.google.common.primitives", "Ints", "public static int min(int... array)" ], [ "max", "com.google.common.primitives", "Ints", "public static int max(int... array)" ], [ "concat", "com.google.common.primitives", "Ints", "public static int[] concat(int[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Ints", "public static byte[] toByteArray(int value)" ], [ "fromByteArray", "com.google.common.primitives", "Ints", "public static int fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Ints", "public static int fromBytes(byte b1, byte b2, byte b3, byte b4)" ], [ "stringConverter", "com.google.common.primitives", "Ints", "public static Converter<String, Integer> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Ints", "public static int[] ensureCapacity(int[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Ints", "public static String join(String separator, int... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Ints", "public static Comparator<int[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Ints", "public static int[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Ints", "public static List<Integer> asList(int... backingArray)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Ints", "public static Integer tryParse(String string, int radix)" ], [ "toInt", "com.google.common.primitives", "UnsignedBytes", "public static int toInt(byte value)" ], [ "checkedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "UnsignedBytes", "public static byte saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "UnsignedBytes", "public static int compare(byte a, byte b)" ], [ "min", "com.google.common.primitives", "UnsignedBytes", "public static byte min(byte... array)" ], [ "max", "com.google.common.primitives", "UnsignedBytes", "public static byte max(byte... array)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x)" ], [ "toString", "com.google.common.primitives", "UnsignedBytes", "public static String toString(byte x, int radix)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string)" ], [ "parseUnsignedByte", "com.google.common.primitives", "UnsignedBytes", "public static byte parseUnsignedByte(String string, int radix)" ], [ "join", "com.google.common.primitives", "UnsignedBytes", "public static String join(String separator, byte... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "UnsignedBytes", "public static Comparator<byte[]> lexicographicalComparator()" ], [ "lexicographicalComparatorJavaImpl", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> lexicographicalComparatorJavaImpl()" ], [ "getBestComparator", "com.google.common.primitives", "UnsignedBytes", "static Comparator<byte[]> getBestComparator()" ], [ "getBestComparator", "com.google.common.primitives", "LexicographicalComparatorHolder", "static Comparator<byte[]> getBestComparator()" ], [ "hashCode", "com.google.common.primitives", "Chars", "public static int hashCode(char value)" ], [ "checkedCast", "com.google.common.primitives", "Chars", "public static char checkedCast(long value)" ], [ "saturatedCast", "com.google.common.primitives", "Chars", "public static char saturatedCast(long value)" ], [ "compare", "com.google.common.primitives", "Chars", "public static int compare(char a, char b)" ], [ "contains", "com.google.common.primitives", "Chars", "public static boolean contains(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char target)" ], [ "indexOf", "com.google.common.primitives", "Chars", "public static int indexOf(char[] array, char[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Chars", "public static int lastIndexOf(char[] array, char target)" ], [ "min", "com.google.common.primitives", "Chars", "public static char min(char... array)" ], [ "max", "com.google.common.primitives", "Chars", "public static char max(char... array)" ], [ "concat", "com.google.common.primitives", "Chars", "public static char[] concat(char[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Chars", "public static byte[] toByteArray(char value)" ], [ "fromByteArray", "com.google.common.primitives", "Chars", "public static char fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Chars", "public static char fromBytes(byte b1, byte b2)" ], [ "ensureCapacity", "com.google.common.primitives", "Chars", "public static char[] ensureCapacity(char[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Chars", "public static String join(String separator, char... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Chars", "public static Comparator<char[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Chars", "public static char[] toArray(Collection<Character> collection)" ], [ "asList", "com.google.common.primitives", "Chars", "public static List<Character> asList(char... backingArray)" ], [ "allPrimitiveTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allPrimitiveTypes()" ], [ "allWrapperTypes", "com.google.common.primitives", "Primitives", "public static Set<Class<?>> allWrapperTypes()" ], [ "isWrapperType", "com.google.common.primitives", "Primitives", "public static boolean isWrapperType(Class<?> type)" ], [ "wrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> wrap(Class<T> type)" ], [ "unwrap", "com.google.common.primitives", "Primitives", "public static <T> Class<T> unwrap(Class<T> type)" ], [ "fromIntBits", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger fromIntBits(int bits)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(long value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(BigInteger value)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string)" ], [ "valueOf", "com.google.common.primitives", "UnsignedInteger", "public static UnsignedInteger valueOf(String string, int radix)" ], [ "fromString", "com.google.common.primitives", "ParseRequest", "static ParseRequest fromString(String stringValue)" ], [ "hashCode", "com.google.common.primitives", "Longs", "public static int hashCode(long value)" ], [ "compare", "com.google.common.primitives", "Longs", "public static int compare(long a, long b)" ], [ "contains", "com.google.common.primitives", "Longs", "public static boolean contains(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long target)" ], [ "indexOf", "com.google.common.primitives", "Longs", "public static int indexOf(long[] array, long[] target)" ], [ "lastIndexOf", "com.google.common.primitives", "Longs", "public static int lastIndexOf(long[] array, long target)" ], [ "min", "com.google.common.primitives", "Longs", "public static long min(long... array)" ], [ "max", "com.google.common.primitives", "Longs", "public static long max(long... array)" ], [ "concat", "com.google.common.primitives", "Longs", "public static long[] concat(long[]... arrays)" ], [ "toByteArray", "com.google.common.primitives", "Longs", "public static byte[] toByteArray(long value)" ], [ "fromByteArray", "com.google.common.primitives", "Longs", "public static long fromByteArray(byte[] bytes)" ], [ "fromBytes", "com.google.common.primitives", "Longs", "public static long fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string)" ], [ "tryParse", "com.google.common.primitives", "Longs", "public static Long tryParse(String string, int radix)" ], [ "stringConverter", "com.google.common.primitives", "Longs", "public static Converter<String, Long> stringConverter()" ], [ "ensureCapacity", "com.google.common.primitives", "Longs", "public static long[] ensureCapacity(long[] array, int minLength, int padding)" ], [ "join", "com.google.common.primitives", "Longs", "public static String join(String separator, long... array)" ], [ "lexicographicalComparator", "com.google.common.primitives", "Longs", "public static Comparator<long[]> lexicographicalComparator()" ], [ "toArray", "com.google.common.primitives", "Longs", "public static long[] toArray(Collection<? extends Number> collection)" ], [ "asList", "com.google.common.primitives", "Longs", "public static List<Long> asList(long... backingArray)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable Object errorMessage)" ], [ "checkNotNull", "com.google.common.base", "Preconditions", "public static <T> T checkNotNull(T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size)" ], [ "checkElementIndex", "com.google.common.base", "Preconditions", "public static int checkElementIndex(int index, int size, @Nullable String desc)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size)" ], [ "checkPositionIndex", "com.google.common.base", "Preconditions", "public static int checkPositionIndex(int index, int size, @Nullable String desc)" ], [ "format", "com.google.common.base", "Preconditions", "static String format(String template, @Nullable Object... args)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(String separator)" ], [ "on", "com.google.common.base", "Joiner", "public static Joiner on(char separator)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(String string)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static String toLowerCase(CharSequence chars)" ], [ "toLowerCase", "com.google.common.base", "Ascii", "public static char toLowerCase(char c)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(String string)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static String toUpperCase(CharSequence chars)" ], [ "toUpperCase", "com.google.common.base", "Ascii", "public static char toUpperCase(char c)" ], [ "isLowerCase", "com.google.common.base", "Ascii", "public static boolean isLowerCase(char c)" ], [ "isUpperCase", "com.google.common.base", "Ascii", "public static boolean isUpperCase(char c)" ], [ "truncate", "com.google.common.base", "Ascii", "public static String truncate(CharSequence seq, int maxLength, String truncationIndicator)" ], [ "equalsIgnoreCase", "com.google.common.base", "Ascii", "public static boolean equalsIgnoreCase(CharSequence s1, CharSequence s2)" ], [ "getField", "com.google.common.base", "Enums", "public static Field getField(Enum<?> enumValue)" ], [ "getIfPresent", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Optional<T> getIfPresent(Class<T> enumClass, String value)" ], [ "getEnumConstants", "com.google.common.base", "Enums", "static <T extends Enum<T>> Map<String, WeakReference<? extends Enum<?>>> getEnumConstants(Class<T> enumClass)" ], [ "stringConverter", "com.google.common.base", "Enums", "public static <T extends Enum<T>> Converter<String, T> stringConverter(final Class<T> enumClass)" ], [ "compose", "com.google.common.base", "Suppliers", "public static <F, T> Supplier<T> compose(Function<? super F, T> function, Supplier<F> supplier)" ], [ "memoize", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoize(Supplier<T> delegate)" ], [ "memoizeWithExpiration", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)" ], [ "ofInstance", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> ofInstance(@Nullable T instance)" ], [ "synchronizedSupplier", "com.google.common.base", "Suppliers", "public static <T> Supplier<T> synchronizedSupplier(Supplier<T> delegate)" ], [ "supplierFunction", "com.google.common.base", "Suppliers", "public static <T> Function<Supplier<T>, T> supplierFunction()" ], [ "toStringFunction", "com.google.common.base", "Functions", "public static Function<Object, String> toStringFunction()" ], [ "identity", "com.google.common.base", "Functions", "public static <E> Function<E, E> identity()" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, V> map)" ], [ "forMap", "com.google.common.base", "Functions", "public static <K, V> Function<K, V> forMap(Map<K, ? extends V> map, @Nullable V defaultValue)" ], [ "compose", "com.google.common.base", "Functions", "public static <A, B, C> Function<A, C> compose(Function<B, C> g, Function<A, ? extends B> f)" ], [ "forPredicate", "com.google.common.base", "Functions", "public static <T> Function<T, Boolean> forPredicate(Predicate<T> predicate)" ], [ "constant", "com.google.common.base", "Functions", "public static <E> Function<Object, E> constant(@Nullable E value)" ], [ "forSupplier", "com.google.common.base", "Functions", "public static <T> Function<Object, T> forSupplier(Supplier<T> supplier)" ], [ "equal", "com.google.common.base", "Objects", "public static boolean equal(@Nullable Object a, @Nullable Object b)" ], [ "hashCode", "com.google.common.base", "Objects", "public static int hashCode(@Nullable Object... objects)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "Objects", "public static ToStringHelper toStringHelper(String className)" ], [ "firstNonNull", "com.google.common.base", "Objects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "absent", "com.google.common.base", "Optional", "public static <T> Optional<T> absent()" ], [ "of", "com.google.common.base", "Optional", "public static <T> Optional<T> of(T reference)" ], [ "fromNullable", "com.google.common.base", "Optional", "public static <T> Optional<T> fromNullable(@Nullable T nullableReference)" ], [ "presentInstances", "com.google.common.base", "Optional", "public static <T> Iterable<T> presentInstances(final Iterable<? extends Optional<? extends T>> optionals)" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted()" ], [ "createUnstarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createUnstarted(Ticker ticker)" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted()" ], [ "createStarted", "com.google.common.base", "Stopwatch", "public static Stopwatch createStarted(Ticker ticker)" ], [ "nullToEmpty", "com.google.common.base", "Strings", "public static String nullToEmpty(@Nullable String string)" ], [ "emptyToNull", "com.google.common.base", "Strings", "public static String emptyToNull(@Nullable String string)" ], [ "isNullOrEmpty", "com.google.common.base", "Strings", "public static boolean isNullOrEmpty(@Nullable String string)" ], [ "padStart", "com.google.common.base", "Strings", "public static String padStart(String string, int minLength, char padChar)" ], [ "padEnd", "com.google.common.base", "Strings", "public static String padEnd(String string, int minLength, char padChar)" ], [ "repeat", "com.google.common.base", "Strings", "public static String repeat(String string, int count)" ], [ "commonPrefix", "com.google.common.base", "Strings", "public static String commonPrefix(CharSequence a, CharSequence b)" ], [ "commonSuffix", "com.google.common.base", "Strings", "public static String commonSuffix(CharSequence a, CharSequence b)" ], [ "validSurrogatePairAt", "com.google.common.base", "Strings", "static boolean validSurrogatePairAt(CharSequence string, int index)" ], [ "getInheritableThreadLocalsField", "com.google.common.base.internal", "Finalizer", "public static Field getInheritableThreadLocalsField()" ], [ "getStartFinalizer", "com.google.common.base", "FinalizableReferenceQueue", "static Method getStartFinalizer(Class<?> finalizer)" ], [ "firstNonNull", "com.google.common.base", "MoreObjects", "public static <T> T firstNonNull(@Nullable T first, @Nullable T second)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Object self)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(Class<?> clazz)" ], [ "toStringHelper", "com.google.common.base", "MoreObjects", "public static ToStringHelper toStringHelper(String className)" ], [ "encodedLength", "com.google.common.base", "Utf8", "public static int encodedLength(CharSequence sequence)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes)" ], [ "isWellFormed", "com.google.common.base", "Utf8", "public static boolean isWellFormed(byte[] bytes, int off, int len)" ], [ "propagate", "com.google.common.base", "Throwables", "public static RuntimeException propagate(Throwable throwable)" ], [ "getRootCause", "com.google.common.base", "Throwables", "public static Throwable getRootCause(Throwable throwable)" ], [ "getCausalChain", "com.google.common.base", "Throwables", "public static List<Throwable> getCausalChain(Throwable throwable)" ], [ "getStackTraceAsString", "com.google.common.base", "Throwables", "public static String getStackTraceAsString(Throwable throwable)" ], [ "lazyStackTrace", "com.google.common.base", "Throwables", "public static List<StackTraceElement> lazyStackTrace(Throwable throwable)" ], [ "lazyStackTraceIsLazy", "com.google.common.base", "Throwables", "public static boolean lazyStackTraceIsLazy()" ], [ "from", "com.google.common.base", "Converter", "public static <A, B> Converter<A, B> from(Function<? super A, ? extends B> forwardFunction, Function<? super B, ? extends A> backwardFunction)" ], [ "identity", "com.google.common.base", "Converter", "public static <T> Converter<T, T> identity()" ], [ "systemNanoTime", "com.google.common.base", "Platform", "static long systemNanoTime()" ], [ "precomputeCharMatcher", "com.google.common.base", "Platform", "static CharMatcher precomputeCharMatcher(CharMatcher matcher)" ], [ "getEnumIfPresent", "com.google.common.base", "Platform", "static <T extends Enum<T>> Optional<T> getEnumIfPresent(Class<T> enumClass, String value)" ], [ "equals", "com.google.common.base", "Equivalence", "public static Equivalence<Object> equals()" ], [ "identity", "com.google.common.base", "Equivalence", "public static Equivalence<Object> identity()" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(char separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final CharMatcher separatorMatcher)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final String separator)" ], [ "on", "com.google.common.base", "Splitter", "public static Splitter on(final Pattern separatorPattern)" ], [ "onPattern", "com.google.common.base", "Splitter", "public static Splitter onPattern(String separatorPattern)" ], [ "fixedLength", "com.google.common.base", "Splitter", "public static Splitter fixedLength(final int length)" ], [ "any", "com.google.common.base", "CharMatcher", "public static CharMatcher any()" ], [ "none", "com.google.common.base", "CharMatcher", "public static CharMatcher none()" ], [ "whitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher whitespace()" ], [ "breakingWhitespace", "com.google.common.base", "CharMatcher", "public static CharMatcher breakingWhitespace()" ], [ "ascii", "com.google.common.base", "CharMatcher", "public static CharMatcher ascii()" ], [ "digit", "com.google.common.base", "CharMatcher", "public static CharMatcher digit()" ], [ "javaDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaDigit()" ], [ "javaLetter", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetter()" ], [ "javaLetterOrDigit", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLetterOrDigit()" ], [ "javaUpperCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaUpperCase()" ], [ "javaLowerCase", "com.google.common.base", "CharMatcher", "public static CharMatcher javaLowerCase()" ], [ "javaIsoControl", "com.google.common.base", "CharMatcher", "public static CharMatcher javaIsoControl()" ], [ "invisible", "com.google.common.base", "CharMatcher", "public static CharMatcher invisible()" ], [ "singleWidth", "com.google.common.base", "CharMatcher", "public static CharMatcher singleWidth()" ], [ "is", "com.google.common.base", "CharMatcher", "public static CharMatcher is(final char match)" ], [ "isNot", "com.google.common.base", "CharMatcher", "public static CharMatcher isNot(final char match)" ], [ "anyOf", "com.google.common.base", "CharMatcher", "public static CharMatcher anyOf(final CharSequence sequence)" ], [ "noneOf", "com.google.common.base", "CharMatcher", "public static CharMatcher noneOf(CharSequence sequence)" ], [ "inRange", "com.google.common.base", "CharMatcher", "public static CharMatcher inRange(final char startInclusive, final char endInclusive)" ], [ "forPredicate", "com.google.common.base", "CharMatcher", "public static CharMatcher forPredicate(final Predicate<? super Character> predicate)" ], [ "alwaysTrue", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysTrue()" ], [ "alwaysFalse", "com.google.common.base", "Predicates", "public static <T> Predicate<T> alwaysFalse()" ], [ "isNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> isNull()" ], [ "notNull", "com.google.common.base", "Predicates", "public static <T> Predicate<T> notNull()" ], [ "not", "com.google.common.base", "Predicates", "public static <T> Predicate<T> not(Predicate<T> predicate)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Iterable<? extends Predicate<? super T>> components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T>... components)" ], [ "and", "com.google.common.base", "Predicates", "public static <T> Predicate<T> and(Predicate<? super T> first, Predicate<? super T> second)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Iterable<? extends Predicate<? super T>> components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T>... components)" ], [ "or", "com.google.common.base", "Predicates", "public static <T> Predicate<T> or(Predicate<? super T> first, Predicate<? super T> second)" ], [ "equalTo", "com.google.common.base", "Predicates", "public static <T> Predicate<T> equalTo(@Nullable T target)" ], [ "instanceOf", "com.google.common.base", "Predicates", "public static Predicate<Object> instanceOf(Class<?> clazz)" ], [ "assignableFrom", "com.google.common.base", "Predicates", "public static Predicate<Class<?>> assignableFrom(Class<?> clazz)" ], [ "in", "com.google.common.base", "Predicates", "public static <T> Predicate<T> in(Collection<? extends T> target)" ], [ "compose", "com.google.common.base", "Predicates", "public static <A, B> Predicate<A> compose(Predicate<B> predicate, Function<A, ? extends B> function)" ], [ "containsPattern", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> containsPattern(String pattern)" ], [ "contains", "com.google.common.base", "Predicates", "public static Predicate<CharSequence> contains(Pattern pattern)" ], [ "defensiveCopy", "com.google.common.base", "Predicates", "static <T> List<T> defensiveCopy(Iterable<T> iterable)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference)" ], [ "verifyNotNull", "com.google.common.base", "Verify", "public static <T> T verifyNotNull(@Nullable T reference, @Nullable String errorMessageTemplate, @Nullable Object... errorMessageArgs)" ], [ "defaultValue", "com.google.common.base", "Defaults", "public static <T> T defaultValue(Class<T> type)" ], [ "systemTicker", "com.google.common.base", "Ticker", "public static Ticker systemTicker()" ], [ "withType", "com.google.common.base", "Absent", "static <T> Optional<T> withType()" ], [ "smear", "com.google.common.base", "SmallCharMatcher", "static int smear(int hashCode)" ], [ "chooseTableSize", "com.google.common.base", "SmallCharMatcher", "static int chooseTableSize(int setSize)" ], [ "from", "com.google.common.base", "SmallCharMatcher", "static CharMatcher from(BitSet chars, String description)" ], [ "fromCode", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromCode(char code)" ], [ "fromIsPrivate", "com.google.thirdparty.publicsuffix", "PublicSuffixType", "static PublicSuffixType fromIsPrivate(boolean isPrivate)" ], [ "parseTrie", "com.google.thirdparty.publicsuffix", "TrieParser", "static ImmutableMap<String, PublicSuffixType> parseTrie(CharSequence encoded)" ] ],
  "tokensProjectClassesNonPrivateStaticAttributes" : [ [ "INSTANCE", "com.google.common.collect", "EmptyImmutableSetMultimap", "static final EmptyImmutableSetMultimap INSTANCE = new EmptyImmutableSetMultimap();" ], [ "EMPTY_LIST_ITERATOR", "com.google.common.collect", "Iterators", "static final UnmodifiableListIterator<Object> EMPTY_LIST_ITERATOR = new UnmodifiableListIterator<Object>() {\n\n    @Override\n    public boolean hasNext() {\n        return false;\n    }\n\n    @Override\n    public Object next() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public boolean hasPrevious() {\n        return false;\n    }\n\n    @Override\n    public Object previous() {\n        throw new NoSuchElementException();\n    }\n\n    @Override\n    public int nextIndex() {\n        return 0;\n    }\n\n    @Override\n    public int previousIndex() {\n        return -1;\n    }\n};" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableSet", "static final RegularImmutableSet<Object> EMPTY = new RegularImmutableSet<Object>(ObjectArrays.EMPTY_ARRAY, 0, null, 0);" ], [ "VALUE_SET_LOAD_FACTOR", "com.google.common.collect", "LinkedHashMultimap", "static final double VALUE_SET_LOAD_FACTOR = 1.0;" ], [ "MAX_TABLE_SIZE", "com.google.common.collect", "ImmutableSet", "static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;" ], [ "STANDARD_JOINER", "com.google.common.collect", "Maps", "static final MapJoiner STANDARD_JOINER = Collections2.STANDARD_JOINER.withKeyValueSeparator(\"=\");" ], [ "INSTANCE", "com.google.common.collect", "EmptyImmutableListMultimap", "static final EmptyImmutableListMultimap INSTANCE = new EmptyImmutableListMultimap();" ], [ "STANDARD_JOINER", "com.google.common.collect", "Collections2", "static final Joiner STANDARD_JOINER = Joiner.on(\", \").useForNull(\"null\");" ], [ "INSTANCE", "com.google.common.collect", "UsingToStringOrdering", "static final UsingToStringOrdering INSTANCE = new UsingToStringOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableBiMap", "static final RegularImmutableBiMap<Object,Object> EMPTY = new RegularImmutableBiMap<Object, Object>(null, null, (Entry<Object, Object>[]) ImmutableMap.EMPTY_ENTRY_ARRAY, 0, 0);" ], [ "MAX_LOAD_FACTOR", "com.google.common.collect", "RegularImmutableBiMap", "static final double MAX_LOAD_FACTOR = 1.2;" ], [ "INSTANCE", "com.google.common.collect", "ReverseNaturalOrdering", "static final ReverseNaturalOrdering INSTANCE = new ReverseNaturalOrdering();" ], [ "INSTANCE", "com.google.common.collect", "NaturalOrdering", "static final NaturalOrdering INSTANCE = new NaturalOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableMultiset", "static final RegularImmutableMultiset<Object> EMPTY = new RegularImmutableMultiset<Object>(ImmutableList.<Entry<Object>>of());" ], [ "EMPTY_ARRAY", "com.google.common.collect", "ObjectArrays", "static final Object[] EMPTY_ARRAY = new Object[0];" ], [ "INSTANCE", "com.google.common.collect", "AllEqualOrdering", "static final AllEqualOrdering INSTANCE = new AllEqualOrdering();" ], [ "MAXIMUM_CAPACITY", "com.google.common.collect", "MapMakerInternalMap", "static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;" ], [ "MAX_SEGMENTS", "com.google.common.collect", "MapMakerInternalMap", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.collect", "MapMakerInternalMap", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.collect", "MapMakerInternalMap", "static final int DRAIN_MAX = 16;" ], [ "CLEANUP_EXECUTOR_DELAY_SECS", "com.google.common.collect", "MapMakerInternalMap", "static final long CLEANUP_EXECUTOR_DELAY_SECS = 60;" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "MapMakerInternalMap", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "MapMakerInternalMap", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "UNSET", "com.google.common.collect", "MapMakerInternalMap", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isComputingReference() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void clear(ValueReference<Object, Object> newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.collect", "MapMakerInternalMap", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return Iterators.emptyIterator();\n    }\n};" ], [ "EXPIRABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EXPIRABLE_MASK = 1;" ], [ "EVICTABLE_MASK", "com.google.common.collect", "EntryFactory", "static final int EVICTABLE_MASK = 2;" ], [ "factories", "com.google.common.collect", "EntryFactory", "static final EntryFactory[][] factories = { { STRONG, STRONG_EXPIRABLE, STRONG_EVICTABLE, STRONG_EXPIRABLE_EVICTABLE }, // no support for SOFT keys\n{}, { WEAK, WEAK_EXPIRABLE, WEAK_EVICTABLE, WEAK_EXPIRABLE_EVICTABLE } };" ], [ "RANGE_LEX_ORDERING", "com.google.common.collect", "Range", "static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();" ], [ "EMPTY", "com.google.common.collect", "RegularImmutableList", "static final ImmutableList<Object> EMPTY = new RegularImmutableList<Object>(ObjectArrays.EMPTY_ARRAY);" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "Ordering", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "LEFT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int LEFT_IS_GREATER = 1;" ], [ "RIGHT_IS_GREATER", "com.google.common.collect", "Ordering", "static final int RIGHT_IS_GREATER = -1;" ], [ "ARBITRARY_ORDERING", "com.google.common.collect", "ArbitraryOrderingHolder", "static final Ordering<Object> ARBITRARY_ORDERING = new ArbitraryOrdering();" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "ConcurrentHashMultiset", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "COUNT_MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final FieldSetter<ConcurrentHashMultiset> COUNT_MAP_FIELD_SETTER = Serialization.getFieldSetter(ConcurrentHashMultiset.class, \"countMap\");" ], [ "EMPTY_ENTRY_ARRAY", "com.google.common.collect", "ImmutableMap", "static final Entry<?,?>[] EMPTY_ENTRY_ARRAY = new Entry<?, ?>[0];" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "ImmutableCollection", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "DEFAULT_INITIAL_CAPACITY", "com.google.common.collect", "Builder", "static final int DEFAULT_INITIAL_CAPACITY = 4;" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "ImmutableMultimap", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "MAP_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> MAP_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"map\");" ], [ "SIZE_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableMultimap> SIZE_FIELD_SETTER = Serialization.getFieldSetter(ImmutableMultimap.class, \"size\");" ], [ "EMPTY_SET_FIELD_SETTER", "com.google.common.collect", "FieldSettersHolder", "static final Serialization.FieldSetter<ImmutableSetMultimap> EMPTY_SET_FIELD_SETTER = Serialization.getFieldSetter(ImmutableSetMultimap.class, \"emptySet\");" ], [ "UNSET_INT", "com.google.common.collect", "MapMaker", "static final int UNSET_INT = -1;" ], [ "INSTANCE", "com.google.common.eventbus", "EventBus", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "INSTANCE", "com.google.common.eventbus", "LoggingHandler", "static final LoggingHandler INSTANCE = new LoggingHandler();" ], [ "URL_FORM_PARAMETER_OTHER_SAFE_CHARS", "com.google.common.net", "UrlEscapers", "static final String URL_FORM_PARAMETER_OTHER_SAFE_CHARS = \"-_.*\";" ], [ "URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS", "com.google.common.net", "UrlEscapers", "static final String URL_PATH_OTHER_SAFE_CHARS_LACKING_PLUS = // Unreserved characters.\n\"-._~\" + // The subdelim characters (excluding '+').\n\"!$'()*,;&=\" + // The gendelim characters permitted in paths.\n\"@:\";" ], [ "CACHE_CONTROL", "com.google.common.net", "HttpHeaders", "public static final String CACHE_CONTROL = \"Cache-Control\";" ], [ "CONTENT_LENGTH", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LENGTH = \"Content-Length\";" ], [ "CONTENT_TYPE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_TYPE = \"Content-Type\";" ], [ "DATE", "com.google.common.net", "HttpHeaders", "public static final String DATE = \"Date\";" ], [ "PRAGMA", "com.google.common.net", "HttpHeaders", "public static final String PRAGMA = \"Pragma\";" ], [ "VIA", "com.google.common.net", "HttpHeaders", "public static final String VIA = \"Via\";" ], [ "WARNING", "com.google.common.net", "HttpHeaders", "public static final String WARNING = \"Warning\";" ], [ "ACCEPT", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT = \"Accept\";" ], [ "ACCEPT_CHARSET", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_CHARSET = \"Accept-Charset\";" ], [ "ACCEPT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_ENCODING = \"Accept-Encoding\";" ], [ "ACCEPT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_LANGUAGE = \"Accept-Language\";" ], [ "ACCESS_CONTROL_REQUEST_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_HEADERS = \"Access-Control-Request-Headers\";" ], [ "ACCESS_CONTROL_REQUEST_METHOD", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_REQUEST_METHOD = \"Access-Control-Request-Method\";" ], [ "AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String AUTHORIZATION = \"Authorization\";" ], [ "CONNECTION", "com.google.common.net", "HttpHeaders", "public static final String CONNECTION = \"Connection\";" ], [ "COOKIE", "com.google.common.net", "HttpHeaders", "public static final String COOKIE = \"Cookie\";" ], [ "EXPECT", "com.google.common.net", "HttpHeaders", "public static final String EXPECT = \"Expect\";" ], [ "FROM", "com.google.common.net", "HttpHeaders", "public static final String FROM = \"From\";" ], [ "FOLLOW_ONLY_WHEN_PRERENDER_SHOWN", "com.google.common.net", "HttpHeaders", "public static final String FOLLOW_ONLY_WHEN_PRERENDER_SHOWN = \"Follow-Only-When-Prerender-Shown\";" ], [ "HOST", "com.google.common.net", "HttpHeaders", "public static final String HOST = \"Host\";" ], [ "IF_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_MATCH = \"If-Match\";" ], [ "IF_MODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_MODIFIED_SINCE = \"If-Modified-Since\";" ], [ "IF_NONE_MATCH", "com.google.common.net", "HttpHeaders", "public static final String IF_NONE_MATCH = \"If-None-Match\";" ], [ "IF_RANGE", "com.google.common.net", "HttpHeaders", "public static final String IF_RANGE = \"If-Range\";" ], [ "IF_UNMODIFIED_SINCE", "com.google.common.net", "HttpHeaders", "public static final String IF_UNMODIFIED_SINCE = \"If-Unmodified-Since\";" ], [ "LAST_EVENT_ID", "com.google.common.net", "HttpHeaders", "public static final String LAST_EVENT_ID = \"Last-Event-ID\";" ], [ "MAX_FORWARDS", "com.google.common.net", "HttpHeaders", "public static final String MAX_FORWARDS = \"Max-Forwards\";" ], [ "ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ORIGIN = \"Origin\";" ], [ "PROXY_AUTHORIZATION", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHORIZATION = \"Proxy-Authorization\";" ], [ "RANGE", "com.google.common.net", "HttpHeaders", "public static final String RANGE = \"Range\";" ], [ "REFERER", "com.google.common.net", "HttpHeaders", "public static final String REFERER = \"Referer\";" ], [ "TE", "com.google.common.net", "HttpHeaders", "public static final String TE = \"TE\";" ], [ "UPGRADE", "com.google.common.net", "HttpHeaders", "public static final String UPGRADE = \"Upgrade\";" ], [ "USER_AGENT", "com.google.common.net", "HttpHeaders", "public static final String USER_AGENT = \"User-Agent\";" ], [ "ACCEPT_RANGES", "com.google.common.net", "HttpHeaders", "public static final String ACCEPT_RANGES = \"Accept-Ranges\";" ], [ "ACCESS_CONTROL_ALLOW_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";" ], [ "ACCESS_CONTROL_ALLOW_METHODS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_METHODS = \"Access-Control-Allow-Methods\";" ], [ "ACCESS_CONTROL_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";" ], [ "ACCESS_CONTROL_ALLOW_CREDENTIALS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";" ], [ "ACCESS_CONTROL_EXPOSE_HEADERS", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_EXPOSE_HEADERS = \"Access-Control-Expose-Headers\";" ], [ "ACCESS_CONTROL_MAX_AGE", "com.google.common.net", "HttpHeaders", "public static final String ACCESS_CONTROL_MAX_AGE = \"Access-Control-Max-Age\";" ], [ "AGE", "com.google.common.net", "HttpHeaders", "public static final String AGE = \"Age\";" ], [ "ALLOW", "com.google.common.net", "HttpHeaders", "public static final String ALLOW = \"Allow\";" ], [ "CONTENT_DISPOSITION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_DISPOSITION = \"Content-Disposition\";" ], [ "CONTENT_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_ENCODING = \"Content-Encoding\";" ], [ "CONTENT_LANGUAGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LANGUAGE = \"Content-Language\";" ], [ "CONTENT_LOCATION", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_LOCATION = \"Content-Location\";" ], [ "CONTENT_MD5", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_MD5 = \"Content-MD5\";" ], [ "CONTENT_RANGE", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_RANGE = \"Content-Range\";" ], [ "CONTENT_SECURITY_POLICY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY = \"Content-Security-Policy\";" ], [ "CONTENT_SECURITY_POLICY_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String CONTENT_SECURITY_POLICY_REPORT_ONLY = \"Content-Security-Policy-Report-Only\";" ], [ "ETAG", "com.google.common.net", "HttpHeaders", "public static final String ETAG = \"ETag\";" ], [ "EXPIRES", "com.google.common.net", "HttpHeaders", "public static final String EXPIRES = \"Expires\";" ], [ "LAST_MODIFIED", "com.google.common.net", "HttpHeaders", "public static final String LAST_MODIFIED = \"Last-Modified\";" ], [ "LINK", "com.google.common.net", "HttpHeaders", "public static final String LINK = \"Link\";" ], [ "LOCATION", "com.google.common.net", "HttpHeaders", "public static final String LOCATION = \"Location\";" ], [ "P3P", "com.google.common.net", "HttpHeaders", "public static final String P3P = \"P3P\";" ], [ "PROXY_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String PROXY_AUTHENTICATE = \"Proxy-Authenticate\";" ], [ "REFRESH", "com.google.common.net", "HttpHeaders", "public static final String REFRESH = \"Refresh\";" ], [ "RETRY_AFTER", "com.google.common.net", "HttpHeaders", "public static final String RETRY_AFTER = \"Retry-After\";" ], [ "SERVER", "com.google.common.net", "HttpHeaders", "public static final String SERVER = \"Server\";" ], [ "SET_COOKIE", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE = \"Set-Cookie\";" ], [ "SET_COOKIE2", "com.google.common.net", "HttpHeaders", "public static final String SET_COOKIE2 = \"Set-Cookie2\";" ], [ "STRICT_TRANSPORT_SECURITY", "com.google.common.net", "HttpHeaders", "public static final String STRICT_TRANSPORT_SECURITY = \"Strict-Transport-Security\";" ], [ "TIMING_ALLOW_ORIGIN", "com.google.common.net", "HttpHeaders", "public static final String TIMING_ALLOW_ORIGIN = \"Timing-Allow-Origin\";" ], [ "TRAILER", "com.google.common.net", "HttpHeaders", "public static final String TRAILER = \"Trailer\";" ], [ "TRANSFER_ENCODING", "com.google.common.net", "HttpHeaders", "public static final String TRANSFER_ENCODING = \"Transfer-Encoding\";" ], [ "VARY", "com.google.common.net", "HttpHeaders", "public static final String VARY = \"Vary\";" ], [ "WWW_AUTHENTICATE", "com.google.common.net", "HttpHeaders", "public static final String WWW_AUTHENTICATE = \"WWW-Authenticate\";" ], [ "DNT", "com.google.common.net", "HttpHeaders", "public static final String DNT = \"DNT\";" ], [ "X_CONTENT_TYPE_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_CONTENT_TYPE_OPTIONS = \"X-Content-Type-Options\";" ], [ "X_DO_NOT_TRACK", "com.google.common.net", "HttpHeaders", "public static final String X_DO_NOT_TRACK = \"X-Do-Not-Track\";" ], [ "X_FORWARDED_FOR", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_FOR = \"X-Forwarded-For\";" ], [ "X_FORWARDED_PROTO", "com.google.common.net", "HttpHeaders", "public static final String X_FORWARDED_PROTO = \"X-Forwarded-Proto\";" ], [ "X_FRAME_OPTIONS", "com.google.common.net", "HttpHeaders", "public static final String X_FRAME_OPTIONS = \"X-Frame-Options\";" ], [ "X_POWERED_BY", "com.google.common.net", "HttpHeaders", "public static final String X_POWERED_BY = \"X-Powered-By\";" ], [ "PUBLIC_KEY_PINS", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS = \"Public-Key-Pins\";" ], [ "PUBLIC_KEY_PINS_REPORT_ONLY", "com.google.common.net", "HttpHeaders", "public static final String PUBLIC_KEY_PINS_REPORT_ONLY = \"Public-Key-Pins-Report-Only\";" ], [ "X_REQUESTED_WITH", "com.google.common.net", "HttpHeaders", "public static final String X_REQUESTED_WITH = \"X-Requested-With\";" ], [ "X_USER_IP", "com.google.common.net", "HttpHeaders", "public static final String X_USER_IP = \"X-User-IP\";" ], [ "X_XSS_PROTECTION", "com.google.common.net", "HttpHeaders", "public static final String X_XSS_PROTECTION = \"X-XSS-Protection\";" ], [ "PING_FROM", "com.google.common.net", "HttpHeaders", "public static final String PING_FROM = \"Ping-From\";" ], [ "PING_TO", "com.google.common.net", "HttpHeaders", "public static final String PING_TO = \"Ping-To\";" ], [ "ANY_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TYPE = createConstant(WILDCARD, WILDCARD);" ], [ "ANY_TEXT_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_TEXT_TYPE = createConstant(TEXT_TYPE, WILDCARD);" ], [ "ANY_IMAGE_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_IMAGE_TYPE = createConstant(IMAGE_TYPE, WILDCARD);" ], [ "ANY_AUDIO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_AUDIO_TYPE = createConstant(AUDIO_TYPE, WILDCARD);" ], [ "ANY_VIDEO_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_VIDEO_TYPE = createConstant(VIDEO_TYPE, WILDCARD);" ], [ "ANY_APPLICATION_TYPE", "com.google.common.net", "MediaType", "public static final MediaType ANY_APPLICATION_TYPE = createConstant(APPLICATION_TYPE, WILDCARD);" ], [ "CACHE_MANIFEST_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CACHE_MANIFEST_UTF_8 = createConstantUtf8(TEXT_TYPE, \"cache-manifest\");" ], [ "CSS_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSS_UTF_8 = createConstantUtf8(TEXT_TYPE, \"css\");" ], [ "CSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType CSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"csv\");" ], [ "HTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType HTML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"html\");" ], [ "I_CALENDAR_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType I_CALENDAR_UTF_8 = createConstantUtf8(TEXT_TYPE, \"calendar\");" ], [ "PLAIN_TEXT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType PLAIN_TEXT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"plain\");" ], [ "TEXT_JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TEXT_JAVASCRIPT_UTF_8 = createConstantUtf8(TEXT_TYPE, \"javascript\");" ], [ "TSV_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType TSV_UTF_8 = createConstantUtf8(TEXT_TYPE, \"tab-separated-values\");" ], [ "VCARD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType VCARD_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vcard\");" ], [ "WML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType WML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"vnd.wap.wml\");" ], [ "XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XML_UTF_8 = createConstantUtf8(TEXT_TYPE, \"xml\");" ], [ "BMP", "com.google.common.net", "MediaType", "public static final MediaType BMP = createConstant(IMAGE_TYPE, \"bmp\");" ], [ "CRW", "com.google.common.net", "MediaType", "public static final MediaType CRW = createConstant(IMAGE_TYPE, \"x-canon-crw\");" ], [ "GIF", "com.google.common.net", "MediaType", "public static final MediaType GIF = createConstant(IMAGE_TYPE, \"gif\");" ], [ "ICO", "com.google.common.net", "MediaType", "public static final MediaType ICO = createConstant(IMAGE_TYPE, \"vnd.microsoft.icon\");" ], [ "JPEG", "com.google.common.net", "MediaType", "public static final MediaType JPEG = createConstant(IMAGE_TYPE, \"jpeg\");" ], [ "PNG", "com.google.common.net", "MediaType", "public static final MediaType PNG = createConstant(IMAGE_TYPE, \"png\");" ], [ "PSD", "com.google.common.net", "MediaType", "public static final MediaType PSD = createConstant(IMAGE_TYPE, \"vnd.adobe.photoshop\");" ], [ "SVG_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType SVG_UTF_8 = createConstantUtf8(IMAGE_TYPE, \"svg+xml\");" ], [ "TIFF", "com.google.common.net", "MediaType", "public static final MediaType TIFF = createConstant(IMAGE_TYPE, \"tiff\");" ], [ "WEBP", "com.google.common.net", "MediaType", "public static final MediaType WEBP = createConstant(IMAGE_TYPE, \"webp\");" ], [ "MP4_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MP4_AUDIO = createConstant(AUDIO_TYPE, \"mp4\");" ], [ "MPEG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_AUDIO = createConstant(AUDIO_TYPE, \"mpeg\");" ], [ "OGG_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType OGG_AUDIO = createConstant(AUDIO_TYPE, \"ogg\");" ], [ "WEBM_AUDIO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_AUDIO = createConstant(AUDIO_TYPE, \"webm\");" ], [ "MP4_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MP4_VIDEO = createConstant(VIDEO_TYPE, \"mp4\");" ], [ "MPEG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType MPEG_VIDEO = createConstant(VIDEO_TYPE, \"mpeg\");" ], [ "OGG_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType OGG_VIDEO = createConstant(VIDEO_TYPE, \"ogg\");" ], [ "QUICKTIME", "com.google.common.net", "MediaType", "public static final MediaType QUICKTIME = createConstant(VIDEO_TYPE, \"quicktime\");" ], [ "WEBM_VIDEO", "com.google.common.net", "MediaType", "public static final MediaType WEBM_VIDEO = createConstant(VIDEO_TYPE, \"webm\");" ], [ "WMV", "com.google.common.net", "MediaType", "public static final MediaType WMV = createConstant(VIDEO_TYPE, \"x-ms-wmv\");" ], [ "APPLICATION_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xml\");" ], [ "ATOM_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType ATOM_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"atom+xml\");" ], [ "BZIP2", "com.google.common.net", "MediaType", "public static final MediaType BZIP2 = createConstant(APPLICATION_TYPE, \"x-bzip2\");" ], [ "DART_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType DART_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"dart\");" ], [ "APPLE_PASSBOOK", "com.google.common.net", "MediaType", "public static final MediaType APPLE_PASSBOOK = createConstant(APPLICATION_TYPE, \"vnd.apple.pkpass\");" ], [ "EOT", "com.google.common.net", "MediaType", "public static final MediaType EOT = createConstant(APPLICATION_TYPE, \"vnd.ms-fontobject\");" ], [ "EPUB", "com.google.common.net", "MediaType", "public static final MediaType EPUB = createConstant(APPLICATION_TYPE, \"epub+zip\");" ], [ "FORM_DATA", "com.google.common.net", "MediaType", "public static final MediaType FORM_DATA = createConstant(APPLICATION_TYPE, \"x-www-form-urlencoded\");" ], [ "KEY_ARCHIVE", "com.google.common.net", "MediaType", "public static final MediaType KEY_ARCHIVE = createConstant(APPLICATION_TYPE, \"pkcs12\");" ], [ "APPLICATION_BINARY", "com.google.common.net", "MediaType", "public static final MediaType APPLICATION_BINARY = createConstant(APPLICATION_TYPE, \"binary\");" ], [ "GZIP", "com.google.common.net", "MediaType", "public static final MediaType GZIP = createConstant(APPLICATION_TYPE, \"x-gzip\");" ], [ "JAVASCRIPT_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JAVASCRIPT_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"javascript\");" ], [ "JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"json\");" ], [ "MANIFEST_JSON_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType MANIFEST_JSON_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"manifest+json\");" ], [ "KML", "com.google.common.net", "MediaType", "public static final MediaType KML = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kml+xml\");" ], [ "KMZ", "com.google.common.net", "MediaType", "public static final MediaType KMZ = createConstant(APPLICATION_TYPE, \"vnd.google-earth.kmz\");" ], [ "MBOX", "com.google.common.net", "MediaType", "public static final MediaType MBOX = createConstant(APPLICATION_TYPE, \"mbox\");" ], [ "APPLE_MOBILE_CONFIG", "com.google.common.net", "MediaType", "public static final MediaType APPLE_MOBILE_CONFIG = createConstant(APPLICATION_TYPE, \"x-apple-aspen-config\");" ], [ "MICROSOFT_EXCEL", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_EXCEL = createConstant(APPLICATION_TYPE, \"vnd.ms-excel\");" ], [ "MICROSOFT_POWERPOINT", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_POWERPOINT = createConstant(APPLICATION_TYPE, \"vnd.ms-powerpoint\");" ], [ "MICROSOFT_WORD", "com.google.common.net", "MediaType", "public static final MediaType MICROSOFT_WORD = createConstant(APPLICATION_TYPE, \"msword\");" ], [ "OCTET_STREAM", "com.google.common.net", "MediaType", "public static final MediaType OCTET_STREAM = createConstant(APPLICATION_TYPE, \"octet-stream\");" ], [ "OGG_CONTAINER", "com.google.common.net", "MediaType", "public static final MediaType OGG_CONTAINER = createConstant(APPLICATION_TYPE, \"ogg\");" ], [ "OOXML_DOCUMENT", "com.google.common.net", "MediaType", "public static final MediaType OOXML_DOCUMENT = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.wordprocessingml.document\");" ], [ "OOXML_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OOXML_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.presentationml.presentation\");" ], [ "OOXML_SHEET", "com.google.common.net", "MediaType", "public static final MediaType OOXML_SHEET = createConstant(APPLICATION_TYPE, \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");" ], [ "OPENDOCUMENT_GRAPHICS", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_GRAPHICS = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.graphics\");" ], [ "OPENDOCUMENT_PRESENTATION", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_PRESENTATION = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.presentation\");" ], [ "OPENDOCUMENT_SPREADSHEET", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_SPREADSHEET = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.spreadsheet\");" ], [ "OPENDOCUMENT_TEXT", "com.google.common.net", "MediaType", "public static final MediaType OPENDOCUMENT_TEXT = createConstant(APPLICATION_TYPE, \"vnd.oasis.opendocument.text\");" ], [ "PDF", "com.google.common.net", "MediaType", "public static final MediaType PDF = createConstant(APPLICATION_TYPE, \"pdf\");" ], [ "POSTSCRIPT", "com.google.common.net", "MediaType", "public static final MediaType POSTSCRIPT = createConstant(APPLICATION_TYPE, \"postscript\");" ], [ "PROTOBUF", "com.google.common.net", "MediaType", "public static final MediaType PROTOBUF = createConstant(APPLICATION_TYPE, \"protobuf\");" ], [ "RDF_XML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RDF_XML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rdf+xml\");" ], [ "RTF_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType RTF_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"rtf\");" ], [ "SFNT", "com.google.common.net", "MediaType", "public static final MediaType SFNT = createConstant(APPLICATION_TYPE, \"font-sfnt\");" ], [ "SHOCKWAVE_FLASH", "com.google.common.net", "MediaType", "public static final MediaType SHOCKWAVE_FLASH = createConstant(APPLICATION_TYPE, \"x-shockwave-flash\");" ], [ "SKETCHUP", "com.google.common.net", "MediaType", "public static final MediaType SKETCHUP = createConstant(APPLICATION_TYPE, \"vnd.sketchup.skp\");" ], [ "TAR", "com.google.common.net", "MediaType", "public static final MediaType TAR = createConstant(APPLICATION_TYPE, \"x-tar\");" ], [ "WOFF", "com.google.common.net", "MediaType", "public static final MediaType WOFF = createConstant(APPLICATION_TYPE, \"font-woff\");" ], [ "XHTML_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XHTML_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xhtml+xml\");" ], [ "XRD_UTF_8", "com.google.common.net", "MediaType", "public static final MediaType XRD_UTF_8 = createConstantUtf8(APPLICATION_TYPE, \"xrd+xml\");" ], [ "ZIP", "com.google.common.net", "MediaType", "public static final MediaType ZIP = createConstant(APPLICATION_TYPE, \"zip\");" ], [ "MAXIMUM_CAPACITY", "com.google.common.cache", "LocalCache", "static final int MAXIMUM_CAPACITY = 1 << 30;" ], [ "MAX_SEGMENTS", "com.google.common.cache", "LocalCache", "static final int MAX_SEGMENTS = 1 << 16;" ], [ "CONTAINS_VALUE_RETRIES", "com.google.common.cache", "LocalCache", "static final int CONTAINS_VALUE_RETRIES = 3;" ], [ "DRAIN_THRESHOLD", "com.google.common.cache", "LocalCache", "static final int DRAIN_THRESHOLD = 0x3F;" ], [ "DRAIN_MAX", "com.google.common.cache", "LocalCache", "static final int DRAIN_MAX = 16;" ], [ "logger", "com.google.common.cache", "LocalCache", "static final Logger logger = Logger.getLogger(LocalCache.class.getName());" ], [ "ACCESS_MASK", "com.google.common.cache", "LocalCache", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "LocalCache", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "LocalCache", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "LocalCache", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "UNSET", "com.google.common.cache", "LocalCache", "static final ValueReference<Object,Object> UNSET = new ValueReference<Object, Object>() {\n\n    @Override\n    public Object get() {\n        return null;\n    }\n\n    @Override\n    public int getWeight() {\n        return 0;\n    }\n\n    @Override\n    public ReferenceEntry<Object, Object> getEntry() {\n        return null;\n    }\n\n    @Override\n    public ValueReference<Object, Object> copyFor(ReferenceQueue<Object> queue, @Nullable Object value, ReferenceEntry<Object, Object> entry) {\n        return this;\n    }\n\n    @Override\n    public boolean isLoading() {\n        return false;\n    }\n\n    @Override\n    public boolean isActive() {\n        return false;\n    }\n\n    @Override\n    public Object waitForValue() {\n        return null;\n    }\n\n    @Override\n    public void notifyNewValue(Object newValue) {\n    }\n};" ], [ "DISCARDING_QUEUE", "com.google.common.cache", "LocalCache", "static final Queue<? extends Object> DISCARDING_QUEUE = new AbstractQueue<Object>() {\n\n    @Override\n    public boolean offer(Object o) {\n        return true;\n    }\n\n    @Override\n    public Object peek() {\n        return null;\n    }\n\n    @Override\n    public Object poll() {\n        return null;\n    }\n\n    @Override\n    public int size() {\n        return 0;\n    }\n\n    @Override\n    public Iterator<Object> iterator() {\n        return ImmutableSet.of().iterator();\n    }\n};" ], [ "ACCESS_MASK", "com.google.common.cache", "EntryFactory", "static final int ACCESS_MASK = 1;" ], [ "WRITE_MASK", "com.google.common.cache", "EntryFactory", "static final int WRITE_MASK = 2;" ], [ "WEAK_MASK", "com.google.common.cache", "EntryFactory", "static final int WEAK_MASK = 4;" ], [ "factories", "com.google.common.cache", "EntryFactory", "static final EntryFactory[] factories = { STRONG, STRONG_ACCESS, STRONG_WRITE, STRONG_ACCESS_WRITE, WEAK, WEAK_ACCESS, WEAK_WRITE, WEAK_ACCESS_WRITE };" ], [ "NULL_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<? extends StatsCounter> NULL_STATS_COUNTER = Suppliers.ofInstance(new StatsCounter() {\n\n    @Override\n    public void recordHits(int count) {\n    }\n\n    @Override\n    public void recordMisses(int count) {\n    }\n\n    @Override\n    public void recordLoadSuccess(long loadTime) {\n    }\n\n    @Override\n    public void recordLoadException(long loadTime) {\n    }\n\n    @Override\n    public void recordEviction() {\n    }\n\n    @Override\n    public CacheStats snapshot() {\n        return EMPTY_STATS;\n    }\n});" ], [ "EMPTY_STATS", "com.google.common.cache", "CacheBuilder", "static final CacheStats EMPTY_STATS = new CacheStats(0, 0, 0, 0, 0, 0);" ], [ "CACHE_STATS_COUNTER", "com.google.common.cache", "CacheBuilder", "static final Supplier<StatsCounter> CACHE_STATS_COUNTER = new Supplier<StatsCounter>() {\n\n    @Override\n    public StatsCounter get() {\n        return new SimpleStatsCounter();\n    }\n};" ], [ "NULL_TICKER", "com.google.common.cache", "CacheBuilder", "static final Ticker NULL_TICKER = new Ticker() {\n\n    @Override\n    public long read() {\n        return 0;\n    }\n};" ], [ "UNSET_INT", "com.google.common.cache", "CacheBuilder", "static final int UNSET_INT = -1;" ], [ "threadHashCode", "com.google.common.cache", "Striped64", "static final ThreadLocal<int[]> threadHashCode = new ThreadLocal<int[]>();" ], [ "rng", "com.google.common.cache", "Striped64", "static final Random rng = new Random();" ], [ "NCPU", "com.google.common.cache", "Striped64", "static final int NCPU = Runtime.getRuntime().availableProcessors();" ], [ "log", "com.google.common.util.concurrent", "ExecutionList", "static final Logger log = Logger.getLogger(ExecutionList.class.getName());" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "AbstractFuture", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "AbstractFuture", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "AbstractFuture", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "AbstractFuture", "static final long WAITER_NEXT_OFFSET;" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Waiter", "static final Waiter TOMBSTONE = new Waiter(false);" ], [ "TOMBSTONE", "com.google.common.util.concurrent", "Listener", "static final Listener TOMBSTONE = new Listener(null, null);" ], [ "FALLBACK_INSTANCE", "com.google.common.util.concurrent", "Failure", "static final Failure FALLBACK_INSTANCE = new Failure(new Throwable(\"Failure occurred while trying to finish a future.\") {\n\n    @Override\n    public synchronized Throwable fillInStackTrace() {\n        // no stack trace\n        return this;\n    }\n});" ], [ "UNSAFE", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final sun.misc.Unsafe UNSAFE;" ], [ "LISTENERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long LISTENERS_OFFSET;" ], [ "WAITERS_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITERS_OFFSET;" ], [ "VALUE_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long VALUE_OFFSET;" ], [ "WAITER_THREAD_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_THREAD_OFFSET;" ], [ "WAITER_NEXT_OFFSET", "com.google.common.util.concurrent", "UnsafeAtomicHelper", "static final long WAITER_NEXT_OFFSET;" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "CycleDetectingLockFactory", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "EMPTY_STACK_TRACE", "com.google.common.util.concurrent", "ExampleStackTrace", "static final StackTraceElement[] EMPTY_STACK_TRACE = new StackTraceElement[0];" ], [ "EXCLUDED_CLASS_NAMES", "com.google.common.util.concurrent", "ExampleStackTrace", "static final Set<String> EXCLUDED_CLASS_NAMES = ImmutableSet.of(CycleDetectingLockFactory.class.getName(), ExampleStackTrace.class.getName(), LockGraphNode.class.getName());" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "FuturesGetChecked", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "FuturesGetChecked", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "CLASS_VALUE_VALIDATOR_NAME", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final String CLASS_VALUE_VALIDATOR_NAME = GetCheckedTypeValidatorHolder.class.getName() + \"$ClassValueValidator\";" ], [ "BEST_VALIDATOR", "com.google.common.util.concurrent", "GetCheckedTypeValidatorHolder", "static final GetCheckedTypeValidator BEST_VALIDATOR = getBestValidator();" ], [ "NULL", "com.google.common.util.concurrent", "Futures", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "NULL", "com.google.common.util.concurrent", "ImmediateSuccessfulFuture", "static final ImmediateSuccessfulFuture<Object> NULL = new ImmediateSuccessfulFuture<Object>(null);" ], [ "MURMUR3_32", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Hashing", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Hashing", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "Hashing", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Hashing", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Hashing", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Hashing", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Hashing", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Hashing", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Hashing", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Hashing", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "MURMUR3_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction MURMUR3_32 = new Murmur3_32HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_32", "com.google.common.hash", "Murmur3_32Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);" ], [ "MURMUR3_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction MURMUR3_128 = new Murmur3_128HashFunction(0);" ], [ "GOOD_FAST_HASH_FUNCTION_128", "com.google.common.hash", "Murmur3_128Holder", "static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);" ], [ "SIP_HASH_24", "com.google.common.hash", "SipHash24Holder", "static final HashFunction SIP_HASH_24 = new SipHashFunction(2, 4, 0x0706050403020100L, 0x0f0e0d0c0b0a0908L);" ], [ "MD5", "com.google.common.hash", "Md5Holder", "static final HashFunction MD5 = new MessageDigestHashFunction(\"MD5\", \"Hashing.md5()\");" ], [ "SHA_1", "com.google.common.hash", "Sha1Holder", "static final HashFunction SHA_1 = new MessageDigestHashFunction(\"SHA-1\", \"Hashing.sha1()\");" ], [ "SHA_256", "com.google.common.hash", "Sha256Holder", "static final HashFunction SHA_256 = new MessageDigestHashFunction(\"SHA-256\", \"Hashing.sha256()\");" ], [ "SHA_384", "com.google.common.hash", "Sha384Holder", "static final HashFunction SHA_384 = new MessageDigestHashFunction(\"SHA-384\", \"Hashing.sha384()\");" ], [ "SHA_512", "com.google.common.hash", "Sha512Holder", "static final HashFunction SHA_512 = new MessageDigestHashFunction(\"SHA-512\", \"Hashing.sha512()\");" ], [ "CRC_32_C", "com.google.common.hash", "Crc32cHolder", "static final HashFunction CRC_32_C = new Crc32cHashFunction();" ], [ "CRC_32", "com.google.common.hash", "Crc32Holder", "static final HashFunction CRC_32 = checksumHashFunction(ChecksumType.CRC_32, \"Hashing.crc32()\");" ], [ "ADLER_32", "com.google.common.hash", "Adler32Holder", "static final HashFunction ADLER_32 = checksumHashFunction(ChecksumType.ADLER_32, \"Hashing.adler32()\");" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHashFunction", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "CRC_TABLE", "com.google.common.hash", "Crc32cHasher", "static final int[] CRC_TABLE = { 0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351 };" ], [ "BOTTOM_BYTE", "com.google.common.hash", "AbstractNonStreamingHashFunction", "static final int BOTTOM_BYTE = 0xFF;" ], [ "BOTTOM_BYTE", "com.google.common.hash", "BufferingHasher", "static final int BOTTOM_BYTE = 0xFF;" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeToken", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "FOR_GENERIC_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<TypeToken<?>> FOR_GENERIC_TYPE = new TypeCollector<TypeToken<?>>() {\n\n    @Override\n    Class<?> getRawType(TypeToken<?> type) {\n        return type.getRawType();\n    }\n\n    @Override\n    Iterable<? extends TypeToken<?>> getInterfaces(TypeToken<?> type) {\n        return type.getGenericInterfaces();\n    }\n\n    @Nullable\n    @Override\n    TypeToken<?> getSuperclass(TypeToken<?> type) {\n        return type.getGenericSuperclass();\n    }\n};" ], [ "FOR_RAW_TYPE", "com.google.common.reflect", "TypeCollector", "static final TypeCollector<Class<?>> FOR_RAW_TYPE = new TypeCollector<Class<?>>() {\n\n    @Override\n    Class<?> getRawType(Class<?> type) {\n        return type;\n    }\n\n    @Override\n    Iterable<? extends Class<?>> getInterfaces(Class<?> type) {\n        return Arrays.asList(type.getInterfaces());\n    }\n\n    @Nullable\n    @Override\n    Class<?> getSuperclass(Class<?> type) {\n        return type.getSuperclass();\n    }\n};" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "Types", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "Types", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "Types", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "JVM_BEHAVIOR", "com.google.common.reflect", "ClassOwnership", "static final ClassOwnership JVM_BEHAVIOR = detectJvmBehavior();" ], [ "CURRENT", "com.google.common.reflect", "JavaVersion", "static final JavaVersion CURRENT;" ], [ "NATIVE_TYPE_VARIABLE_ONLY", "com.google.common.reflect", "NativeTypeVariableEquals", "static final boolean NATIVE_TYPE_VARIABLE_ONLY = !NativeTypeVariableEquals.class.getTypeParameters()[0].equals(newArtificialTypeVariable(NativeTypeVariableEquals.class, \"X\"));" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "Closer", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "Closer", "static final Method addSuppressed = getAddSuppressed();" ], [ "INSTANCE", "com.google.common.io", "LoggingSuppressor", "static final LoggingSuppressor INSTANCE = new LoggingSuppressor();" ], [ "INSTANCE", "com.google.common.io", "SuppressingSuppressor", "static final SuppressingSuppressor INSTANCE = new SuppressingSuppressor();" ], [ "addSuppressed", "com.google.common.io", "SuppressingSuppressor", "static final Method addSuppressed = getAddSuppressed();" ], [ "logger", "com.google.common.io", "Closeables", "static final Logger logger = Logger.getLogger(Closeables.class.getName());" ], [ "BUF_SIZE", "com.google.common.io", "ByteStreams", "static final int BUF_SIZE = 8192;" ], [ "skipBuffer", "com.google.common.io", "ByteStreams", "static final byte[] skipBuffer = new byte[BUF_SIZE];" ], [ "INSTANCE", "com.google.common.io", "ByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "INSTANCE", "com.google.common.io", "EmptyByteSource", "static final EmptyByteSource INSTANCE = new EmptyByteSource();" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "LongMath", "static final long MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333F9DE6484L;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "LongMath", "static final byte[] maxLog10ForLeadingZeros = { 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "LongMath", "static final long[] powersOf10 = { 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L, 1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };" ], [ "halfPowersOf10", "com.google.common.math", "LongMath", "static final long[] halfPowersOf10 = { 3L, 31L, 316L, 3162L, 31622L, 316227L, 3162277L, 31622776L, 316227766L, 3162277660L, 31622776601L, 316227766016L, 3162277660168L, 31622776601683L, 316227766016837L, 3162277660168379L, 31622776601683793L, 316227766016837933L, 3162277660168379331L };" ], [ "FLOOR_SQRT_MAX_LONG", "com.google.common.math", "LongMath", "static final long FLOOR_SQRT_MAX_LONG = 3037000499L;" ], [ "factorials", "com.google.common.math", "LongMath", "static final long[] factorials = { 1L, 1L, 1L * 2, 1L * 2 * 3, 1L * 2 * 3 * 4, 1L * 2 * 3 * 4 * 5, 1L * 2 * 3 * 4 * 5 * 6, 1L * 2 * 3 * 4 * 5 * 6 * 7, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19, 1L * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15 * 16 * 17 * 18 * 19 * 20 };" ], [ "biggestBinomials", "com.google.common.math", "LongMath", "static final int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 3810779, 121977, 16175, 4337, 1733, 887, 534, 361, 265, 206, 169, 143, 125, 111, 101, 94, 88, 83, 79, 76, 74, 72, 70, 69, 68, 67, 67, 66, 66, 66, 66 };" ], [ "biggestSimpleBinomials", "com.google.common.math", "LongMath", "static final int[] biggestSimpleBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE, 2642246, 86251, 11724, 3218, 1313, 684, 419, 287, 214, 169, 139, 119, 105, 95, 87, 81, 76, 73, 70, 68, 66, 64, 63, 62, 62, 61, 61, 61 };" ], [ "MAX_POWER_OF_SQRT2_UNSIGNED", "com.google.common.math", "IntMath", "static final int MAX_POWER_OF_SQRT2_UNSIGNED = 0xB504F333;" ], [ "maxLog10ForLeadingZeros", "com.google.common.math", "IntMath", "static final byte[] maxLog10ForLeadingZeros = { 9, 9, 9, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0 };" ], [ "powersOf10", "com.google.common.math", "IntMath", "static final int[] powersOf10 = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };" ], [ "halfPowersOf10", "com.google.common.math", "IntMath", "static final int[] halfPowersOf10 = { 3, 31, 316, 3162, 31622, 316227, 3162277, 31622776, 316227766, Integer.MAX_VALUE };" ], [ "FLOOR_SQRT_MAX_INT", "com.google.common.math", "IntMath", "static final int FLOOR_SQRT_MAX_INT = 46340;" ], [ "biggestBinomials", "com.google.common.math", "IntMath", "static int[] biggestBinomials = { Integer.MAX_VALUE, Integer.MAX_VALUE, 65536, 2345, 477, 193, 110, 75, 58, 49, 43, 39, 37, 35, 34, 34, 33 };" ], [ "SQRT2_PRECOMPUTE_THRESHOLD", "com.google.common.math", "BigIntegerMath", "static final int SQRT2_PRECOMPUTE_THRESHOLD = 256;" ], [ "SQRT2_PRECOMPUTED_BITS", "com.google.common.math", "BigIntegerMath", "static final BigInteger SQRT2_PRECOMPUTED_BITS = new BigInteger(\"16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a\", 16);" ], [ "MAX_FACTORIAL", "com.google.common.math", "DoubleMath", "static final int MAX_FACTORIAL = 170;" ], [ "everySixteenthFactorial", "com.google.common.math", "DoubleMath", "static final double[] everySixteenthFactorial = { 0x1.0p0, 0x1.30777758p44, 0x1.956ad0aae33a4p117, 0x1.ee69a78d72cb6p202, 0x1.fe478ee34844ap295, 0x1.c619094edabffp394, 0x1.3638dd7bd6347p498, 0x1.7cac197cfe503p605, 0x1.1e5dfc140e1e5p716, 0x1.8ce85fadb707ep829, 0x1.95d5f3d928edep945 };" ], [ "SIGNIFICAND_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGNIFICAND_MASK = 0x000fffffffffffffL;" ], [ "EXPONENT_MASK", "com.google.common.math", "DoubleUtils", "static final long EXPONENT_MASK = 0x7ff0000000000000L;" ], [ "SIGN_MASK", "com.google.common.math", "DoubleUtils", "static final long SIGN_MASK = 0x8000000000000000L;" ], [ "SIGNIFICAND_BITS", "com.google.common.math", "DoubleUtils", "static final int SIGNIFICAND_BITS = 52;" ], [ "EXPONENT_BIAS", "com.google.common.math", "DoubleUtils", "static final int EXPONENT_BIAS = 1023;" ], [ "IMPLICIT_BIT", "com.google.common.math", "DoubleUtils", "static final long IMPLICIT_BIT = SIGNIFICAND_MASK + 1;" ], [ "BYTES", "com.google.common.primitives", "Floats", "public static final int BYTES = Float.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Floats", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "INSTANCE", "com.google.common.primitives", "FloatConverter", "static final FloatConverter INSTANCE = new FloatConverter();" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLongs", "public static final long MAX_VALUE = -1L;" ], [ "BYTES", "com.google.common.primitives", "Shorts", "public static final int BYTES = Short.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Shorts", "public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Shorts", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "INSTANCE", "com.google.common.primitives", "ShortConverter", "static final ShortConverter INSTANCE = new ShortConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "SignedBytes", "public static final byte MAX_POWER_OF_TWO = 1 << 6;" ], [ "BYTES", "com.google.common.primitives", "Doubles", "public static final int BYTES = Double.SIZE / Byte.SIZE;" ], [ "INSTANCE", "com.google.common.primitives", "Doubles", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "FLOATING_POINT_PATTERN", "com.google.common.primitives", "Doubles", "static final Pattern FLOATING_POINT_PATTERN = fpPattern();" ], [ "INSTANCE", "com.google.common.primitives", "DoubleConverter", "static final DoubleConverter INSTANCE = new DoubleConverter();" ], [ "INT_MASK", "com.google.common.primitives", "UnsignedInts", "static final long INT_MASK = 0xffffffffL;" ], [ "ZERO", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ZERO = new UnsignedLong(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong ONE = new UnsignedLong(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedLong", "public static final UnsignedLong MAX_VALUE = new UnsignedLong(-1L);" ], [ "BYTES", "com.google.common.primitives", "Ints", "public static final int BYTES = Integer.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Ints", "public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Ints", "static final IntConverter INSTANCE = new IntConverter();" ], [ "INSTANCE", "com.google.common.primitives", "IntConverter", "static final IntConverter INSTANCE = new IntConverter();" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_POWER_OF_TWO = (byte) 0x80;" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedBytes", "public static final byte MAX_VALUE = (byte) 0xFF;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "UnsignedBytes", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "UnsignedBytes", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsignedBytes", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsignedBytes", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsignedBytes", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "UNSAFE_COMPARATOR_NAME", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final String UNSAFE_COMPARATOR_NAME = LexicographicalComparatorHolder.class.getName() + \"$UnsafeComparator\";" ], [ "BEST_COMPARATOR", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Comparator<byte[]> BEST_COMPARATOR = getBestComparator();" ], [ "BIG_ENDIAN", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "LexicographicalComparatorHolder", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BIG_ENDIAN", "com.google.common.primitives", "UnsafeComparator", "static final boolean BIG_ENDIAN = ByteOrder.nativeOrder().equals(ByteOrder.BIG_ENDIAN);" ], [ "theUnsafe", "com.google.common.primitives", "UnsafeComparator", "static final Unsafe theUnsafe;" ], [ "BYTE_ARRAY_BASE_OFFSET", "com.google.common.primitives", "UnsafeComparator", "static final int BYTE_ARRAY_BASE_OFFSET;" ], [ "BYTES", "com.google.common.primitives", "Chars", "public static final int BYTES = Character.SIZE / Byte.SIZE;" ], [ "ZERO", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ZERO = fromIntBits(0);" ], [ "ONE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger ONE = fromIntBits(1);" ], [ "MAX_VALUE", "com.google.common.primitives", "UnsignedInteger", "public static final UnsignedInteger MAX_VALUE = fromIntBits(-1);" ], [ "BYTES", "com.google.common.primitives", "Longs", "public static final int BYTES = Long.SIZE / Byte.SIZE;" ], [ "MAX_POWER_OF_TWO", "com.google.common.primitives", "Longs", "public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);" ], [ "INSTANCE", "com.google.common.primitives", "Longs", "static final LongConverter INSTANCE = new LongConverter();" ], [ "INSTANCE", "com.google.common.primitives", "LongConverter", "static final LongConverter INSTANCE = new LongConverter();" ], [ "NUL", "com.google.common.base", "Ascii", "public static final byte NUL = 0;" ], [ "SOH", "com.google.common.base", "Ascii", "public static final byte SOH = 1;" ], [ "STX", "com.google.common.base", "Ascii", "public static final byte STX = 2;" ], [ "ETX", "com.google.common.base", "Ascii", "public static final byte ETX = 3;" ], [ "EOT", "com.google.common.base", "Ascii", "public static final byte EOT = 4;" ], [ "ENQ", "com.google.common.base", "Ascii", "public static final byte ENQ = 5;" ], [ "ACK", "com.google.common.base", "Ascii", "public static final byte ACK = 6;" ], [ "BEL", "com.google.common.base", "Ascii", "public static final byte BEL = 7;" ], [ "BS", "com.google.common.base", "Ascii", "public static final byte BS = 8;" ], [ "HT", "com.google.common.base", "Ascii", "public static final byte HT = 9;" ], [ "LF", "com.google.common.base", "Ascii", "public static final byte LF = 10;" ], [ "NL", "com.google.common.base", "Ascii", "public static final byte NL = 10;" ], [ "VT", "com.google.common.base", "Ascii", "public static final byte VT = 11;" ], [ "FF", "com.google.common.base", "Ascii", "public static final byte FF = 12;" ], [ "CR", "com.google.common.base", "Ascii", "public static final byte CR = 13;" ], [ "SO", "com.google.common.base", "Ascii", "public static final byte SO = 14;" ], [ "SI", "com.google.common.base", "Ascii", "public static final byte SI = 15;" ], [ "DLE", "com.google.common.base", "Ascii", "public static final byte DLE = 16;" ], [ "DC1", "com.google.common.base", "Ascii", "public static final byte DC1 = 17;" ], [ "XON", "com.google.common.base", "Ascii", "public static final byte XON = 17;" ], [ "DC2", "com.google.common.base", "Ascii", "public static final byte DC2 = 18;" ], [ "DC3", "com.google.common.base", "Ascii", "public static final byte DC3 = 19;" ], [ "XOFF", "com.google.common.base", "Ascii", "public static final byte XOFF = 19;" ], [ "DC4", "com.google.common.base", "Ascii", "public static final byte DC4 = 20;" ], [ "NAK", "com.google.common.base", "Ascii", "public static final byte NAK = 21;" ], [ "SYN", "com.google.common.base", "Ascii", "public static final byte SYN = 22;" ], [ "ETB", "com.google.common.base", "Ascii", "public static final byte ETB = 23;" ], [ "CAN", "com.google.common.base", "Ascii", "public static final byte CAN = 24;" ], [ "EM", "com.google.common.base", "Ascii", "public static final byte EM = 25;" ], [ "SUB", "com.google.common.base", "Ascii", "public static final byte SUB = 26;" ], [ "ESC", "com.google.common.base", "Ascii", "public static final byte ESC = 27;" ], [ "FS", "com.google.common.base", "Ascii", "public static final byte FS = 28;" ], [ "GS", "com.google.common.base", "Ascii", "public static final byte GS = 29;" ], [ "RS", "com.google.common.base", "Ascii", "public static final byte RS = 30;" ], [ "US", "com.google.common.base", "Ascii", "public static final byte US = 31;" ], [ "SP", "com.google.common.base", "Ascii", "public static final byte SP = 32;" ], [ "SPACE", "com.google.common.base", "Ascii", "public static final byte SPACE = 32;" ], [ "DEL", "com.google.common.base", "Ascii", "public static final byte DEL = 127;" ], [ "MIN", "com.google.common.base", "Ascii", "public static final char MIN = 0;" ], [ "MAX", "com.google.common.base", "Ascii", "public static final char MAX = 127;" ], [ "US_ASCII", "com.google.common.base", "Charsets", "public static final Charset US_ASCII = Charset.forName(\"US-ASCII\");" ], [ "ISO_8859_1", "com.google.common.base", "Charsets", "public static final Charset ISO_8859_1 = Charset.forName(\"ISO-8859-1\");" ], [ "UTF_8", "com.google.common.base", "Charsets", "public static final Charset UTF_8 = Charset.forName(\"UTF-8\");" ], [ "UTF_16BE", "com.google.common.base", "Charsets", "public static final Charset UTF_16BE = Charset.forName(\"UTF-16BE\");" ], [ "UTF_16LE", "com.google.common.base", "Charsets", "public static final Charset UTF_16LE = Charset.forName(\"UTF-16LE\");" ], [ "UTF_16", "com.google.common.base", "Charsets", "public static final Charset UTF_16 = Charset.forName(\"UTF-16\");" ], [ "disabled", "com.google.common.base", "FinalizableReferenceQueue", "static boolean disabled;" ], [ "disabled", "com.google.common.base", "SystemLoader", "static boolean disabled;" ], [ "SHARED_SECRETS_CLASSNAME", "com.google.common.base", "Throwables", "static final String SHARED_SECRETS_CLASSNAME = \"sun.misc.SharedSecrets\";" ], [ "INSTANCE", "com.google.common.base", "Converter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "IdentityConverter", "static final IdentityConverter INSTANCE = new IdentityConverter();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Equivalence", "static final Identity INSTANCE = new Identity();" ], [ "INSTANCE", "com.google.common.base", "Equals", "static final Equals INSTANCE = new Equals();" ], [ "INSTANCE", "com.google.common.base", "Identity", "static final Identity INSTANCE = new Identity();" ], [ "WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher WHITESPACE = whitespace();" ], [ "BREAKING_WHITESPACE", "com.google.common.base", "CharMatcher", "public static final CharMatcher BREAKING_WHITESPACE = breakingWhitespace();" ], [ "ASCII", "com.google.common.base", "CharMatcher", "public static final CharMatcher ASCII = ascii();" ], [ "DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher DIGIT = digit();" ], [ "JAVA_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_DIGIT = javaDigit();" ], [ "JAVA_LETTER", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER = javaLetter();" ], [ "JAVA_LETTER_OR_DIGIT", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LETTER_OR_DIGIT = javaLetterOrDigit();" ], [ "JAVA_UPPER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_UPPER_CASE = javaUpperCase();" ], [ "JAVA_LOWER_CASE", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_LOWER_CASE = javaLowerCase();" ], [ "JAVA_ISO_CONTROL", "com.google.common.base", "CharMatcher", "public static final CharMatcher JAVA_ISO_CONTROL = javaIsoControl();" ], [ "INVISIBLE", "com.google.common.base", "CharMatcher", "public static final CharMatcher INVISIBLE = invisible();" ], [ "SINGLE_WIDTH", "com.google.common.base", "CharMatcher", "public static final CharMatcher SINGLE_WIDTH = singleWidth();" ], [ "ANY", "com.google.common.base", "CharMatcher", "public static final CharMatcher ANY = any();" ], [ "NONE", "com.google.common.base", "CharMatcher", "public static final CharMatcher NONE = none();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "CharMatcher", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "CharMatcher", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "CharMatcher", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "CharMatcher", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Any", "static final Any INSTANCE = new Any();" ], [ "INSTANCE", "com.google.common.base", "None", "static final None INSTANCE = new None();" ], [ "TABLE", "com.google.common.base", "Whitespace", "static final String TABLE = \"\\u2002\\u3000\\r\\u0085\\u200A\\u2005\\u2000\\u3000\" + \"\\u2029\\u000B\\u3000\\u2008\\u2003\\u205F\\u3000\\u1680\" + \"\\u0009\\u0020\\u2006\\u2001\\u202F\\u00A0\\u000C\\u2009\" + \"\\u3000\\u2004\\u3000\\u3000\\u2028\\n\\u2007\\u3000\";" ], [ "MULTIPLIER", "com.google.common.base", "Whitespace", "static final int MULTIPLIER = 1682554634;" ], [ "SHIFT", "com.google.common.base", "Whitespace", "static final int SHIFT = Integer.numberOfLeadingZeros(TABLE.length() - 1);" ], [ "INSTANCE", "com.google.common.base", "Whitespace", "static final Whitespace INSTANCE = new Whitespace();" ], [ "INSTANCE", "com.google.common.base", "BreakingWhitespace", "static final CharMatcher INSTANCE = new BreakingWhitespace();" ], [ "INSTANCE", "com.google.common.base", "Ascii", "static final Ascii INSTANCE = new Ascii();" ], [ "INSTANCE", "com.google.common.base", "Digit", "static final Digit INSTANCE = new Digit();" ], [ "INSTANCE", "com.google.common.base", "JavaDigit", "static final JavaDigit INSTANCE = new JavaDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaLetter", "static final JavaLetter INSTANCE = new JavaLetter();" ], [ "INSTANCE", "com.google.common.base", "JavaLetterOrDigit", "static final JavaLetterOrDigit INSTANCE = new JavaLetterOrDigit();" ], [ "INSTANCE", "com.google.common.base", "JavaUpperCase", "static final JavaUpperCase INSTANCE = new JavaUpperCase();" ], [ "INSTANCE", "com.google.common.base", "JavaLowerCase", "static final JavaLowerCase INSTANCE = new JavaLowerCase();" ], [ "INSTANCE", "com.google.common.base", "JavaIsoControl", "static final JavaIsoControl INSTANCE = new JavaIsoControl();" ], [ "INSTANCE", "com.google.common.base", "Invisible", "static final Invisible INSTANCE = new Invisible();" ], [ "INSTANCE", "com.google.common.base", "SingleWidth", "static final SingleWidth INSTANCE = new SingleWidth();" ], [ "INSTANCE", "com.google.common.base", "Absent", "static final Absent<Object> INSTANCE = new Absent<Object>();" ], [ "MAX_SIZE", "com.google.common.base", "SmallCharMatcher", "static final int MAX_SIZE = 1023;" ], [ "EXACT", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXACT = TrieParser.parseTrie(\"a&0&0trk9--nx?27qjf--nx?e9ebgn--nx?nbb0c7abgm--nx??12oa08--nx?2&eyh3la2ckx--nx?qbd9--nx??3&2wqq1--nx?60a0y8--nx??4x1d77xrck--nx?6&1f4a3abgm--nx?2yqyn--nx?3np8lv81qo3--nx?5b06t--nx?lbgw--nx??883xnn--nx?9d2c24--nx?a&a?it??b!.&asnu?gro?ibnu?lim?moc?oc?sr?t&en?opsgolb,?ude?vog??abila?c?ihsot?m?n??c!.&b&a?m?n??c&b?g?q??ep?fn?k&s?y??ln?no?oc,sn?t&n?opsgolb,?un??i&ma?nofelet?r&emarp?fa??sroc??naiva?s??d&ats?n&eit?oh??om?sa?tl??eg?f&c?ob??g!emo?naripi?oy??h&od?skihs??i&cnal?dem?hs?k!on??repx?sa??jnin?k&aso?dov?ede?usto??l!.&c,gro?moc?ofni?rep?t&en?ni??ude?vog??le&nisiuc?rbmuder???m!.&ca?gro?oc?sserp?ten?vog??ahokoy?e00sf7vqn--nx?m??n!.&ac?cc?eman?gro?ibom?loohcs?moc?ni?o&c?fni?rp??r&d?o??s&u?w??vt?xm??av?is?olecrab?tea??p!.&bog?ca?d&em?ls??g&ni?ro??mo&c?n??oba?ten?ude??g7hyabgm--nx?ra!.&461e?6pi?iru?nru?rdda-ni?siri????q!.&eman?gro?hcs?lim?moc?t&en?opsgolb,?ude?vog???r&az?emac?f4a3abgm--nx?n!d5uhf8le58r4w--nx??u&kas?tan???s!.&bup?dem?gro?hcs?moc?ten?ude?vog??ac?iv??t&elhta?led?oyot?siv??u!.&a&cinniv?emirc?i&hzhziropaz?stynniv??s&edo?sedo??tlay?vatlop??bs?cinimod?d&argovorik?o!roghzu???e&hzhziropaz?nvir?t??fi?g&l?ro??hk?i&stvinrehc?ykstynlemhk??k&c?m?s&nagul?t&enod?ul??v&iknarf-onavi?orteporp&end?ind?????l&iponret?opotsa&bes?ves??p??m&k?oc?s?yrk??n&c?d?i?osrehk?v?ylov??o&c,nvor??p&d?p,z??r&c?imotihz?k?ymotyhz??sk?t&en?l?z??ude?v&c?e&alokin?ik??i&alokym?hinrehc?krahk?vl?yk??k?l?o&g!inrehc??krahk??r??y&ikstinlemhk?mus?s&akrehc?sakrehc?tvonrehc???z&ib,u????v!aj?bb?et?iv??waniko?x&a?iacal??yogan?z&.&acirga?bew?ca?gro?l&im?oohcs??m&on?t??o&c!.topsgolb,?gn??radnorg?sin?t&en?la??ude?vog?wal??zip???b&00ave5a9iabgm--nx?1&25qhx--nx?68quv--nx?e2kc1--nx??2xtbgm--nx?3&b2kcc--nx?jca1d--nx??4&6&1rfz--nx?qif--nx??96rzc--nx??7w9u16qlj--nx?88uvor--nx?a&0dc4xbgm--nx?c?her?t??b!.&erots?gro?moc?o&c?fni??ten?ude?v&og?t??zib??a??c&j?s??d&hesa08--nx?mi??ec?g?l!.&gro?moc?ten?ude?vog??m??opbf9bbgm--nx?s!.&gro?moc?ten?ude?vog???tc-retarebsnegmrev--nx?u&hrats?lc!smas??p??wp-gnutarebsnegmrev--nx??c&1&1q54--nx?hbgw--nx??2e9c2czf--nx?4&4ub1km--nx?byj9q--nx?erd5a9b1kcb--nx??779tbp--nx?84xx2g--nx?9jr&b&2h--nx?54--nx?9s--nx??ceg--nx??a!.&gro?lim?moc?ten?ude?vog??3a09--nx!.&ca1o--nx?gva1c--nx?h&ca1o--nx?za09--nx??ta1d--nx?ua08--nx???da??b&a?b?ci?f76a0c7ylqbgm--nx?sh??c!.&gnipparcs,revres-emag,s&otohpym,seccaptf,??0atf7b45--nx?a1l--nx??e!.&21k?bog?dem?gro?lim?moc?nif?o&fni?rp??ten?ude?vog??beuq?n?smoc?tnamys??fdh?i&gam&acirfa?isnazm??lbuperananab?n&agro?ilc?osanap??tic??l!.&gro?moc?oc?ten?ude?vog??j??m!.&mt?ossa??p1akcq--nx??n!.ossa?albtnom?p??ptm?relcel?s!.&gro?moc?ten?ude?vog??c??t!h?s?w??v!.&gro?lim?moc?ten?ude?vog??q??wi?yn??d&2urzc--nx?3&1wrpk--nx?c&4b11--nx?9jrcpf--nx???5xq55--nx?75yrpk--nx?9ctdvkce--nx?a!.mon?d?er?olnwod??b2babgm--nx?c!.vog?g9a2g2b0ae0chclc--nx?m??e&m!bulc??r!k??sopxe?timil?w??fc?g?h&d3tbgm--nx?t??i!.&ased?bew?ca?hcs?lim?o&c!.topsgolb,?g??ro?ten?ym?zib??ar?b?ordna?p?rdam??l&iub?og?row??m!.topsgolb,?n&a&b?l!raas???ob?uf??orp?r&ac&tiderc?yalcrab??ef506w4b--nx?k?of??s!.&dem?gro?moc?ofni?ten?ude?v&og?t???m??t!.topsgolb,l??uolc?za5cbgn--nx??e&1&53wlf--nx?7a1hbbgm--nx??2a6a1b6b1i--nx?418txh--nx?707b0e3--nx?a!.&ca?gro?hcs?lim?oc?t&en?opsgolb,?vog???b!.&ca?topsgolb,?ortal?ut!uoy???c&a&lp?ps!artxe??sla??i!ffo?ohcitlum??n&a&d?iler?nif?rus&e?ni!efil?srelevart????eics??rofria??d!.&edaregtmueart,keegnietsi,moc,n&esgnutiel,iemtsi,?topsgolb,zten&mitbel,sadtretteuf,??a&lg?rt??i&s&doow?ruoyno??ug?wnoitan??nil?on--nx??e!.&bil?dem?eif?gro?irp?kiir?moc!.topsgolb,?pia?ude?vog??ei?ffoc?gg?rged??f&a&c?s??il!tem???g!.&gro?lim?moc?t&en?vp??ude?vog??a&f?gtrom?p?rots?yov??dod?elloc?na&hcxe?ro??roeg?ug??i!.&topsgolb,vog??v&bba?om???j!.&gro?oc?ten???k&.oc.topsgolb,i&b?l?n???l&a&dmrif?s!rof???b&a?i&b?dua???c&aro?ric??dnik?g!oog??ims?l&asal?e&rauqa?utum???ppa?uhcs?yts!efil???m!.&ca?gro?oc?sti?ten?ude?v&irp?og???a&g?n!.&reh.togrof,sih.togrof,???em?i&rp?twohs??o&cnal?htathgir?rhc??w??n!goloc?i&lno?w??o!latipac?ts&der?e&gdirb?rif???z??ruoblem??o&lhc?m??p!.&bog?gro?lim?mo&c?n??t&en?opsgolb,?ude??irg?yks??r!.&mo&c?n??ossa?topsgolb,?a&c!htlaeh??wtfos??bc?eh?if?ots?taeht?u&sni?t&inruf?necca??za???s!.&a?b!ibnal?rofmok??c!a??d!b?n&arb?ubroflanummok???e?f?g!ro??h!f??i!trap??k!shf??l?m!oc,t??n!mygskurbrutan??o?p!p??r?s!serp??t!opsgolb,?u?vhf?w?x!uvmok??y?z??a&el?hc??ier?nesemoh?roh?uoh??t&a&d?ts&e?lla???is!bew??ov?ra?t&ioled?ol??utitsni??u&lb?qituob??v!.&21e?b&ew?og??ce&r?t??erots?gro?lim?m&oc?rif??o&c?fni??stra?t&en?ni??ude?vog??as?i&l?rd?ssergorp?tca??ol??w&kct--nx?r??xul??f&0f3rkcg--nx?198xim--nx?280xim--nx?617upk--nx?7vqn--nx?a!.&gro?moc?ten?ude?vog???b!.vog?wa9bgm--nx??c!.topsgolb,a1p--nx?ns??e&a1j--nx?hcderepmap??fo?g?iam?l&a1d--nx?og??n!.&bew?cer?erots?m&oc?rif??ofni?re&hto?p??stra?ten???orp?p!.&gro?moc?ude???rus?t!w??w??g&2&4wq55--nx?8zrf6--nx??3&44sd3--nx?91w6j--nx??455ses--nx?5&7vtse--nx?mzt5--nx??69vqhr--nx?7&8a4d5a4prebgm--nx?rb2c--nx??a!.&gro?mo&c?n??oc?ten??vd??b!.&0?1?2?3?4?5?6?7?8?9?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t!opsgolb,?u?v?w?x?y?z???c!b?za9a0cbgm--nx??e!.&eman?gro?ics?lim?moc!.topsgolb,?nue?ten?ude?vog??a??g!.&gro?oc?ten???i&a?v??k!.&gro?lim?moc?ten?ude?vog???m!.&drp?gro?lim?m&o&c?n??t??oc?ude?vog??pk??n!.&eman?gro?hcs?ibom?lim?moc!.topsgolb,?ten?ude?vog??aw?i!b!mulp??car?d&art?dew??h&sif?tolc??k&iv?oo&b?c???ls?n&aelc?iart??p?re&enigne?tac??t&ad?ekram?hgil?lusnoc?neg?ov?soh?tebdaerps??vi&g?l???o!s??u&rehcisrev?smas?tarebsnegömrev???o&d?lb?og??r&ebmoolb?o!.&77ndc.c:sr,,az,d&ab-yrev-si,e&sufnocsim,vas-si,?nuof-si,oog-yrev-si,?e&a,cin-yrev-si,las-4-ffuts,m&-morf,agevres,ohruoyslles,?nozdop,r&ehwongniogyldlob,uces-77ndc.nigiro.lss,?t&adidnac-a-si,is&-ybboh,golb,???fehc-a-si,golbymdaer,k&eeg-a&-si,si,?h,?live-yrev-si,naf&s&citlec-a-si,niurb-a-si,tap-a-si,?xos-a-si,?ojodsnd,p&ifles,ohbew,tfe&moh,vres,??resu-xunil-a-si,s&aila&nyd,snd,?bbevres,nd&emoh,golb,kcud,mood,nyd:.&emoh,og,?,rvd,tog,?sa-skcik,tnemhcattaomb,u,?t&e&ews-yrev-si,nretni&ehtfodne,fodne,??hgink-a-si,s&ixetn&od,seod,?o&h-emag,l-si,???ue:.&a&-q,c,?cm,dc,e&b,d,e,i,m,s,?g&b,n,?hc,i&f,s,?k&d,m,s,u,?l&a,i,n,p,?n&c,i,?o&n,r,ssa,?pj,r&f,g,h,k,t,?s&e,i:rap,,u,?t&a,en,i,l,m,ni,p,?u&a,de,h,l,r,?vl,y&c,m,?z&c,n,??,x&inuemoh,unilemoh,???ub&mah?oj???s!.&gro?moc?rep?t&en?opsgolb,?ude?vog???t?u!.&c&a?s??en?gro?moc?o&c?g??ro?topsgolb,??v!a1c--nx??w&d?sa08--nx???h&0ee5a3ld2ckx--nx?4wc3o--nx?8&8yvfe--nx?a7maabgm--nx??b!.&gro?moc?ten?ude?vog???c!.topsgolb,aoc?et?ir!euz??r&aeserrecnac?uhc??sob?taw!s???d0sbgp--nx?f&2lpbgm--nx?k??g!.&gro?lim?moc?ude?vog???m!a1j--nx??ocir?p!.&gro?i?lim?moc?ogn?ten?ude?vog???s!.&gro?lim?moc?ten?vog??a&c?nom??i&d?f?ri???t!.&ca?im?ni?o&c?g??ro?ten??dimslf?iaf?laeh?orxer?ra&ba?e???vo?zb??i&3tupk--nx?7a0oi--nx?a!.&ffo?gro?moc?ten??1p--nx?bud?dnuyh?renap?tnihc??b!.&gro?moc?oc?ro?ude??ahduba?o!m??s??c!.&ayb-tropora--nx?ca?d&e?m??esserp?gro?moc?o&c?g?ssa??ro?t&en?ni?roporéa??ude?vuog??cug?t??d&dk?ua??e&bhf--nx?piat??f!.&dnala?iki,topsgolb,?onas??g!.&d&om?tl??gro?moc?ude?vog???h&c&atih?ra??s&abodoy?ibustim???juohs?k!.&gro?moc?ofni?ten?ude?vog?zib??b4gc--nx?iw?nisleh?s?uzus??l!.topsgolb,drahcir?iamsi??maim?n&airpic?i&hgrobmal?m??re??om?rarref?s!.topsgolb,ed??t&aresam?i&c?nifni??rahb?tagub??ut?v!.&21k?gro?moc?oc?ten???wik?xa&rp?t??yf??j&6pqgza9iabgm--nx?8da1tabbgl--nx?9fl84qg4--nx?b!.&ossa?topsgolb,uaerrab?vuog???d?nj?s?t!.&bew?c&a?in??eman?gro?lim?moc?o&c?g??t&en?ni?set??ude?vog?zib????k&8uxp3--nx?924tcf--nx?arfel?c&a&bdeef?lb??ebdnul?ilc?reme?ud??d!.topsgolb,t??e&es?samet??h!.&a&4ya0cu--nx?5wqmg--nx??b3qa0do--nx?cni,d&2&2svcw--nx?3rvcl--nx??5xq55--nx?tl,?g&a0nt--nx?la0do--nx?ro??i&050qmg--nx?7a0oi--nx?xa0km--nx??m&1qtxm--nx?oc??npqic--nx?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??xva0fz--nx?人&个?個?箇??司公?府政?絡&網?网??織&組?组??织&組?组??络&網?网??育&敎?教???n??i&tsob?vdnas??l!.&bew?c&a?os??dtl?gro?hcs?letoh?moc?nssa?ogn?prg?t&en?ni??ude?vog??at?cd?is??m!.&eman?fni?gro?moc?t&en?opsgolb,?ude?vog???n&ab!cfdh?etats?mmoc?reve?t&en?fos???i!l?p???p!.&b&ew?og??gro?kog?m&af?oc??nog?ofni?pog?sog?ten?ude?vog?zib???row!ten!doof???s!.topsgolb,?t?u!.&c&a?lp??dtl?e&cilop?m??gro?oc!.topsgolb,?shn?ten?vog!.ecivres,????l&04sr4w--nx?a!.&gro?lim?moc?t&en?opsgolb,?ude?vog??bolg?c?ed?g!el??i&c&nanif!lpl??os??romem?tnedurp??n&if?oitanretni??t&i&gid?pac??ned?ot??utum!nretsewhtron???c!.&bog?lim?oc?topsgolb,vog???dil?e&datic?geips?n&ahc?nahc!gnikooc?levart?rehtaew???t!ni?ria?tam??vart??f&8f&pbgo--nx?tbgm--nx??a?n??g!.&gro?moc?oc?ten?ude???h&d?op??i&.oc.topsgolb,a&f?m&e?g?toh???m?otats?r?xil??l&a&btoof?c?mt??e&d?hs?wyenoh??ihmailliw?j??m!.&esserp?gro?moc?ten?ude?v&og?uog????n!.&oc,topsgolb,vb??b?o??o&btuf?l?o&c?hcs??rit?u??p!.&a&cin&diws?gel??d&g,ortso?urawon??i&dem?mraw?nydg,?k&elo&guld?rtso??slopolam?tsu?ytsyrut??l&ip?o&kzs?w&-awolats?oksnok????nimg?rog&-ai&bab?nelej??j?z??syn?tsaim?w&a&l&eib?i?o??zsraw??onamil??z&eiwolaib?mol???c&e&iw&alselob?o&nsos?rtso???le&im?zrogz???orw,p??d&em,ia?ragrats??e&c&i&lrog?w&ilg,o&hc&arats?orp??klop?tak????yzreibok??i&csjuoniws?ksromop?saldop??l&ahdop?opo??napokaz,tatselaer?z&romop?swozam???g&alble?ezrbo&lok?nrat??ro??hcyzrblaw?i&csomohcurein?grat?klawus??k&e&rut?walcolw??inbyr?le?o&nas?tsylaib??rob&el?lam??s&als?jazel?nadg,puls?rowezrp???l&colw?e&r?vart??i&am?m???m&o&c?dar?n?tyb??s&g?iruot??t!a???n&a&gaz?nzop,?i&bul?cezczs?molow?nok?zd&eb?obeiws???uleiw?y&tzslo?z&rtek?seic????o&c,fni?k&celo?zdolk??lkan?n&leim?pek?t&uk?yzczs??z&copo?eing?rowaj???rga?tua?w&ejarg?ogarm???p&elks?klwwortso?ohs??romophcaz?sos?t&aiwop?en?opos,ra,sezc??ude?v&irp?og!.&a&p?s!w???bni&p?w??ci?dtiw?essp?fiw?g&imu?u??hiiw?m&igu?rio?u!o???nds?o&ks?p!pu??s?wtsorats??p&a?sp!mk?pk?wk??u&m?p??wk?z??r&ksw?s??s&i?oiw?u?zu??talusnok?w&gzr?i&p?rg?w??m?opu?u!imzw???zouw????w&a&l&corw?sizdow??w??o&golg?k&ark,ul?zsurp??r&az?gew??tsugua?z&coks?sezr????xes?y&buzsak?d&azczseib?ikseb??hcyt?n&jes?lod-zreimizak??pal?r&ogt?uzam??walup?zutrak??z&am-awar?c&aprak?iwol?zsogdyb??dalezc?ib?s&i&lak?p??uklo????l??r&as?f?s??s!.&gro?moc?ten?ude?vog???t!.vog??ubnatsi?x3b689qq6--nx??m&00tsb3--nx?1qtxm--nx?981rvj--nx?a!.topsgolb,cbew?dretsma?et?fma?rirhs?xq--nx??b!.&gro?moc?ten?ude?vog??i??c!.&moc?oc?ten?vog???d!.&gro?moc?ten?ude?vog???f!i??g!vu96d8syzf--nx??h?i!.&ca?gro?moc?oc!.&clp?dtl???t&en?t??vt??k?rbg4--nx??k!.&drp?e&rianiretev?sserp??gro?lim?m&o&c?n??t??nicedem?ossa?pooc?s&eriaton?neicamrahp?sa??ude?v&og?uog????l&if?ohkcots??o!.&dem?gro?m&oc?uesum??o&c?rp??ten?ude?vog??b?c!.&2aq,a&c&-morf,irfa,?g&-morf,oy-sehcaet,?i-morf,m&-morf,all&-a-si,amai,??p&-morf,c-a-si,?s,v-morf,w-morf,z,?b&ew-sndnyd,g,uhnnylf,?c&d-morf,n-morf,q,s-morf,?d&e&ifitrec-&si,ton-si,?llortnocduolc,?i-morf,m-morf,n&-morf,abeht-htiw-si,?s-morf,uolc&hr,smetsystuo,??e&ciffo-sndnyd,d:-morf,ocelgoog,,erf-sndnyd,i&hcet-a-si,p-sekil,?lgooghtiw,m&ina-otni-si,oh-&sndnyd,ta-sndnyd,??n&-morf,og-si,?rihcec,s:run-a-si,,t&i&nuarepo,s&-ybboh,aloy,??omer-sndnyd,?v&als-elcibuc-a-si,itavresnoc-a-si,??fehc-a-si,golb&-sndnyd,sihtsetirw,?h&n-morf,o-morf,?i&h-morf,kiw-sndnyd,m-morf,r-morf,w-morf,?jn-morf,k&a-morf,cils-si,eeg-a&-si,si,?h,latsnaebcitsale,o-morf,row-&sndnyd,ta-sndnyd,?u,?l&a&-morf,rebil-a-si,?f-morf,i&-morf,am-sndnyd,?ru-&elpmis,taen,?ssukoreh,?mn-morf,n&a&cilbuper-a-si,f&-sllub-a-si,racsan-a-si,?i&cisum-a-si,ratrebil-a-si,??c,eerg-a-si,i-morf,m-morf,o&isam-al-a-tse,rtap-el-tse,siam-al-a-tse,?pj,t-morf,?o&c,jodsnd,m-morf,n,r,?p&i&-sndnyd,fles,ymteg,?pa&anis:piv,,esaberif,k1,lortnocduolc,ukoreh,??r&a:-morf,tskcor-a-si,,b,e&enigne-na-si,ggolb-a-si,h&caet-a-si,pargotohp-a-si,?krow-drah-a-si,n&gised-a-si,ia&rtlanosrep-a-si,tretne-na-si,??p&acsdnal-a-si,eekkoob-a-si,?retac-a-si,tn&iap-a-si,uh-a-si,?vres-sndnyd,y&alp-a-si,wal-a-si,?zilibomdeepsegap,?g,k,o&-morf,sivdalaicnanif-a-si,tc&a-na-si,od-a-si,??p-morf,u&as-o-nyd,eugolb-nom-tse,??s&aila&nyd,snd,?bbevres,cip-sndnyd,e&lahw-eht-sevas,mag-otni-si,?ipaelgoog,k-morf,m-morf,n&d&golb,mood,tog,?ootrac-otni-si,?r&ac-otni-si,etsohmaerd,?se&l-rof-slles,rtca-na-si,?u,wanozama.&1-&etupmoc:.&1-z,2-z,?,la&nretxe-3s,rtnec-ue&-3s,.3s,??ts&ae&-&as-3s,su,?ht&ron-pa-3s,uos-pa-3s,??ew-&su-3s,ue-3s,vog-su-&3s,spif-3s,????2-&lanretxe-3s,ts&aehtuos-pa-3s,ew-su-3s,??3s,ble,etupmoc:.&1-&lartnec-ue,ts&ae&-as,ht&ron-pa,uos-pa,??ew-&su,ue,vog-su,???2-ts&aehtuos-pa,ew-su,??,??t&arcomed-a-si,c-morf,eel&-si,rebu-si,?m-morf,n&atnuocca-na-si,e&duts-a-si,r-ot-ecaps,tnocresubuhtig,??ops&edoc,golb,ppa,?s&i&hcrana-&a-si,na-si,?laicos-a-si,pareht-a-si,tra-na-si,xetn&od,seod,??ohsfn,?u&-morf,nyekcoh-asi,?v-morf,?u&-rof-slles,4,e,h,oynahtretramssi,r:ug-a-si,,?v&n-morf,w-morf,?x&em,inuemoh,obaniateb,t-morf,unilemoh,?y&dnacsekil,k-morf,u,w-morf,???m?or?tsla??p?raf!etats??s?t!.&gro?lim?mo&c?n??oc?ten?ude?vog???u&esum!.&a&92chg-seacinumocelet-e-soierroc--nx?atnav?c&i&aduj?rfatsae??rollam??d&anac?enomaledasac?irolf??e&raaihpledalihp?srednu??g&hannavas?oonattahc??hamo?i&auhsu?bmuloc!hsitirb??dem?groeg?hpledalihp?l&artsua?etalif??n&igriv?rofilac??ssur?tsonod??ksa&la?rben??l&lojal?q-snl--nx?uossim!trof???m&a&bala?nap??enic?o&m?r???n&a&cirema?idni??edasap?ilorachtuos?olecrab??r&abrabatnas?ezzivs??su?t&nalta?osennim??zalp??c&dnotgnihsaw?ebeuq?i&depolcycne?ficap?hpargonaeco?lbup?sum?t&carporihc?lec?naltadim??vu??yn??d&a&dhgab?etsmraf?m?orliar??i&rdam?ulegnedleeb??leif?n&a!l&gne?nif?ragyduj?t&ocs?rop??yram???u&brofsdgybmeh?osdnaegami???r&augria?ofxo???e&c&a&l&ap?phtrib??ps??n&a&lubma?tsiser??e&fedlatsaoc?gilletni?ics!foyrotsih????pein?rof??d&nukneklov?revasem??e&rt?tsurt??f&atnas?ildliw??g&a&lliv?tireh!lanoitan???dirbmac?rog??i&cnum?nollaw??koorbrehs?l&ab?bib?cycrotom?i&ssim?txet??oks?tsac??m&affollah?it!iram??utsoc??n&golos?ilno?recul??r&a&uqs?waled!foetats???i&hs&acnal?kroy?pmahwen??otsih??omitlab?ut&an?cetihcra?inruf?luc!irga?su???vuol??s&abatad?iacnarf?sius?uoh!lum???t&a&locohc?rak?ts!e!yrtnuoc!su?????imesoy?tevroc??u&qihpargonaeco?velleb??vit&caretni?omotua???f&iuj?ohgrub??g&n&i&dliub?ginerevmuesum?kiv?lahw?nim?peekemit?vil??ulmmastsnuk??orf?r&eb&merun?nr&ats?eun???u&b&ierf?le?m&ah?uan??ram?s&mailliw!lainoloc??naitsirhc?retepts??zlas??ob&irf?mexul?????h&atu?c&raeser?sirotsih?uot??g&ea1h--nx?rubsttip??si&tirb?wej??t&laeh?ro&n?wtrof??uo&mnom?y????i&d6glbhbd9--nx?iawah?k&nisleh?s??lad!rodavlas??sissa?tannicnic??k&c&nivleeg?olc!-dna-hctaw?dnahctaw???fj?inebis?l&is?ofron??na&rfenna?t??oorbnarc?r&am&ned?reiets??oy!wen????l&a&ci&dem?golo&eahcra?meg?oz??natob?rotsih??ertnom?iromem?noita&cude?n??oc?rutluc?trop?utriv?van??e&nurb?s&ab?surb??utriv??i&artnogero?sarb??l&a&besab?hsnoegrus??e&hs?rdnevle??i&b?m!dniw????o&bup?ohcs?tsirb???m&a&dretsma?ets?h&netlehc?rud???ct?elas!urej??l&if?ohkcots?u??raf?silanruoj?u&esumyrotsihlarutan?ira&tenalp?uqa??terobra???n&a&c!irema!evitan???gihcim?i&dni?tpyge??mfoelsi?wehctaksas??e&d&alokohcs?ews?rag!cinatob?lacinatob?s&nerdlihc?u????gahnepoc?hcneum?laftsew?ppahcsnetewruutan?r&dlihc?ednaalv?hu!dnutamieh???sseig??gised!dn&atra?utsnuk???h&ab!nesie??ojts??i&lreb?tsua??l&eok?ocnil??n&ob?urbneohcs??o&dnol?gero?i&s&iv&dnadnuos?elet??nam??t&a&c&inummoc?ude!tra???dnuof?erc?i&cossa?va??kinummokelet?nissassa?r&belectsevrah?oproc?tsulli??silivic?t&nalp?s??vres&erp?noclatnemnorivne??zilivic??c&elloc?if-ecneics??ibihxe???ri?s&dnah?imaj?reffej?sral??t&erbepac?nilc?sob???r&e&b?dom?tsew?uab?zul??obredap??vahnebeok?wot??o&2a6v-seacinumoc--nx?ablib?c&edtra?ixemwen?sicnarfnas??elap?g&a&cihc?to??eidnas??i&cadnuf?diserp?ratno??llecitnom?mitiram?nirot?r&htna?ienajedoir???pohskrow?qari?r&aw!dloc?livic??dd?e&b&ma?yc??irrac?llimsiwel?naksiznarf?papswen?t&aeht?exe?nec!ecneics?larutluc?muesum?tra??s&ehc&nam?or??neum??upmoc???ia!nepo??obal?u&asonid?obal?takirak???s&a&l&g?l&ad?eh???xet??di&k?pardnarg??e&cneics!larutan??dnal?hcsi&deuj?rotsih!nizidem?rutan??selhcs??itinamuh?l&aw?egnasol?l&e&rutansecneics?xurb??iasrev???r&e&em?ugif??tsac??suohcirotsih?u&en?q&adac?itna!nacirema?su????õçacinumoc!elet-e-soierroc???gnirpsmlap?htab?i&lopanaidni?rap?uoltnias?xa??l&essurb?lod??mraeriflanoitan?n&a&blats?l??erdlihc?oi&snam?tacinummoc!elet-dna-stsop???äl??re&dnalf?lttes?mraf?nim?tnececneics??s&alg?erp??t&farc!dnastra??nalp?olip?ra!e&nif?vitaroced!su???su?xuaeb???u&b!muloc??cric???t&agilltrop?cejorp?dats?e&esum?kramnaidni??iorted?ne&m&elttes?norivne?piuqemraf??vnoc??oped?r&a!drib?enif?gttuts?hsiwej?kcor?n&acirema?ootrac??tamsa?yraropmetnoc??op&aes?snart?wen??ufknarf??s&a&cdaorb?octsae??ewhtuos?ilayol?nuk?r&ohnemled?uhlyram??urt???u&a&bgreb?etalpodaroloc??rmyc??w&ocsom?rn??x&esse?ineohp?nam?tas??y&a&bekaepasehc?w&etag?liar???camrahp?doc?e&hsub?l&ekreb?l&av!eniwydnarb??ort???n&dys?om??rrus?s&nreug?rejwen???golo&e&ahcra?g??motne?nh&cet?te??oz?po&rhtna?t??roh??hpargotohp?l&etalihp?imaf??m&edaca?onortsa??n&atob?yn??ps?r&a&ropmetnoc?tilim??e&diorbme?llag!tra??vocsid??lewej?nosameerf?otsih!dnaecneics?ecneics?gnivil!su??la&col?rutan??retupmoc?su??tsudnidnaecneics??spelipe?t&eicos!lacirotsih??i&nummoc?srevinu??nuoc???z&arg?iewhcs?nil?ojadab?urcatnas??моки?םילשורי???rof???n&315rmi--nx?a!.&gro?moc?ten?ude??brud?cilbuper?f?grompj?hkaga?idraug!eht??m!raw??ol?s&ood?sin??u&hix?qna??varac?yalo??bc?c!.&ah?bh?c&a?s??d&5xq55--nx?g?s??eh?g&la0do--nx?ro??h&a?q?s??i&7a0oi--nx?h??j&b?f?t?x?z??kh?l&h?im?j??m&n?oc!.swanozama.1-htron-nc.3s,??n&h?l?s?y??om?qc?s&g?j?wanozama.etupmoc:.1-htron-nc,,?ten?ude?vog?wt?x&g?j?n?s??z&g?x??司公?絡網?络网??b??d&g?ka??e&drag?erg?fuak?gawsklov?hctik?i&libommi?w??m?po?r!ednaalv??sier?ves??g!.&ca?gro?moc?ten?ude?vog??ised??h!.&bog?gro?lim?moc?ten?ude???i!.&c&a?in??dni?gro?lim?mrif?neg?oc?ser?t&en?opsgolb,?ude?vog??elknivlac?griv?ks?lreb?p!ul??v?w?x??k!.&gro?ten?ude?vog???l&eok?ocnil??m!.&cyn,gro?ude?vog???o&dnol?i&hsaf?nutiderc?siv!orue??t&a&cude?dnuof?tsyalp??c&etorp?u&a?rtsnoc?????kin?las?mrom?nac?p&q?uoc??s&ia&il?m??nhojcs?pe?reme?scire??tron??p!.&gro?oc?ten?ude?vog??k??r&e&c?yab??op??s!.&gro?moc?osrep?t&opsgolb,ra??ude?v&inu?uog????t!.&dni?esnefed?gro?ltni?m&oc!nim??siruot??n&erut?if??o&fni?srep??sn&e?r??t&an?en!irga?ude??rnr??unr?vog??m??u&r?stad?xamay?y??v!.&ca?eman?gro?htlaeh?moc?o&fni?rp??t&en?ni?opsgolb,?ude?vog?zib???wo&rc?t!epac????o&76i4orfy--nx?a!.&bp?de?go?oc?ti?vg??boat??b!.&bog?gro?lim?moc?t&en?ni??ude?v&og?t???h?iew?olg??c!.&bew?cer?gro?lim?m&o&c!.topsgolb,?n??rif??ofni?stra?t&en?ni??ude?vog??a?in?mara?nalb?s&edarb?ic???d!.&b&ew?og??dls?gro?lim?moc?t&en?ra??ude?vog??agoba?if?zd7acbgm--nx??e&c?d&iv?or??m!orafla???f!ni!.&e&gdelwonk-fo-l&errab,lerrab,?ht-skorg,rom-rof-ereh,?llatiswonk,p&ifles,ohbew,?ruo-rof,s&iht-skorg,ndnyd,????g&el?ia?n!am?ib???hwsohw?i!.&buhtig,din,moc?stacdnas,?b?du&a?ts??j?r?syhp??j!.&eman?gro?hcs?lim?moc?ten?ude?vog???ll&ag?o??m!.&gro?moc?ten?ude?vog??g?il?mi?orp??n!.&a&0&b-ekhgnark--nx?c-iehsrgev--nx?g-lksedlig--nx?k-negnanvk--nx??1&p-nedragy--nx?q-&asierrs--nx?grebsnt--nx?lado-rs--nx?n&egnidl--nx?orf-rs--nx??regnayh--nx?ssofenh--nx??r-datsgrt--nx?s-ladrjts--nx?v-y&senner--nx?vrejks--nx???3g-datsobegh--nx?4&5-&dnaleprj--nx?goksnerl--nx?tednalyh--nx??6-neladnjm--nx?s-&antouvachb--nx?impouvtalm--nx??y-&agrjnevvad--nx?ikhvlaraeb--nx???7k-antouvacchb--nx?8&k-rekie-erv--nx?l-ladrua-rs--nx?m-darehsdrk--nx??a!.sg??bct-eimeuvejsemn--nx?d&do?iisevvad?lov?narts?uas??f&1-&l--nx?s--nx??2-h--nx??g&10aq0-ineve--nx?av?ev?lot?r&ajn&evvad?u??ájn&evvad?u????h?iz-lf--nx?j&ddadab?sel??k&el?hoj&sarak?šárák??iiv&ag&na&el?g??ŋ&ael?ág???ran???l&f?lahrevo?o&ms?s??sennev?t-&ilm--nx?tom--nx??u&-edr--nx?s??øms??muar?n&0-tsr--nx?2-dob--nx?5-&asir--nx?tals--nx??a&r!-i-om?f?t??t??douvsatvid?kiv?m&os?øs??n&od?ød??ra?sen?t&aouvatheig?ouv&a&c&ch&ab?áb??h&ab?áb???n??i&ag?ág??sa&mo?ttvid??án???z-rey--nx?ær&f?t???o&p-&ladr--nx?sens--nx??q-nagv--nx?r-asns--nx?s-kjks--nx?v-murb--nx?w-&anr&f--nx?t--nx??ublk--nx???ppol?q&0-t&baol--nx?soum--nx?veib--nx??x-&ipphl--nx?r&embh--nx?imph--nx???y-tinks--nx??r&f-atsr--nx?g-&an&ms--nx?nd--nx??e&drf--nx?ngs--nx??murs--nx?netl--nx?olmb--nx?sorr--nx??h-&a&lms--nx?yrf--nx??emjt--nx??i&-&lboh--nx?rsir--nx?y&d&ar--nx?na--nx??ksa--nx?lem--nx?r&ul--nx?yd--nx????stu??j-&drav--nx?rolf--nx?sdav--nx??kua?l-&drojf--nx?lares--nx??m-tlohr--nx?n-esans--nx?olf?p-sdnil--nx?s-ladrl--nx?tih?v-rvsyt--nx??s&a&ns?ons??i&ar?er&dron?r&os?øs???ár??la&g?h??mor!t??sir?uf?åns??t&koulo&nka?ŋká??la?p-raddjb--nx?r-agrjnu--nx?s&aefr&ammah?ámmáh??orf?r&o?ø???u-vreiks--nx??u&h-dnusel--nx?i-&drojfk--nx?vleslm--nx??j-ekerom--nx?k-rekrem--nx?u-&dnalr--nx?goksr--nx?sensk--nx??v-nekyr--nx?w-&k&abrd--nx?ivjg--nx??oryso--nx??y-y&dnas--nx?mrak--nx?n&art--nx?nif--nx??reva--nx??z-smort--nx??v!.sg?ledatskork?reiks??wh-antouvn--nx?x&9-dlofts--nx.aoq-relv--nx?d-nmaherk--nx?f-dnalnks--nx?h-neltloh--nx?i-drgeppo--nx?j-gve&gnal--nx?lreb--nx??m-negnilr--nx?n-drojfvk--nx??y&7-ujdaehal--nx?8-antouvig--nx?b-&dlofrs--nx?goksmr--nx?kivryr--nx?retslj--nx??e-nejsom--nx?f-y&krajb--nx?re&dni--nx?tso--nx??stivk--nx??g-regark--nx?orf?ørf??z9-drojfstb--nx??b&25-akiivagael--nx?53ay7-olousech--nx?a&iy-gv--nx?le-tl&b--nx?s--nx??n0-ydr--nx??c&0-dnal-erdns--nx?z-netot-erts--nx??g&g-regnarav-rs--nx?o-nejssendnas--nx??ju-erdils-ertsy--nx?nj-dnalh-goksrua--nx?q&q-ladsmor-go-erm--nx.&ari-yreh--nx?ednas??s-neslahsladrjts--nx???ca&4s-atsaefrmmh--nx?8m-dnusynnrb--nx?il-tl--nx?le-slg--nx?n5-rdib--nx?op-drgl--nx?uw-ynnrb--nx??d&a&qx-tggrv--nx?reh!nnivk?sd&ork?ørk??uas??ts&e&bi?kkar?llyh?nnan??g&ort?ørt??k&alf?irderf??levev?mirg?obeg&ah?æh??r&ah?ejg????barm-jdddb--nx?ie!rah?s&etivk?ladman???lof&r&os?øs??ts&ev.ednas?o.relav?ø.relåv???n&a&l&-erd&n&os?øs??ron??adroh.so?dron.&a&g5-b--nx?ri-yreh--nx??ob?y&oreh?øreh??øb??e&m!lejh??pr&oj?øj??vi??gyb?n&aks?åks??o&h-goksrua?rf??r&o?ua?ø??tros?øh-goksrua??rts!e&devt?lab?mloh???s&ellil?naitsirk?rof???u&l!os??s!d&im?lejt??e&guah?l&a?å???kkoh?lavk?naitsirk?r&af?eg&e?ie???tef?y&onnorb?ønnørb?????r&a&blavs!.sg??g&eppo?la???o&j&f&a!dniv?k?vk??die?e&dnas?kkelf??llins?r&iel?ots??s&lab?t&ab?åb??yt??å!k??ævk??les??ts??åg&eppo?lå???ureksub.sen??e&ayb-yrettn--nx?d&ar?lom?r&of?øf??år??g&gyr?nats??i&meuv&ejsem&aan?åån??sekaal??rjea??j&d&ef?oks??les??k&er&aom?åom??hgna&ark?årk??iregnir?kot!s??s&ig?uaf???l&bmab?kyb?l&av?ehtats??oh??m&it?ojt?øjt??n&arg?g&os?øs??meh?reil?te?ummok?yrb??r&dils-erts&ev?y&o?ø???ua?vod??sa&ans?åns??t&robraa?spaav??urg??f&62ats-ugsrop--nx?a&10-ujvrekkhr--nx?7k-tajjrv-attm--nx??o!.sg?h??s!.sg??v!.sg???g&5aly-yr&n--nx?v--nx??a&llor?ve&gnal?lreb???n&av!snellu??org??oks&die?m&or?ør??ner&ol?øl??r&o?ø???r&eb!adnar?edyps?s&die?elf?gnok?n&ot?øt????obspras??uahatsla?åve&gnal?lreb???h&0alu-ysm--nx?7&4ay8-akiivagg--nx?5ay7-atkoulok--nx??a!.sg???i&e&hsr&agev?ågev??rf??k&h&avlaraeb?ávlaraeb??s??lm&a?å??mpouvtal&am?ám??pph&al?ál??rrounaddleid?ssaneve?ššáneve??j&0aoq-ysgv--nx?94bawh-akhojrk--nx??k&a&b&ord?ørd??jks?lleis??iv!aklejps?l&am?evs?u??mag?nel?ojg?r&a&l?n??epok?iel?y&or?ør???s&ah?kel?om??øjg??kabene?ojsarak?ram&deh.&aoq-relv--nx?rel&av?åv??so??e&let.&ag5-b--nx?ob?øb??ra???åjks??l&a!d&anrus?d&numurb?ron??e&gnard?nte?s&meh?sin??ttin??g&is?nyl??kro?l&em?l&ejfttah?of??u&ag-ertdim?s???n&am?era?gos?i&b?nroh?r??kos?nus?oj??o-&dron?r&os?øs???ppo?r&a!l?nram??e&gne?l?v??is?o&jts?ts??u&a-&dron?r&os?øs???h??å?æl?øjts??s&e&jg?nivk?ryf??kav?mor-go-er&om.&ednas?yoreh??øm.&ednas?yøreh???uag??t&las?rajh?suan??v&l&a?e-rots??u-go-eron??yt??ksedlig?res&a?å???bib&eklof?seklyf??es!dah??h!.sg??i&m?syrt??l&ejf?ov&etsua?gnit?ksa?sdie???n!.sg??o!.sg?boh?g?h??r!.sg??å!ksedlig??øboh??m&a&rah?vk??f!.sg??h!.sg??i&e&h&dnort?rtsua?ssej??rkrejb??ksa??ol?t!.sg??u&dom?esum?r&ab?drejg?evle?os?uh?æb?øs??ttals???n&a&g&av?okssman?åv??jlis?or?r&g?rev???e&d&do&sen?ton??lah?r&agy&o?ø??ojfsam???g&iets?n&a&l&as?lab??n&avk?ævk??t&arg?ddosen??v&al?essov???i&d&ol?øl??l&ar?ær???yl??reb??iks?k&srot?y&or?ør???l&a&d&gnos?n&er?ojm?øjm??om??tloh??ug?åtloh??mmard?ojs&om?sendnas??ppolg?s&lahsladr&ojts?øjts??o??t&o&l?t-erts&ev?o?ø???roh?øl??vly&kkys?nav??yam-naj!.sg??øjs&om?sendnas???g&orf?ujb??i&dnaort?vnarg??kob?ladendua?maherk&a?å??n&it?urgsrop??orf-&dron?r&os?øs???r&aieb?evats??sfev?uaks?yrts??o&6axi-ygvtsev--nx?c,d&ob?rav??ievs?kssouf?l&m&ob?øb??ous&adna?ech&ac?áč???so!.sg???msdeks?niekotuak?r&egark?olf?y&oso?øso???s&dav?mort???p&ed?p&akdron?elk???r&a&d&dj&ab?áb??iab??jtif?luag?mah?vsyt??e&gn&a&k&iel?ro??merb?n&at?mas??rav-r&os?øs??srop?talf?v&ats?el??y&oh?øh???ivsgnok??il?jkniets?k&a&nvej?rem?s&gnir?nellu???ie-er&den?v&o?ø???ram?sa?årem??la&jf?vh??m&b&ah?áh??mahellil??nnul?ts&l&oj?øj??ul??y&o?ø???imp&ah?áh??m!.sg??osir?t!.sg??ádiáb?ævsyt?øsir??s&adnil?en&dnas?e&dga?k&ri&b?k??som??ve??me&h?jg??nroh-go-ejve?s&a?ednil?k&o?ø??of?yt?å??tsev??gv?hf?igaval?o&r&or?ør??sman??so&fen&oh?øh??m?v??uh&lem?sreka.sen??å!dnil???t&a&baol?g&aov?grav??jjr&av-attam?áv-attám??l&a&b?s??ás??soum?ts?v&eib?our???e&dnaly&oh?øh??f?s&nyt?rokomsdeks?sen??vtpiks??in&aks?áks??loh&ar?år??n!.sg??o&m&a?å??psgolb,?s!.sg?efremmah?or?ør??terdi?á&baol?ggráv?lá&b?s??soum?veib???u&b!.sg?alk?e&dna?gnir?nner??les?ælk??dra&b?eb??g&nasrop?vi?ŋásrop??j&daehal&a?á??jedub?v&arekkhar?árekkhár???ksiouf?n&diaegadvoug?taed???v&irp?lesl&am?åm???y&b&essen?nart?sebel?tsev??o&d&ar?na!s??or??gavtsev?k&rajb?sa??lem?mrak?n&art?n&if?orb???r&a&mah?n?v??e&dni?t&so?ton??va??ul?yd??s&am?enner?gav?lrak?tivk??vrejks??ø&d&ar?na!s??ør??gåvtsev?k&rajb?sa??lem?mrak?n&art?n&if?ørb???r&e&dni?t&so?tøn??va??ul?yd?æ&n?v???s&enner?gåv?tivk?åm??vrejks???á&slág?tlá?vreiks??å&gåv?h?jddådåb?lf??ø&d&ob?rav??r&egark?olf??s&dav?mort????aki?i&sac?tal??u??o&b?f?g?hay?o?ttat??p&as?piz??r!.&cer?erots?gro?m&o&c?n??rif?t??ofni?stra?t&n?opsgolb,?www??e&a!.&a&ac?cgd?idem??bulc!orea??ci&ffartria?taborea??e&c&alptekram?n&a&l&lievrus-ria?ubma??netniam?rusni??erefnoc???gnahcxe?mordorea?ni&gne?lria?zagam??rawtfos??gni&d&art?ilg!arap?gnah???l&dnahdnuorg?ledom??noollab?retac?sael?t&lusnoc?uhcarap??vidyks??hcraeser?ixat?l&anruoj?euf?icnuoc?ortnoc!-ciffart-ria???n&gised?oi&nu?t&a&cifitrec?ercer?gi&tsevni-tnedicca?van??i&cossa!-regnessap??valivic??redef??cudorp?neverp-tnedicca????ograc?p&ihsnoipmahc?uorg!gnikrow???r&e&dart?enigne?korb?niart?trahc??o&htua?tacude???s&citsigol?e&civres?r??krow?serp!xe??tnega??t&farcr&ia?otor??hgi&erf?l&f?orcim???liubemoh?n&atlusnoc?e&duts?m&esuma?n&iatretne?revog??piuqe????olip?ropria?si&lanruoj?tneics???w&erc?ohs??y&cnegreme?dobper?tefas????rref?z??p!.&a&ca?pc??dem?gne?r&ab?uj??wal????s!.&gro?moc?ten???t!.&gro?lim?moc?ten?ude?vog??o&hp?m?v?yk??tol?ua??viv?xas?ykot??p&a&ehc?g?s??cj?eej?g!.&gro?ibom?moc?ossa?ten?ude???i&r?v?z??j!.&a&3&5xq6f--nx?xqi0ostn--nx??5wtb6--nx?85uwuu--nx?9xtlk--nx?bihc!.&a&bihciakoy?don?ma&him?ye&ragan?tat???r&a&bom?gan?hihci??u&agedos?kas?ustak???s&os?ufomihs??t&amihcay?iran??w&a&g&im&anah?o??omak??kihci?zustum??ihsak??y&agamak?imonihci???e&akas?nagot??i&azni?esohc?h&asa?s&abanuf?ohc???ka&to?zok??musi?orihs?r&akihabihsokoy?o&dim?tak??ukujuk??usihs??nano&hc?yk??o&d&iakustoy?ustam??hsonhot?k&a&rihs?t??iba??nihsaran?sobimanim?tas&arihsimao?imot??uhc?yihcay??u&kujno?s&ayaru?t&imik?tuf???zarasik????g&as!.&a&gas?m&a&tamah?yik??ihsak??rat?t&a&gatik?hatik??ira!ihsin????e&kaira?nimimak??i&akneg?g&aruyk?o??h&c&amo?uo??siorihs??kaznak?modukuf?ra&gonihsoy?mi???nezih?u&k&at?ohuok??s&ot?tarak?????ihs!.&a&kok?m&a&hagan?yirom??ihsakat??rabiam?wagoton??e&miharot?nokih??houyr?i&azaihsin?esok?kustakat?moihsagih??na&mihcahimo?nok??o&hsia?mag?t&asoyot?ok?tir???us&ay?t&asuk?o??????k&aso!.&a&d&awihsik?eki??k&a&noyot?s&akaayahihc?oihsagih???oadat?uziak??m&ayas!akaso??odak??r&a&bustam?wihsak??ediijuf??t&akarih?i&k?us???wag&ayen?odoyihsagih???e&son?tawanojihs??honim?i&akas?h&cugirom?s&ayabadnot?i&a&kat?t??n??oyimusihsagih???k&a&rabi?sim??ustakat??muzi?r&ijat?otamuk???nan&ak?n&ah?es???o&ay?n&a&ganihcawak?simuzi?tak??eba?ikibah?oyot??t&anim?iad?omamihs??uhc??ust&oimuzi?tes????ou&kuf!.&a&d&amay?eos??g&no?ok?usak??hiku?k&awayim?uzii??ma&kan?y&asih?im???rawak?t&a&gon?ka&h?num?t???umo??wa&g&a&kan?nay?t??ias??ko!rih???y&ihsa?usak???e&m&ay?uruk??taruk?us??i&a&nohs?raihcat??goruk?h&cukuf?s&a&gih?hukuy??in???k&a&gako?muzim??iust?o?ustani??m&anim?otihsoynihs?u??r&ogo?ugasas??usu??ne&siek?zu&b?kihc???o&gukihc?h&ak?ot?ukihc??j&ono?ukihc??kayim?nihsukihc?to?uhc??u&fiazad?gnihs?stoyot????zihs!.&a&bmetog?d&amihs?eijuf?ihsoy?omihs??kouzihs?mihsim?ra&biah?honikam??tawi?wa&g&ekak?ukik??kijuf??yimonijuf??i&a&ra?sok??hcamirom?juf?kaz&eamo?ustam??ma&nnak?ta??nukonuzi?orukuf??nohenawak?o&nosus?ti??u&stamamah?z&a&mun?wak??i!ay?i&hs&agih?in??manim??mihs????????m&a&tias!.&a&d&ihsoy?ot?usah??k&a&dih?sa??o&arihs?s???m&a&tias?y&as?o&rom?tah??ustamihsagih???i&hsagurust?jawak??uri??ni?wa&g&e&ko?man??ikot?o??k&ara?i&hsoy?mak???ru?zorokot??y&a&g&amuk?ihsok?otah??kuf??imo??ziin??e&bakusak?ogawak?sogo?ttas?zokoy??i&baraw?h&cugawak?s&oyim?ubustam???iroy?k&ato?ihs?u&k?stawi???m&akoyr?i&hsoy?juf??uziimak???naznar?o&dakas?ihsay?jnoh?n&a&go?nim??imijuf?nah?oy??r&ihsayim?otagan??t&asim!ak??igus?omatik??zak??u&bihcihc!ihsagih??sonuok?ynah????y&ak&aw!.&a&d&ira?notimak??kadih?ma&h&arihs?im??y&a&kaw?tik??oduk???ru&ustakihcan?y??sauy?wa&g&a&dira?zok??orih??konik??yok?zok??e&banat?dawi??i&garustak?jiat?mani??naniak?o&bog?nimik?t&asim?omihs&ah?uk????ugnihs???o!.&a&jos?koasak?m&ay&ako?ust??ihsayah??r&abi?ukawaihsin??wi&aka?nam???e&gakay?kaw??i&gan?h&cu&kasa?otes??sahakat??k&asim?ihsaruk??miin??n&anemuk?ezib??o&hsotas?jnihs?n&amat?imagak??ohs?uhcibik?????ot!.&a&damay?got?koakat?may&etat?ot??nahoj?riat?waki&inakan?reman???eb&ayo?oruk??i&h&asa?ciimak?sahanuf??kuzanu?m&an&i?ot??ih???nezuyn?otnan?u&hcuf?stimukuf?z&imi?ou???????ihs&o&gak!.&a&m&ayuok?ihsogak??si?yonak??e&banawak?n&at&akan?imanim??uka??tomoonihsin??i&adnesamustas?k&azarukam?oih??m&ama?uzi??usuy??nesi?o&knik?os?tomustam??uzimurat???rih!.&a&ka&n?s??m&ayukuf?i&hsorihihsagih?j&ate?imakikaso????r&a&bohs?h&ekat?im???es??tiak?wiad??e&kato?ruk??i&h&ci&akustah?mono?nihs??s&inares?oyim???manimasa?uk??negokikesnij?o&gnoh?namuk??uhcuf????uk&ot!.&a&bihci?mi&hsu&kot?stamok??m??wagakan??egihsustam?i&gum?h&coganas?soyim??kijaw?m&anim?uzia??ukihsihs??nan&a?iak??o&nati?turan????uf!.&a&batuf?m&a&to?y&enak?irok???ihs&im?ukuf??os?uko??r&aboihsatik?uganat??ta&katik?mawak?rih??w&a&g&akus?emas?uy??k&a&mat?rihs?sa??ihsi??nah??ohs???e&gnabuzia?iman?ta&d?tii???i&adnab?enet?hs&agih?iimagak??k&a&wi?zimuzi??ubay??minuk?r&ook?ustamay???nihsiat?o&g&etomo?ihsin?nan?omihs??no!duruf?rih??rihsawani?ta&may?simuzia???u&rahim?stamakawuzia?zia&ihsin?nay???????nug!.&a&bawak?doyihc?k&anna?oi&hsoy?juf?mot???m&ayakat?ustagaihsagih??n&ihsatak?nak??r&ahonagan?nak?o?u&kati?mamat???t&amun?inomihs?o??w&akubihs?iem?ohs???i&hsa&beam?yabetat??kas&akat?esi??m&akanim?uzio??ogamust?rodim??o&jonakan?n&eu?oyikust??tnihs??u&komnan?stasuk?yrik?????ran!.&a&bihsak?d&akatotamay?u!o???guraki?m&ay&atik&imak?omihs??irokotamay??oki??ra&hihsak?n??wa&geson?knet???e&kayim?ozamay?sog?ustim??i&a&rukas?wak??garustak?h&ciomihs?sinawak??jo?ka&mnak?toruk??makawak?nos?r&net?otakat?ugeh???o&d&na?oyo??gnas?jnihs?nihsoy!ihsagih??tomarawat?yrok????t&ag&amay!.&a&dihsio?k&atarihs?ourust??may&a&kan?rum??enak?onimak??rukho?ta&ga&may?nuf??hakat?kas??wa&g&ekas?orumam??ki&hsin?m??z&anabo?enoy?ot???zuy??e&agas?bonamay?dii?nihsagih?o??i&a&gan?nohs??h&asa?sinawak??nugo??o&dnet?jnihs?ynan??ukohak???iin!.&a&ga?k&ium?oagan??munou!imanim??t&a&bihs?giin??ioy??w&a&gioti?kikes?zuy??irak??yijo??e&kustim?mabust??i&aniat?hcamakot?kaz&awihsak?omuzi??m&a&gat?karum??o???n&anust?esog??o&das?ihcot?jnas?k&ihay?oym??mak?naga?ries??u&ories?steoj?????i&ka!.&a&go?k&asok?oimak??t&ago!rihcah??ika!atik???w&aki?oyk???e&mojog?natim?suranihsagih?t&ado?okoy???i&hsoyirom?magatak?naokimak??nesiad?o&hakin?jnoh!iruy??nuzak?rihson?tasi&juf?m??yjnoh??u&kobmes?oppah????o!.&a&dakatognub?m&asah?ihsemih??su?t&ekat?i&h?o????e&onokok?ustimak??i&jih?k&asinuk?ias?usu??mukust??onoognub?u&fuy?juk?ppeb?suk??????wa&ga&k!.&a&mihsoan?rihotok?waga&kihsagih?ya???emaguram?i&j&nonak?ustnez??kunas?monihcu??o&hsonot?nnam?yotim??u&st&amakat?odat??zatu????nak!.&a&dustam?kus&okoy?tarih??maz?nibe?r&a&gihsaimanim?h&esi?imagas??wa&do?guy???u&im?kamak???tikamay?wa&k&ia?oyik?umas??sijuf??yimonin??e&nokah?saya??i&akan?esiak?gusta?hsuz?kasagihc?o?ukust??o&nadah?sio?tamay?????kihsi!.&a&danihcu?gak?kihs?mijaw?t&abust?ikawak??wazanak??i&gurust?hcionon?mon?ukah??nasukah?o&anan?ton!akan???u&kohak?stamok?z&imana?us?????niko!.&a&han?m&arat?ijemuk?uru??n&e&dak?zi??no??ra&hihsin?rih??wa&kihsi?niko??yehi?zonig??e&osaru?seay??i&hsagih?jomihs?k&a&gihsi?not??ihsakot??m&a&ginuk?kihsug?maz??igo?otekat??nuga!noy???n&a&moti?timoy?wonig??i&jikan?k???o&gan?jnan?tiad&atik?imanim???u&botom?kusug&akan!atik??imot??rab&anoy?eah???????c&204ugv--nx?462a0t7--nx?678z7vq5d--nx?94ptr5--nx?a??d&17sql1--nx?3thr--nx?5&20xbz--nx?40sj5--nx??7&87tlk--nx?ptlk--nx??861ti4--nx?a?e??e&16thr--nx?5&1a4m2--nx?9ny7k--nx??im!.&a&bot?k&asustam?uzus??m&a&him?y&emak?im???ihs??nawuk?wi&em?k???e&bani?ogawak?si!imanim???i&arataw?gusim?h&asa?ciakkoy??k&a&mat?sosik?t??iat??raban??o&dat?hik?n&amuk?ihseru?o&du?mok????ust???mihe!.&a&m&a&h&ataway?iin??yustam??ij&awu?imak???taki!man???ebot?i&anoh?kasam?rabami??n&ania?egokamuk?oot??o&jias?kihcu?nustam?uhcukokihs?yi!es???u&kohik?zo????n!amihs!.&a&d&amah?ho?usam??kustay?m&a?ihsoni&hsin?ko???wakih??e&namihs?ustam??i&g&aka?usay??konikak?mikih??nannu?o&mu&kay?zi!ihsagih?uko???nawust?tasim??u&stog?yamat?????tawi!.&a&bahay?d&amay?on??koirom?t&a&honat?katnezukir??imus??w&as&ijuf?uzim??ihs???e&hon&i&hci?n??uk??tawi??i&a&duf?murak?wak??h&custo?si&amak?ukuzihs???j&oboj?uk??k&a&m&anah?uzuk??sagenak??esonihci??m&akatik?uzia&rih?wi????o&kayim?no&rih?t??tanufo??uhso????g&3zsiu--nx?71qstn--nx?l??h&03pv23--nx?13ynr--nx?22tsiu--nx?61qqle--nx??i&54urkm--nx?g&ayim!.&a&dukak?m&a&goihs?kihs??ihsustam!ihsagih??un&awi?nesek???r&awago?iho??ta&bihs?rum??w&a&gano?kuruf??iat??y&imot?ukaw???e&mot?nimes??i&hsiorihs?ka&monihsi?s&awak?o???mak?r&ataw?o&muram?tan????o&az?jagat?t&asim?omamay???u&fir?k&irnasimanim?uhsakihcihs?????ihcot!.&a&g&a&h?kihsa??ust??kom?m&ay&o?usarak??unak??r&a&boihsusan?watho??iho?ukas??t&akihsin?iay??wa&konimak?zenakat??y&imonustu?oihs???e&iiju?kustomihs?nufawi??i&akihci?g&etom?ihcot?on???o&k&ihsam?kin??nas?sioruk?tab??u&bim?san?????h&c&ia!.&a&dnah?m&a!h&akat?im??yuni??ihs&ibot?ust???r&a&hat?tihs??ik?u&ihsagih?kawi???t&ihc?o&k?yot???wa&koyot?zani??yi&monihci?rak???e&inak?k&aoyot?usa??manokot?noyot??i&a&gusak?kot?sia??eot?h&asairawo?cugo?s&ahoyot?oyim???k&a&mok?zako??ihssi??motay?rogamag??n&an&ikeh?ok??ihssin??o&got?ihsin?jna?rihsnihs?suf?tes??u&bo?raho?s&oyik?takihs??yrihc?zah????ok!.&a&dusay?kadih?mayotom?r&ah&im?usuy??umakan??sot!ihsin??wa&g&atik?odoyin??k&as?o????i&esieg?hco!k??jamu?k&a!sus??usto??ma&gak?k??rahan??o&mukus?n&i?ust!ihsagih???torum?yot!o???u&koknan?zimihsasot????ugamay!.&a&m&ayukot?ihso??toyot??e&bu?subat??i&gah?kesonomihs?nukawi?rakih??nanuhs?otagan?u&ba?foh?otim?stamaduk?uy?????sanamay!.&a&dihsoyijuf?mayabat?r&ahoneu?ustakihsin??w&a&k&ayah?ijuf??suran??ohs???egusok?i&ak?h&cimakan?s&anamay?od???k&asarin?u&feuf?sto????o&k&akanamay?ihcugawakijuf??nihso?t&asimawakihci?ukoh??uhc??spla-imanim?u&b&nan?onim??fok?hsok?rust?????ka&rabi!.&a&bukust?gok?kan!ihcatih??m&a&sak?timo?wi??ihsak?ustomihs??ni?r&a&hihcu?way??u&agimusak?ihcust???t&ag&amay?eman??oihcatih??w&ag&arukas?o??os??yi&moihcatih?rom???e&bomot?dirot?not?tadomihs??i&a&k&as?ot??rao??esukihc?gahakat?h&asa?catih??k&a&rabi?saguyr??ihsani?uy??ma?rukustamat??o&dnab?giad?him?kati?rihsijuf?soj?t&asorihs?im??yihcay??u&fius?kihsu?simak????sagan!.&a&m&abo?ihsust??natawak?r&abamihs?u&mo?ustam???wijihc?yahasi??i&akias?hies?k&asagan?i??masah??neznu?o&besas?darih?t&eso?og!imaknihs????ust&igot?onihcuk?uf????zayim!.&a&biihs?guyh?k&oebon?ustorom??mihsuk?r&emihsin?uatik??ta&katik?mim??wag&atik?odak??ya??e&banakat?sakog??i&hsayabok?kaza&kat?yim??m&animawak?ot&inuk?nihs????nanihcin?o&j&ik?onokayim??n&ibe?ust??tias??urahakat????ro&moa!.&a&dawot?turust?wasim??e&hon&ihc&ah?ihs??nas?og?ukor??sario??i&anarih?ganayati?hsioruk?jehon?kasorih?makihsah?nawo?r&amodakan?omoa???o&gnihs?kkat??u&ragust?stum????ttot!.&a&r&ahawak?uotok??sa&kaw?sim???egok?irottot?nanihcin?o&ganoy?nih?tanimiakas??u&bnan?z&ay?ihc??????ukuf!.&a&deki?gurust?ma&bo?h&akat?im??yustak??sakaw??eabas?i&akas?ho?jiehie?ukuf??nezihce!imanim??ono????k&26rtl8--nx?4&3qtr5--nx?ytjd--nx??522tin--nx?797ti4--nx??l33ussp--nx?m&11tqqq--nx?41s3c--nx??n&30sql1--nx?65zqhe--nx?n7p7qrt0--nx??o&131rot--nx?7qrbk--nx?c?diakkoh!.&a&deki?gakihset?hcebihs?k&adih?u&fib?narihs???m&ayiruk?hot?ihs&orihatik?ukuf??oras?usta??r&ib&a!ka??o?uruf??ozo?u&gakihsagih?oyot???sakim?ta&gikust?mun??w&a&ga&k&an?uf??nus!imak???k&aru?i&h&asa?sagih??kat?mak??omihs?um??zimawi??ine?oyk??yot??e&a&mustam?nan??b&a&kihs?yak??o&noroh?to???ian?k&ihsam?ufoto??nakami?ppoko!ihsin??sotihc?tad!okah??uonikat??i&a&bib?mokamot?n&a&k&kaw?oroh??wi??eomak?ihsatu?okik?usta&moruk?sakan????eib?h&c&ioy?u&bmek?irihs???s&ase?ekka?oknar?uesom???jufirihsir?k&amamihs?i&at?n???m&atik?otoyot??oa&kihs?rihs??r&a&hs?kihsi?mot??ihs&aba?ir??otarib???n&a&hctuk?rorum?se?tokahs??uber??o&kayot?m&ire?ukay??naruf!ima&k?nim???orih?r&ih&ibo?suk??o&bah?h&i&b?hsimak??sa??pnan?yan??umen??t&asoyik?eko?ukoh???u&bassa?kotnihs?m&assaw?uo??pp&akiin?en&ioto?nuk??ip??rato?s&akat?t&eb&e?i&a?hs!a??robon??m&e?o&m?takan???no&h?tamah??o&mik?s?t??u&kir?ppihc?st???onihsnihs?ufuras??uaru??yru!koh??zimihs!ok?????g!oyh!.&a&bmat?dnas?gusak?k&at?o&oyot?y??uzarakat??m&ayasas?irah??wa&g&ani?okak??k&i&hci?mak??oy???yi&hsa?monihsin???i&asak?hs&aka?i&at?nawak???j&awa!imanim??emih??k&a&goa?s&agama?ukuf??wihsin??i&hsog?m???mati?oia?rogimak??n&annas?esnonihs??o&gasa!kat??ka?n&ikat?o?ustat??rihsay?sihs?tomus?yas??u&bay?gnihs?????nagan!.&a&bukah?d&a&w?yim??e&ki?u??ii??k&a&s&ay?uki??zus??ihsoo?ousay??m&ay&akat?ii??i&hsukufosik?jii??ukihc??n&i!hsetat??uzii??r&ah?ugot??saim?t&agamay?oyim??w&a&g&a&kan?n??o??kustam?ziurak??onim!imanim??u&koo?s!omihs????ya&ko?rih???e&akas?nagamok?subo??i&gakat?h&asa?c&a!mo!nanihs???uonamay??sukagot??k&a&kas?mimanim?to??ia&atik?imanim??oa?uzihcom??m&akawak?ijuf?o!t???r&ato?ijoihs?omakat???n&ana?esnoawazon??o&hukas?n&a&gan?kan??i&hc?muza??ustat??romok?si&gan?k??tomustam??u&k&as?ohukihc??stamega????to&mamuk!.&a&gamay?mihsak?rahihsin?s&ok?ukama!imak???tamanim??enufim?i&h&cukik?soyotih??k&ihsam?u??nugo!imanim??romakat??o&ara?rihsustay?sa?t&amay?om&amuk?us??u!koyg???yohc??u&sagan?zo????yk!.&a&bmatoyk?k&ies?oemak?uzaw??mayi&h&cukuf?sagih??muk??nihsamay?rawatiju?t&away?ik???e&ba&nat!oyk??ya??di?ni??i&ju?kazamayo?manim??natnan?o&gnatoyk?kum?mak?rihsamayimanim?y&gakan?ka&koagan?s??oj???u&ruziam?z&ayim?ik??????wtc1--nx?ykot!.&a&d&i&hcam?mus??oyihc??k&atim?ihsustak??m&a&t!uko??yarumihsa&gih?sum???i&hs&agoa?ika?o!t??uzuok??ren???r&a&honih?wasago??iadok?umah??ssuf?t&ik?o??wa&g&anihs?ode??k&ara?ihcat???y&agates?ubihs???e&amok?donih?m&o?urukihsagih??soyik??i&enagok?gani?h&ca&da?tinuk??sabati??j&nubukok?oihcah??manigus??o&huzim?jihcah?n&akan?ih!sasum??urika??rugem?t&a&mayihsagih?nim??iat?ok??uhc?yknub??u&fohc?hcuf?kujnihs?????r&2xro6--nx?g?o??s&9nvfe--nx?xvp4--nx??topsgolb,u&4rvp8--nx?fig!.&a&d&eki?ih??kimot?m&ayakat?ihsah??ne?raha&gi&kes?makak??sak??taga&may?tik??wa&g&ibi?ustakan??karihs!ihsagih????e&katim?uawak??i&gohakas?hc&apna?uonaw??k&ago?es?ot??m&anuzim?ijat??nak?urat??nanig?o&dog?jug?makonim?nim?roy?sihcih??u&fig?s&otom?t&amasak?oay???????x5ytlk--nx?yu6d27srjd--nx?z72thr--nx?井福?京東?分大?取鳥?口山?城&宮?茨??媛愛?山&富?岡?歌和??岡&福?静??島&児鹿?広?徳?福??崎&宮?長??川&奈神?石?香??庫兵?形山?手岩?木栃?本熊?根島?梨山?森青?潟新?玉埼?田秋?知&愛?高??縄沖?良奈?葉千?賀&佐?滋??道海北?都京?重三?野長?阜岐?阪大?馬群???k!.&art?gro?moc?per?ude?vog???leh?m!ac?j??nd?o&g?hpih?lnud?oc?t??pa?ra&a?hs??t?u&ekam?llag?org!cts?kouk?nayalo???vsr??q&a!3a9y--nx??g?i!.&gro?lim?moc?ten?ude?vog???m?se??r&a!.&bog?gro?lim?moc!.topsgolb,?rut?t&en?ni??ude?vog??4d5a4prebgm--nx?b?c?eydoog?los?pom?t&at?s!ivom?uen???ugaj??b!.&21g?b!mi??c&er?sp?te??d&em?mb?n&f?i??rt??f&gg?ni??g&el?l&s?z??n&c?e??ol&b?f?v??pp?ro??i&kiw?sp?te?xat??l&el?im?sq??m&a?da?f?ic?oc!.topsgolb,??nce?o&ce?do?et?i&b?dar??rp?ta??p&m!e?t??ooc?se??qra?r&af?ga?oj?tn?ut??su&j?m??t&am?e&n?v??nc?o&f?n??ra?sf??ude?v&da?og?rs?t????c!.&as?ca?de?if?o&c?g??ro???e&bew?ccos?dnik?e&b?n&igne?oip??rac??gni&arg?rheob??h&cor?t&aew?orb???it&norf?rac??k&col?o&p?rb???l&aed?ffeahcs?syrhc??nes?pinuj?t&a&eht?rebsnegömrev??law?nec?s&acnal?ubkcolb??upmoc??v&o&c&sid?tfiws??rdnal??resbo??wulksretlow?ywal??f!.&aterg?cidessa?drp?e&citsuj-reissiuh?rianiretev?sserp??i&cc?rgabmahc??m&o&c?n??t??n&eicamrahp?icedem??ossa?se&lbatpmoc-strepxe?riaton?tsitned-sneigrurihc?uova??t&acova?opsgolb,r&epxe-ertemoeg?op!orea????vuog??avc7ylqbgm--nx??g!.&gro?moc?t&en?opsgolb,?ude?vog???h!.&eman?mo&c?rf??topsgolb,zi??ur??i!.&a&61f4a3abgm--nx?rf4a3abgm--nx??ca?di?gro?hcs?oc?ten?vog?نار&يا?یا???aper?ew?lf??k!.&c&a?s??e&n?p?r??gk?iggnoeyg?kub&gn&oeyg?uhc??noej??l&im?uoes??man&gn&oeyg?uhc??noej??n&as&lu?ub??o&e&hcni?jead??wgnag???o&c?g??ro?s&e?h?m??topsgolb,u&gead?j&ej?gnawg????cilf??l!.&gro?moc?ten?ude?vog???m!.&topsgolb,vog???n!.&gro?moc?ofni?ten?ude?vog?zib???o&cs?htua?odtnorf?t&ca?laer???p!.&alsi?ca?eman?forp?gro?moc?o&fni?rp??t&en?se??ude?vog?zib???s?t!.&21k?bew?cn!.vog??eman?gro?l&e&b?t??im?op??moc!.topsgolb,?neg?ofni?pek?rd?sbb?ten?ude?v&a?og?t??zib??f?m??ubad??s&8sqif--nx?9zqif--nx?a!.vog?birappnb?gev?lliv?mtsirhc?s??b!.&gro?moc?ten?ude?vog??c?oj?s?u??c&i&hparg?p?t&sigolyrrek?ylana???od??d&a?d?l!anodcm??n&ahdoog?iwriaf?omaid??oogemoh?rac??e!.&bog?gro?mo&c!.topsgolb,?n??ude??civres?d&d2bgm--nx?oc??h&ctaw?guh??i&lppus?rtsudni?treporp!yrrek???jaiv?korbdal?l&aw?cycrotom?etoh?gnis?pats??m&ag?oh?reh??nut?ohs?picer?r&it?ut&cip?nev???s!i&rpretne?urc??ruoc??taicossa?vig??g!nidloh??h5c822qif--nx?i!.&ekacpuc,gro?moc?t&en?ni?opsgolb,?ude?vog??a09--nx?nnet?rap?targ??k&c&or?us??hxda08--nx?row??l!.&gro?oc??a&ed?tner??e&ssurb?tohyrrek??lahsram?m?oot??m!.&gro?moc?ten?ude?vog??b?etsys?ialc??n&a&f?gorf?ol??egassap?ia&grab?mod??o&it&acav?cudorp?ulos??puoc??ud??o&dnoc?geuj?leuv?ppaz?t&ohp?ua???p!.&ces?gro?moc?olp?ten?ude?vog??i&hsralohcs?lihp?t??u??r!.&ca?gro?ni?oc?topsgolb,ude?vog??a&c?p?tiug??c?e&dliub?erac?gor?levart?mraf?n&niw?trap??psan?wolf??ot&cartnoc?omatat??pj?uot??s&alg?e&n&isub?tif??rp!xe!nacirema?tneiro???xnal??iws??t&a&e&b?ytic??ob??ek&cit?ram??fig?h&cay?gilf??n&atnuocca?e&mt&rapa?sevni??ve???oob?rap??u!.&a&c!.&21k?bil?cc???g!.&21k?bil?cc???i!.&21k?bil?cc???l!.&21k?bil?cc???m!.&21k!.&hcorap?rthc?tvp???bil?cc???p!.&21k?bil?cc???si?v!.&21k?bil?cc???w!.&21k?bil?cc????c&d!.&21k?bil?cc???n!.&21k?bil?cc???s!.&21k?bil?cc????d&ef?i!.&21k?bil?cc???m!.&21k?bil?cc???n!.&bil?cc???s!.&bil?cc????e&d!.&21k?bil?cc???las-4-&dnal,ffuts,?m!.&21k?bil?cc???n!.&21k?bil?cc????h&n!.&21k?bil?cc???o!.&21k?bil?cc????i&h!.&bil?cc???m!.&21k?bil?cc???nd?r!.&21k?bil?cc???v!.&21k?bil?cc???w!.&21k?bil?cc????jn!.&21k?bil?cc???k&a!.&21k?bil?cc???o!.&21k?bil?cc????l&a!.&21k?bil?cc???f!.&21k?bil?cc???i!.&21k?bil?cc????mn!.&21k?bil?cc???n&i!.&21k?bil?cc???m!.&21k?bil?cc???sn?t!.&21k?bil?cc????o&c!.&21k?bil?cc???m!.&21k?bil?cc????r&a!.&21k?bil?cc???o!.&21k?bil?cc???p!.&21k?bil?cc????s&a!.&21k?bil?cc???dik?k!.&21k?bil?cc???m!.&21k?bil?cc????t&c!.&21k?bil?cc???m!.&21k?bil?cc???u!.&21k?bil?cc???v!.&21k?bil?cc????ug!.&21k?bil?cc???v&n!.&21k?bil?cc???w!.cc???xt!.&21k?bil?cc???y&b-si,k!.&21k?bil?cc???n!.&21k?bil?cc???w!.&21k?bil?cc????za!.&21k?bil?cc????ah!uab??bria?col?e?ineserf?lp?xe&l?n???vt?w!.&gro?moc?s&ndnyd,tepym,?ten?ude?vog??a?e&iver?n??odniw??y&alcrab?cam?ot???t&0srzc--nx?a!.&ca?o&c!.topsgolb,?fni,?ro?v&g?irp,?zib,?c?e!s??hc?if?l?mami?rcomed??b!.&gro?moc?ten?ude?vog??b?gl??c&atnoc?e&lesi?nnocu?rid!txen????dimhcs?e!.&eman?gro?moc?ofni?ten?ude?vog?zib??b?em?g&aip?rat??id?k&circ?ram??n!.&77ndc.r,a&l-morf,z,?bg,dnab-eht-ni,e&ht-no-eciffo,libom-eruza,mohtanyd,nozdop,rehurht,s,tis-repparcs,?fehc-a-si,k&eeg-a&-si,si,?u,?lss-77ndc,ni,o&c-morf,jodsnd,?p&i&emoh,fles,?j,mac-dnab-ta,o&-oidar-mah,hbew,?paduolc,tfe&moh,vres,??s&aila&nyd,snd,?bbevres,e&suohsyub,tisbeweruza,?ndgolb,sa-skcik,?t&enretnifodne,i-&ekorb,s&eod,lles,teg,??norfduolc,sixetnod,?uh,x&inuemoh,unilemoh,?y&ltsaf.&dorp.&a,labolg,?lss.&a,b,labolg,??n-morf,?za-morf,?ii?kyk?m??p?tcip?v??f&ig?o&l?sorcim???g!.&bog?dni?gro?lim?moc?ten?ude???h!.&dem?gro?l&er?op??m&oc?rif??o&fni?rp?s&rep?sa???po&hs?oc??t&en?luda?ra??ude?vuog???i!.&a&at?b?c!cul??dv?i&blo&-oipmet?oipmet??cserb?drabmol?g&gof?urep??l&gup?i&cis?me&-oigger?oigger???uig&-&aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf???aizenev&-iluirf?iluirf??ev&-iluirf?iluirf??v&-iluirf?iluirf????n&a&brev?cul?pmac?tac??idras?obrac&-saiselgi?saiselgi??resi??otsip?r&b&alac!-oigger?oigger??mu??dna&-&attelrab-inart?inart-attelrab??attelrabinart?inartattelrab?ssela??epmi?ugil??tnelav&-obiv?obiv??vap?z&e&nev?ps&-al?al???irog???l&iuqa!l??leib??m&or?rap??n!acsot?e&dom?is?sec&-ilrof?ilrof???g&amor&-ailime?ailime??edras?olob??i&ssem?tal??ne!var??o&cna?merc?rev?vas???oneg?p?r!a&csep?rr&ac&-assam?assam??ef??von??etam?tsailgo!-lled?lled???s!ip?sam&-ararrac?ararrac??u&caris?gar???t!a&cilisab?recam??resac?soa!-&d&-&ellav?lav??ellav?lav??ellav??d&-&ellav?lav??ellav?lav??ellav??te&lrab&-&airdna-inart?inart-airdna??airdnainart?inartairdna??ssinatlac???udap?v!o&dap?neg?tnam???zn&airb&-a&lled-e-aznom?znom??a&lledeaznom?znom??eaznom??e&c&aip?iv??soc?top??om???b&c?m!u??v??c&f?is?l?m?p?r?v??d&p?u??e&c!cel?inev?nerolf??f?g!ida&-&a&-onitnert?onitnert??otla!-onitnert?onitnert???a&-onitnert?onitnert??otla!-onitnert?onitnert????hcram?l?m!or??n&idu?o&n&edrop?isorf??torc???p?r?s&erav?ilom??t!nomeip?s&eirt?oa!-eellav?eellav????v?znerif??g&a?b?f?il?o?p?r?up?vf??hc?i&b?c?dol?f?l!lecrev?opan?rof&-anesec?anesec???m?n&a&part?rt&-attelrab-airdna?attelrabairdna???imir?ret??p?r!a&b?ilgac?ssas???s!idnirb??t&ei&hc?r??sa??v??l&a!c??b?c?o&m?rit&-&d&eus&-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert???d&eus!-onitnert?onitnert??us&-onitnert?onitnert???s&-onitnert?onitnert?????m&ac?f?i?ol?r??n&a!lim?slab??b?c?e!v?zob??irut?m!p??p?r?t??o&a!v??b!retiv??c!cel??enuc?g!ivor??i&dem&-onadipmac?onadipmac??pmet&-aiblo?aiblo??rdnos?zal??l?m!a&greb?ret??oc?re&f?lap???n!a&dipmac&-oidem?oidem??lim?tsiro?zlob??ecip&-ilocsa?ilocsa??i&bru&-orasep?orasep??lleva?rot?tnert??r&elas?ovil??ulleb??p?r!a&sep&-onibru?onibru??znatac??oun??s!ivert?sabopmac??t!arp?e&nev?ssorg??n&arat?e&girga?rt?veneb????zz&era?urba???p&a?s?t??qa?r&a!m?s??b!a??c?f?g?k?me?o?p?s?t?v??s&a&b?iselgi&-ainobrac?ainobrac???b?c?elpan?i?m?ot?s?t?v??t&a?b?c?l?m?nomdeip?o!psgolb,?p?v??u&de?l?n?p??v&a?og?p?s?t?v??y&drabmol?ellav&-atsoa?atsoa??licis?nacsut??z&al?b?c?p???derc?er?f?m?utni??je3a3abgm--nx?kh?l!.&topsgolb,vog??uda??m!.&gro?moc!.topsgolb,?ten?ude???n&a&morockivdnas?ruatser?tnuocca??e&g?m&eganam?piuqe??r??i!.ue?m?opdlog?rpatsiv??opud?uocsid??o&b?cs?d?g?j?oferab?p&edemoh?s???p!.&emon?gro?lbup?moc?t&en?ni?opsgolb,?ude?vog???r&am&law?s??epxe?op&er?pus?srepus??s??s!.&adaxiabme?e&motoas?picnirp?rots??gro?lim?moc?o&c?dalusnoc??ten?ude?vog??a&cmoc?f??e&b?padub?r?uq??i!rolf?tned??o&h?p!e???urt??t!.&eman?gro?ibom?levart?m&oc?uesum??o&c?fni?r&ea?p???pooc?sboj?t&en?ni??ude?vog?zib??ayh?n?o!bba?irram???uognah?xen?y?ztej??u&2&5te9--nx?yssp--nx??a!.&a&s?w??civ?d&i?lq??fnoc?gro?moc!.topsgolb,?nsa?ofni?sat?t&ca?en?n??ude!.&a&s?w??civ?dlq?sat?t&ca?n??wsn???vog!.&a&s?w??civ?dlq?sat???wsn?zo??ti??c!.&fni?gro?moc?ten?ude?vog??i??d&e?iab??e?h!.&0002?a&citore?idem?kitore??edszot?gro?ilus?letoh?m&alker?lif?t?urof??naltagni?o&c?ediv?fni?levynok?nisac??pohs?rarga?s&a&kal?zatu??emag?wen??t&lob?opsgolb,rops??virp?xe&s?zs??ytic?zsagoj??os?sut??l!.topsgolb,?m!.&ca?gro?moc?oc?ro?ten?vog???n!.&eni&esrem,m,?tenkcahs,?em??o&ggnaw?y!c???r!.&a&dgolov?gulak?i&hsavuhc?kymlak?lerak?rikhsab?ssakahk?t&ayrub?rumdu?ukay??vodrom??k&dohkan?nidud?t&a&hcmak?yv??ingam?okuhc???l&o-rakhsoj?ut??mortsok?nalap?ramas?tihc?vut?yegyda?znep??bps?ca?d&arg&oglov?z??nr?orogleb??e&du-nalu?niram??g&bc?ineok?r&o?ub&-e?n&ero?iretakey?????hzenorov?i&a&natsuk?tla??mok?ram??k&ihclan?otsovidalv?s&l&aru-k?egnahkra?iron??m!o!t???n!a&mrum?yrb??eloms?i&baylehc?lahkas-onhzuy??odv??r&ayonsark?ib&isovon?mis??ogitayp?u&k?ma???t!epil?ukri??v&ehzi?o&rabahk?stbur?????l&a&kiab?ma&j?y???e&-iram?hc??im?o&kso?porvats?yro??valsoray??m&du?o&c?t??rep??n&a&buk?dagam?gruk?hkartsa?rzys?ts&egad?ratat??za&k?yr???emuyt?ilahkas?rv?ystirast??ovo&navi?remek??pp?r&aj?evt?hck?i&b?midalv??uma??s&itym?mk?sabzuk??t&en?ni?opsgolb,s&aeraf?et??ugrus??ude?v&hk?o&bmat?g?n!n??rik?taras??ts??wmc?ynzorg?z&akvakidalv?kn?ns?tp???myc?p?ug??s!.&a&dgolov?gulak?i&kymlak?lerak?rikhsab?ssakahk?vodrom??lut?vut?yegyda?znep??bps?gunel?i&hcos?ttailgot??k&ihclan?s&legnahkra?m?n&a&mrum?yrb??inbo??tiort?vorkop???na&gruk?tsegad??ovonavi?r&adonsark?imidalv??vo&hsalab?n??ynzorg?zakvakidalv??t&amok?i&juf?masih????v!.&gro?moc?ten?ude???y&ap?kuyr???v&b?c!.topsgolb,?ed?ih?l!.&di?fnoc?gro?lim?moc?nsa?ten?ude?vog???m!.&eman?gro?lim?m&oc?uesum??o&fni?r&ea?p???pooc?t&en?ni??ude?vog?zib???o&g?m??rt?s!.&bog?der?gro?moc?ude???t!.&bew-eht-no,naht-&esrow,retteb,?sndnyd,?d?gh?i?og?sd?won??uqhv--nx??w&a!.moc?hs?l??b!.&gro?oc???c!.&gro?moc?ten?ude??cp??e&iver?n?s??g?m!.&ca?gro?m&oc?uesum??oc?pooc?t&en?ni??ude?vog?zib??b??o&csom?h!s??n??p!.&de?en?o&c?g??ro?ualeb???r!.&ca?lim?moc?oc?t&en?ni??ude?v&og?uog???n??t!.&a46oa0fz--nx?b&82wrzc--nx?ulc??emag?gro?lim?moc?t&en?opsgolb,?ude?v&di?og?ta0cu--nx??zibe?業商?織組?路網????x&a!t??c!.&hta,vog???e&d&an?ef?nay??ma!nab??rof?s??ilften?jt?m!.&bog?gro?moc?t&en?opsgolb,?ude??g?ma2ibgy--nx??o&bx?rex!ijuf???s!.vog??x&am&jt?kt??x???y&4punu--nx?7rr03--nx?a&d!i&loh?rfkcalb??ot??lp?pila?rot?wdaorb??b!.&fo?lim?moc!.topsgolb,?vog??ab??c&.&ca?dtl?eman?gro?m&oc!.topsgolb,?t??orp?s&egolke?serp??t&en?nemailrap??vog?zib??amrahp?nega??d&dadog?uts??e&kcoh?ltneb?n&dys?om?rotta??snikcm??g!.&moc?oc?ten??olonhcet?rene??hpargotohp?k!.&gro?moc?ten?ude?vog??s??l!.&clp?d&em?i??gro?hcs?moc?ten?ude?vog??f?i&bom?maf!nacirema???l&a?il??ppus??m!.&eman?gro?lim?moc?t&en?opsgolb,?ude?vog??edaca?ra??n&a&ffit?pmoc!ylimafa???os??o&j?s??p!.&gro?lim?moc?pooc?ten?ude?vog???r&e&grus?llag?viled??lewej?otcerid?tnuoc?uxul??s!.&gro?lim?moc?ten?ude?vog??pil??t&efas?i&c!elet??ledif?n&ifx?ummoc??ruces?srevinu??laer?r&ap?eporp???u!.&bug?gro?lim?moc!.topsgolb,?ten?ude??b!tseb???van!dlo??xes??z&a!.&eman?gro?lim?moc?o&fni?rp??pp?t&en?ni??ude?vog?zib???b!.&az,gro?moc?ten?ude?vog???c!.topsgolb,?d!.&gro?lop?moc?ossa?t&en?ra??ude?vog???ib!.&e&ht-rof,mos-rof,rom-rof,?p&ifles,ohbew,?retteb-rof,sndnyd,?g??k!.&gro?lim?moc?ten?ude?vog???n!.&asq-irom--nx?ca?gro?htlaeh?i&r&c?o&am?ām???wi!k???keeg?l&im?oohcs??neg?oc!.topsgolb,?t&en?nemailrap?vog???a!niflla???rawhcs?s!.&ca?gro?oc???t!.&c&a?s??e&m?n??ibom?l&etoh?im??o&c?fni?g??ro?vt???u!.&gro?moc?oc?ten??rwon??yx?zub??λε?авксом?брс!.&гро?до?ка?р&бо?п!у?????гро?дкм?зақ?итед?леб?мок?н&йално?ом??рку?сур?тйас?фр?յահ?םוק?اي&روس?سيلم??برغملا?ة&كبش?ي&دوعسلا?روس??یدوعسلا??ت&اراما?راھب??ر&ئازجلا?ازاب?صم?طق??سنوت?عقوم?قارع?كتيب?موك?ن&ا&تس&كاپ?کاپ??دوس?ر&يا?یا??مع?يلعلا??درالا?ميلا?يطسلف??ه&ارمه?يدوعسلا??وكمارا?ي&بظوبا?ليابوم??ۃیدوعسلا?टेन?तराभ?नठगंस?मॉक?তরাভ?ালংাব?ਤਰਾਭ?તરાભ?ாயித்நஇ?ைக்ஙலஇ?்ரூப்பக்ஙிச?్తరాభ?ාකංල?มอค?ยทไ?ეგ?なんみ?アトス?トンイポ?ドウラク?ムコ?ル&グーグ?ーセ??ンョシッァフ?业企?东广?乐娱?亚基诺?你爱我?信中?务政?动移?博微?卦八?厅餐?司公?品食?善慈?团集?国中?國中?址网?坡加新?城商?宝珠?尚时?山佛?店&号一?商?网?酒大里嘉??府政?康健?息信?戏游?拿大?机手?构机!织组??标商?歌谷?浦利飞?港香?湾台?灣&台?臺??物购?界世?益公?看点?科盈訊電?站网?籍書?线在?络网?网文中?行工?表手?车汽众大?通联?里嘉?锡马淡?門澳?门澳?闻新?電家?국한?넷닷?성삼?컴닷??\");" ], [ "UNDER", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> UNDER = TrieParser.parseTrie(\"db?e&k?y??gp?h&k?s.mroftalp,?in?jf?k&c?f?u.hcs??li?m&j?m?z??nb?p&j.&a&mahokoy?yogan??ebok?i&adnes?kasawak??oroppas?uhsuykatik??n??r&b.mon?e??ug?w&k?z??zm??\");" ], [ "EXCLUDED", "com.google.thirdparty.publicsuffix", "PublicSuffixPatterns", "public static final ImmutableMap<String,PublicSuffixType> EXCLUDED = TrieParser.parseTrie(\"kc.www?pj.&a&mahokoy.ytic?yogan.ytic??ebok.ytic?i&adnes.ytic?kasawak.ytic??oroppas.ytic?uhsuykatik.ytic??zm.atadelet??\");" ] ],
  "tokensMethodJavadocValues" : [ [ "-1", "int" ] ],
  "tokensMethodArguments" : [ [ "array", "", "short[]" ], [ "target", "", "short" ] ],
  "tokensMethodVariablesNonPrivateNonStaticNonVoidMethods" : [ [ "equals", "java.lang", "Object", "public boolean equals(Object arg0)" ], [ "hashCode", "java.lang", "Object", "public native int hashCode()" ], [ "toString", "java.lang", "Object", "public String toString()" ], [ "getClass", "java.lang", "Object", "public final native Class<? extends Object> getClass()" ], [ "clone", "java.lang", "Object", "protected native Object clone() throws CloneNotSupportedException" ], [ "equals", "", "short[]", "public boolean equals(Object);" ], [ "toString", "", "short[]", "public String toString()" ], [ "hashCode", "", "short[]", "public native int hashCode()" ], [ "getClass", "", "short[]", "public final native Class getClass();" ], [ "clone", "", "short[]", "public T[] clone();" ] ],
  "tokensMethodVariablesNonPrivateNonStaticAttributes" : [ [ "length", "", "short[]", "public final int length;" ] ],
  "tokensOracleVariablesNonPrivateNonStaticNonVoidMethods" : [ ],
  "tokensOracleVariablesNonPrivateNonStaticAttributes" : [ ]
} ]